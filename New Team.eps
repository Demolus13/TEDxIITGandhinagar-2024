%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 00.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: ASRock
%%CreationDate: 2/22/2018
%%BoundingBox: 0 0 509 356
%%HiResBoundingBox: 0 0 508.4468 355.8858
%%CropBox: 0 0 508.4468 355.8858
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">horizontal banners</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2018-02-22T12:16:24+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-02-22T12:16:24+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-02-22T12:16:24+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A4tmSrsVdirsVdirsVdiq&#xA;pbQNPcRQKQGldUUnoCxphiLNMZSoWsIoSAa074EtYpdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVel+dfynn0jy7a6paKF+qWkb6sZHJZ5nYA+mtDThyNem1Oprms02u4pmJ6n0ux1Gi4&#xA;YCQ6Dd5pmzdc7FXYq7FXYq7FXYq7FXYqn+gaX+l9Xh0rS5JES9BF0s6qwRE+IsCPtFQNjxXfMftD&#xA;Ww02GWTp3efRnpdNLNkETz73tGk+QPKmm26Rpp8VxItOU9yizOzD9r4wQv8AsQM801PbWqyyszMR&#xA;3RND7P0vY4ez8MBXCD790D5l/LTy5qlpJ9TtY7C+VT6EsAEacgNg6KOJB77VzJ0Hb+owzHHIzh1B&#xA;3PwPNq1PZeLJH0jhl5PDr11MvpLbrbCGqFBUtUHcux6n7h7Z6XxiQBHJ44QMefND4GTsVdirsVdi&#xA;rsVdirsVdirOPLv5LfmT5h06DU9N0nlp9yvKC5kngiDDpUK7h6f7HImQCp5H/wA41fmm6BmtbWMn&#xA;qjXKVH/A8h+ODjCtv/zjT+aSqSLa0YgbKLlKn5VoMeMKhZP+cdPzaRCy6THIf5Furav/AA0ij8ce&#xA;MKxLzX5F82eUpoIvMOntYvdBzblnjkV/Tpz4tEzrtyHfJA2qAg8v69cKjQabdSrIAyMkEjBlIqCK&#xA;LuKZjT1uCO0pwFf0g3R0+Q8oyPwKt/hPzT/1Zr7/AKRpv+ach/KWm/1SH+mj+tl+UzfzJfIsz8m/&#xA;lAdc017nUb+TSrkSmEWssFHBFKEh2jJ5ctqDMbL2rESqFTHeJfqcrD2cZRuRMT3Uk2s+QNS8u+b9&#xA;O0q8pPbXlxEtrdqpCSo0iqdt6MOXxLmXj1UcmMyHMBx8mmOPIInqXu35mAHyFrVd/wDRz/xIZo9H&#xA;/ex97udX/dS9z5azp3nHYq7FXYq7FXYq7FXYq7FWW+QryHQ/N1jLdyxenOGhkKOHEfqCilmX4ftU&#xA;rvtmp7f0ksullGO8hv8AL9jmdl6gRzAnlye3TrdvO4icgKoKqCBueh6b9GzjNHPS48MTkiCZSonc&#xA;7C7HPargRVHnvRp32pjnnlkISqhsNh7vfykN9vjuta9Wxtbq4vZv3FqC8kjU2AHKmwHamU63DDKc&#xA;fgw4Tk6C996vcn+IS8qDbpck4CfiS4hDrt7+gHSnzjeT2lw0s4WRLmSRnIJVkIZifAFaV989NxwE&#xA;YCPUB5CciZE9ChMkrsVdirsVdirsVdirsVZt5r/LwaR5Q0TzFayvNFfwxNeo/H93JPGJEKUA+Hqu&#xA;/f55g6fVmeSUD0OzmZ9KIY4zHUbvpn8gNRhvfyo0UI/OS1E1tMtalWSZyFP+wZSPY5fPm4b0PIq7&#xA;FXYq+fv+ctwP0f5aNNxLdgH5rFlmNUXopQ6PYlKcDbxcabCnAUzyTVX4s7/nH73vMH0R9wRmUNqX&#xA;eZF5eXtTWpU/VJ6MNiCIyQR7g5l6CVajGf6cfvaNULxS/qn7lTQre284+VPLeq6gSbu0khvFlWlT&#xA;PbMUevs7LuM7fKThySiOR2+bpsYGWEZHmN/k3+bdwIPy91dq0LrFGKGhPOZF/UcdCLzR/HRdaaxF&#xA;8x50rzzsVdirsVdirsVdirsVdiqpA0Kyq0yGSMVJQHjU02Fd9q9cIq92MrrZ7T+XWvalc6Ikl0jz&#xA;pH+5hlY1cqgGzGm/Fi1O9KV8c5ntL2e8a/BqI4r37yPV86i7HTdt+Cf3gMjVbd38Py3Yn+ZXmLV1&#xA;1RdNnUfo0qJza1YCUuTvIV4n4SPhFewPXNnouzMeCQmQDMARHkAK29/M+ZLjZNdLNAgEgEkn33f2&#xA;ch5B59myaXYq7FXYq7FXYq7FXYqj9BnsoNbsJr6NZbKO4ia6jcclMQccwR3+HK8sSYEDnTPEQJAn&#xA;lb6U/MPS4Lv8vtVtIUX0obX1YEjACgW1JVCgbUonQZzmkmRliT3/AHvQaqAOIgdz5nsotVYO9ik5&#xA;Ap6jQByB4ciudKZAc3nREnk+l/8AnFW+v7ny5raXVxLMsN3GsSSuzcKx7hQxNMhND3DK1eVf85Ge&#xA;b9f8t+TbOTRLp7K5vb1YJbmOgkEQikcqpp8JLKNxvk4Cyr5V1vzP5j16SOTWtTudRaEEQ/WZXlCc&#xA;qV4BiQtaCtMtAV9B+WnEnlzSpAKB7O3YD5xKc8k14rUZB/Tl95e60pvFE/0R9yl5ukuo/K+qS2sr&#xA;Q3EVtJIkqGjLwXkSCKU2GT7METqcYkLiZAV72OsJGGRBo0Xn/lLzj5U1Ty5JoXnF7n1VZmXVAZZH&#xA;KsSRykXm441pQgrTO/y6DwsnHijEeVAPOYtXGcODIT793snlSDQbfQLSDQZUm0qJSLd0f1AasWar&#xA;fzcia5rs5mZkz+p2OEREQI/Swr8/NQ9DynbWYPx3l2tR4pErMf8AhuOZvZcLyE9wcTtKVQA7y+f8&#xA;3zpHYq7FXYq7FXYq7FXYq7FWXflz5S0nzLfapDqV4bOOz0+e5gK0q0ygLHWoPwKzcn9spzZhjFls&#xA;xYjM0Gf+S7JHmtLa5S8/QiaJHLaPYEpG92SZJy0gB+Opf4SPntlmXHMC8YsmutOJE4pn96aq+n6v&#xA;vSS38n3PmLTrRPMt/Jpl9b299fSTvbtcSiCJogiSIGjZa/GykknbYZHMRjAJu5Gm3TR4yYx+mIv9&#xA;by3LGTsVdirsVdirsVdirsVdir6a/K7VRrvkGzW7HqNCj2NwG35LH8Ir84ytc5rWw4Mpr3vQaOfH&#xA;iF+5V80y6r5T8pxDyjpcVx9VZENtwd+MNDyfhGVd2rSprXucGERy5P3h5ssxlih+7HJlH5Gavca5&#xA;ouoavcaYml3M1yIbuIKVaWWONW9b4grUKyBd69OubXDiMCQJcUenk6fU5ROjw8Mur0vMhxXgn/OW&#xA;s1NF8vQU+3czvX/UjUf8b5ZjV80Zar6Q8nPz8qaO1KUs4F/4GML/AAzybtQVqsn9eX3vcaI3hh/V&#xA;H3JwQCKHcHMFyWqClKbdKY2rGvya1nTP8NTafEpiuLK5l+s0Bo3quxRh/sRx+jPZ8OGE4gmIJruf&#xA;NNTlyQkQJER8iu/Omexm8jzclEkyTwmByu6MWoSCelVqMtlijEbABqwZZSnuSXz3lTnuxV2KuxV2&#xA;KuxV2KuxV2KvoP8A5xqfyva6Pd3Vwls+tXN+1tPJI0ZngslthJG8cbBn4vPVTQUPf7OY+eUR9XJn&#xA;CMifTzZb5ZufK7eaNbt9FjMdhEo+uwwKXt4by5hInjh4qPhqOm3x8umZGGfFCw4eox8M9+5I/Ifm&#xA;M6T+YPmPT7361S54RTNCpJtyyoYpGU/ZCpXemxyOYEy2a8ZMefUPDPPehPo3mGa3edJ2lUTsUJJU&#xA;yVJD16Gu/wAqZMwMdi34J8UWPYG52KuxV2KuxV2KuxV2KvqL8sfLs+geTrK0uRxu5q3NyhFCry78&#xA;D7qtAffOZ1mUZMhI5PRaTEYYwDzRHnrzjaeVNDfUJVE1w5EdpbVoZJD/AMaqNzkdNpzllTLUZxjj&#xA;ae/kT5gvPM/lq61++jjiuXuntUih5CMRRpGwqGZqsWY7+H47jFpI4jYJ3dLqNXLKADVB6Xl7ivnP&#xA;/nLmcGbytAK1Vb1z4HkYAP8AiJyzGr55y1X0X5Gk5+UNIalKWyL/AMCOP8M8p7XFarJ/WL22gN4I&#xA;e5Pc1zlvA9a88+dItSvLRtUlX0JpYqIEj+yxX9lVPbPTNJ2RpJY4yGMbxB6np73j8+vziZjxHYll&#xA;f5GMx/TdSTvbHfxPq1OdFg6uh1nRP/zf/wCUMk/4zxfrOTy/S1ab63hOYrsnYq7FXYq7FXYq7FXY&#xA;q7FWUfl3bzXPmD0Ladbe+aJ2s2ZihaRKOEVgDRiFNMx9TICFkWFGGWQgRNSe0/lwL/Q9N82WVtcg&#xA;asuvaHyljJq8d7dwDqeqyI7g+xORxTEogjkyliOM8MjZDDfN+tTf8rL833enkfWP0laWsbDfeNjD&#xA;IK/882rm00ZqJ/zXX6uIJF90nmnmi6a68w6hO0hlLzvWRt60NPuFKD2ynNXGacjBfAL7krytudir&#xA;sVdirsVdirsVZ7+TegaLrHmhv0mQ/wBTjFxbWpJHqSK4oTTqE6le/wAq5KMBKwWnNllAAjvfRobx&#xA;zS6nsmQN49x3dXaaTtqMhWXY9/R8xfmZ5xm8zeZJZF5Lp9mWgsYWqCFB+JyD0ZyK/Kg7Zm6PT+FC&#xA;v4jzatVn8SV9OjXlD80/PXlG0kstB1L6tZSyGaS2aKGVDIVClv3iMy7KPskZkmILjMytP+cofzKg&#xA;FJY9OuveaBx/yaljwcAVh/5jfmZr3n3Uba81WKC3WzjMVvb2wYIAzcmY82clm2+4YRGlYjklfQv5&#xA;dSCTyXpTcg1I2Wq/5LstPmKZ5b25GtZk9/6A9n2abwR9zI81TnJTc+U/LNzPJcXGl20s8pLSSNGp&#xA;ZmPUk065m4+0tRCIjHJIAebjy0mKRsxF+5hH5V3Wm2ms+ZojNFbxNcRi2RmVAUV5h8IJGwBGes9n&#xA;yJxRMufDH7nz7tGPrNcrKP8Azmv4V8r20COGa5uloFPVY1YsdutCVzKzHZx9KPU8VzGdg7FXYq7F&#xA;XYq7FXYq7FXYqq2tzNa3UNzC3GaB1kjbwZCGB+8YCLFFQaTq689eZptQuL+K8ezubpraS4a1LRB5&#xA;LNVEDkA9UK8hTYHpTIQxRiKHJOSRmbPNS07zZqNjcS3AjhuJp7gXUzzqzlnAcEH4hs3qEnvWlDl0&#xA;ZmPItUsUTz3SiVxJK7hBGHYsEWpC1NaDkWag9zkWxZirsVdirsVdirsVdir2X8mNBS20ifWZF/f3&#xA;rmKFiOkMZoaH/KetfkMyMMdrcDVTs0yD8xfP995a0mFbP03v7xmSEygngir8bihXcFlpXDkNNeDF&#xA;xnfk+eySSSTUnck5jOzTXRbCGZXmmXmoPFFPSvUnNZr9TKBEY7PaeyvY2LOJZso4gDQHS+p800k0&#xA;6xcUMCD/AFRxP4UzXR1WQfxF7HN2Ho8go4oD3Dh+6mN3dube5khO4U7H2O4zf4cnHASfKO09EdNq&#xA;J4v5p293MfYo9ctcFM5dN1nT4PrHJokBHIxvQgnbficqIhPYi2vHqBdRKmmva4i8U1G6VR2E0gH6&#xA;8rOjwnnCP+lDkjUZB/FL5lVPmjzQ44HV75gduP1iU1+jllY7O0w38OH+lH6mR1eX+fL5lA3Frdwk&#xA;G4ieMvuC4Ir49czAR0cYTB5FPfKPk2bzJBqjwXIil02ATrDwLmUb1ANRSnH3zG1Gp8Ix2viLlYNP&#xA;4glvXCFnnXyfe+V9ZlsJS81uAphvChRJOShiBuwqDUdcOm1Ayxvke5GpwHHKuY72P5ktDsVdiqO0&#xA;KGKfW9PgmUPFLcwpIh6FWkAIPzGAq9A80eU7GT6xJpunMLmTR2mjtvqzW07Tw6pHG8q2oaXiPqzc&#xA;aoxDBWbbcCIKqY8sQtaalpqaSIbtLaAtfyQtLDHPb6ZHNcwSyKwa2kEnJ+fQtVWHGtG1X6p5b8pn&#xA;TZ7eZF067mnsotO1AGkUcsumwzMlx1/dSuxq37DGvTljZVR13Q7LTtM1aOKwK3EWoX9szRWaXaos&#xA;MFuQGnMi+gqtI5DqG7nthBVGXOg2sWpWF+fL7xWxjurebTBaF7q2eCOIGb0Wk9O+ijMwZX+EtU8u&#xA;gOC1YrHoUNr+Zdvot0kUkA1WGCaGIOIjG86gpxkJdfhahVjUdDhvZWQ+UvLnlbVn8pW0iRwao8T3&#xA;N4k70hv4RfXEZQV+zNGkYoOjrtswAYEq7y5b6bfL5XiuNNtm+txak9y0dsjySNaQyej8NV5kEA8a&#xA;jkeuJVQbSPLN3ot6t+radezagkFhqMtutkIn+qK4juLdGlVIpG/aDfDs/TkMKphrPlS1ij8w6fDp&#xA;SW0lm08yag0JmtyLWzilktxOjj6vIh5MnVZC4U9sAKoM6R5aUaxeSW0KDy1NNJLbE0+sx3UQjs04&#xA;1+IRXa/H34v7Yqk3nSztbXT9KS2tXhV7OxlklNkkKM8tlFI5W6EjNMWd2JBUfhhCsRySuxV2Kvpj&#xA;yymlx6DZQ6XOlxZwxLHHMhqGIG5PgSdyMzY1WzqMl8Rt4j+Zeuvq3mu6AP8Ao9iTawL2/dkhz/sn&#xA;r9GYuSVl2GCHDH3sVyDeBbK7G3+r2scX7QFW+Z3Oc1qMvHMl9p7I0X5bTQx9QN/edyrqysKqQR02&#xA;8RlRBHNz4TjIWDaReYIqTxy9nWh+an+3Nx2bO4kdxfOvbTT8OeGT+dGvjH+1AWUfqXkEf88iL97A&#xA;ZsTyeKmaBZ9cQJPBJC/2JFKn6cxQadVE0befzwvBM8Mgo8bFW+jMoG3axNi058r6d6s5u5BWOE0j&#xA;938foGV5JdHH1OShTKLnyrq/mGxmi0u2+sT25VwvJE6mnVyo6VzGlqIYyOI1a6DT5MkjwC65pn+S&#xA;2m3+nectV0fU7eS2mewf1YJQVO0sYG3QghzQ5R2jMSxiUTe7vNBExyGMh0ZP+e8M7eR7R23kjvYT&#xA;Ow6bxSg/RyIzF7MrxT7v1OT2jfhD3vAM37pHYq7FVazt5rm8gtoP76eRI4qmnxOwVd/mcVej61+R&#xA;P5naJp93r156Kx2ETXE06XPKULGtSVpvWgyAmFUvKH5G/mT5k0gapZRx2dheryje6mMRnStQ3BQ7&#xA;FSdwWG/UYmQCpJqH5aedbLzba+U7+29HVL5lFpzkBhlBBCusgqpHw09uhw8Qq1TrzF+SP5oeXdGu&#xA;tTurdZLCBC959WuA5WMCjOyVBKgdaA0HtgEgVYNpq6nf6nY2ltM/1yWSO2s2LleDOwVAGr8Iq3bJ&#xA;K9Eu/wDnHP8AM+0t5r2WK1CW6NNI4uQWogLEjbrtkeMKh9D/ACC/MjWdJsdXsY7Y2l3Ek9qzXAVg&#xA;j/Eu1Ph64mYVjnkzyJ5r816xPpehqGu7GNpZWeT00RQ4Q0bxLN0GEmlQ2veVvMel+aX8tamp/S4m&#xA;iiKc+as8yr6ZDd6q43wgqn+qflL+YWmeY9O8sXKL9f1xS1siTconEIJPNht8CrXfoMHEFQU35X+d&#xA;E87r5M9BX1yZQ7KsgMXplPV5tIduIUfft1x4hVqq/mB+WPnXyXb2ja80UlncMY7Z4Z/UXmq1KhG4&#xA;uKL34098RIFWFZJXYq7FWQ2+mebNJ8vw+YrKaW2029ZoTNbyspBVmSkiqQRUq1D/AGZVHUx4zAH1&#xA;BsnpjwCZHpLH2ZmYsxJYmpJ3JJy1rRelQetfRgiqp8bfR/bmLrMnBjPns7z2c0fj6yAP0x9R+H7a&#xA;ZJIXEbFBV6HiPem2aCNWL5PrOczGORgLnRr39EFo8NzDDJHOpU86rUg1qN+mZeunCUgYno8/7Mab&#xA;UYMM4ZomJ4rHLqN+TWuxc7Ln3jYH6Dt/HD2fOsld4a/a/T8ek4+sJA/A7fpCWaGnPVrYeDcv+BBP&#xA;8M3U+T5TmPoLOcxnWMf8xaNNcTx3FsnJ3ISUD7gx/jluOdc3LwZgBRTmxtI7S1jt06INz4nucrJs&#xA;uNOXEbRttrOp6P6l9p0vpXEaMQDurUFeLr3BpkJ44z2k3aXPLHMGJeveVtT0bzNYWPmaCBVvDE8B&#xA;bq8RJHqxE7VHJaivz75pM8JYyYHk9phnHIBMc0B+bVolz+X+rBlq0SRzIfAxyqa/dXLNDKsoYa2N&#xA;4i+Ys6V552KuxVMfLf8AykWl/wDMXB/ydXAVfQn/ADkp5j8qWksmkXVleP5jutOieyvoriVLZImu&#xA;JAVkhWVUY/A/WM9R9FcAqY/mroXm3zn5U8o3n5fys+mIodoLedYCpZYxA5Ysg/c8WU91P4CJA5qj&#xA;fP13bJ+Yf5Y6VdTLc69bTPJdyL1CtEiFiPCWRCR8sRyKp1+Zqy2Pk3zpe+XITqGqXiCHWITMzegn&#xA;1RI3eOLdQy27q/EUrWu/TBHmr40R3jdZI2KOhDKymhBG4IIy9Xv/AOYmpaiv/OOXk+4W6mW4muoF&#xA;mmEjB3UwXVQzVqQad8rH1K9A0Wxe7/KTyii6DP5gK2ls31a3u1smT9zTmXaWDkO1K5E81Yt+R+gf&#xA;4f8Ayw1jXLzUrfQtQ1yV4LfU71kWOFYeUMbEuyAt6pkI+LfbDI2VR35k+T7bVvzP/L/zTYtFc2d/&#xA;cwxXNxCVeKT6sTdwuGFQ4eNXFa9FGCJ2Ks41jXfLBk1XzRcqHuPI5u7dTUcg81tDI4Hu9Qg98ACs&#xA;S80WHmaD899N1jyzawXjS6Gz3kU8vopLFHKykLIA1GblEFPE++2EclYd/wA5A+T9Ji8m6Z5nSxl0&#xA;PVbi9ZbrR5JxLGHuVd5nVFZ4g5aFSWjpyH2t+koHdXz/AJYrsVdir6X07yNpx/LeTy9bSvcwXkDS&#xA;wTSlT+9kAkR1oBRedGA/HOaOpl43GRRBehGmj4XADYIfN9rY313ci1tbeW4umJCwRIzyEjqAqgnO&#xA;jlIAWTs8+IkmgN0907RtR05pBqFrNaTvTjFPG0T8R34uAaE5p+0M8ZkCJsPofsbojCE8shRJ4R8N&#xA;/tv7EXLPDEAZXVK9ORArmDDHKXIW9dqNXiwi8kowvvNOSeCQ0jkVz4KwP6sZY5R5ghGHWYcpqE4y&#xA;90gfuU75OdlOv+QxHzArk9PKskT5uP2xi49Jlj/Ql9gtKPLYB1iE+Acj/gSM6LJyfD9R9BZpmM65&#xA;pWVlDKQyncEbg4q0XQMqFgGavFa7mnWmKaZH5WsPKt0kx1y44GvFISxjXiRuxYDf5A5i6nJlBHAH&#xA;Z9n4tPKzllRHIPSPKGieXNI0n0vL5DadcyG4V1lMyszKqEq5LdkGa3LLJkl6h6vc9PjGPHHY1H3o&#xA;D8z4Lq58h6xDaRmWb0Q5QED4I3V5Dv4IpNO+Z+i0GUTE5CgHX6vtLCYmETZPyfLubl1jsVdiq6OS&#xA;SKRJYnKSIQyOpIZWBqCCOhGKovVtb1nWLhbnVr+51G5RBGk93M87hASwQNIWPGrE098FKi9G84+b&#xA;NEheDSNYvbCB6lobeeSNCT34qQtffriQFQn6b1n9KDVvr9z+lA/qC/8AWf6xz6cvVrzr71xpUdF5&#xA;386Q3Fzcxa/qUdzeFTeTJdzq8xjXgnqMHq/FfhHLoMaCpJhVH3Ov67daZBpVzqV1PplsQ1tYSTSP&#xA;BGwBAKRMxRSAxGw74KVHWnnzzzZ20VraeYtTt7WBQkMEV5cJGiLsFVVcAAeAxoKhLvzJ5ivNOj02&#xA;81S8udOhIaGymnleBCtQCsbMUBHI9BjSq9t5z84WtvbW1rruoQW9ma2cMV1OiQkqy1jVXAT4XYfD&#xA;2J8caCqEvmXzHNFexS6reSRaiwfUI3uJWW4daFWmBakhFNi1caVVm83+bJ7q2u59av5buyBFncPd&#xA;TNJCDSoictyStB9nGgqlrfmXzDrsyTazqVzqMkYpEbmV5eAPUKGJC1p2xAVLcKuxV2Kvpf8AKDWv&#xA;0p5FsgzcprAtZy+wi/ux/wAimXOb1+Phynz3eg0OTixjy2QHlzRoPKs3nfWPqoe5glmuLbanK39H&#xA;6ykaGlQOT8TTw9ssy5DlGON7fp5MMWMY+OVfjm821LzFrGu+jdapKJZgnwhUVFUN8VAFA/HMfLGM&#xA;ZER5W+k9jacY9NA/xSiCfeQxHXZed7wB2jUD6Tv/ABzc9nwrHfeXgva/Ucer4R/BED4nf9IQVu/C&#xA;eN+nFgfuOZeWNxI8nn9Fl8PNCf8ANkD9rLZF5oyfzAj785mJogvtubHxwMf5wI+aReXCV1mFSNzz&#xA;B/4A/wBM6ae8XwTVRIiQejMpH4Ru/wDKCfuGUOtA3Y55Z1dEU2dw4VRVoXY0HiVr+OW5I9XL1GLq&#xA;FB9X+seYYJlP7lHEUf8Aqt8JP01w8NRZDFWMjqyzKHBRH5W+cpdC8wXHl+WL1LTUbn905bj6UgDU&#xA;IWh5ep8I6jM7CftczNHigD3PVfMd3qVxoWoQ2REdy9vKITQN8XA0HxVG/TMqUdnEgRxC3y1mG7d2&#xA;KuxV2KuxVM/LpsBqQa/SJ7RUZphMSBxUcjwCshaQ04qPE5h67j8P0EiV7V+nY7dS36bh4/VXD5/j&#xA;n3JlolvoVxFqeoXLwwSKs/1Wxd1CrzibhxWRWaTixHGhB+HxIBxNXPNEwxxEpD03KvMXy5efv7gW&#xA;/BHGRKRoc6Hw+39iOl8teUkado7yWeC2tWupJoZonUlJmi9Ooj+B5BwZQfHqeuY0dfqjVxAMpcNG&#xA;JHON39W4G4P6OTcdLhF0SQI3zHfVcuuyVTaVoaaxbWaXXOAwlrib1ouJnCMwjEnH04wzBVqSwFak&#xA;9QM6GpzHFKZjUuLYcJ+mxvXM0LPS6od7jSxYxMRvat9xz9/IfaiNRtNDsYLaziX1FvLl2lvWZC31&#xA;VJAi+m3D4dw3xjZuu4oBVgyZskpTO3DH6d/qIs3v7tun3zyQxwAiP4jz8vl9qLGj+Sp730vrDWrS&#xA;PM/H61C0CRrMY0US8H34/GK1+Edywyj81rIwuuKhH+CXETw2drHXbpuelNvg4DKrrn/EK599fH+1&#xA;1tovk9pI4rq8KRElUeO4t+XJrt4gZCUI4rCgk/j8Wzk1erAJjHfzjL+YDtv/ADjw/wBixwYLAJ29&#xA;4/nEfdv/AGqEOleVpbP9/ctHdC1jMHpz24UzNDLNJ6lV6KyKgFa1IXwOWT1OpE/TG48Ru4y5cUYi&#xA;t+4k921sI4cJjud+EdRzonf7vsV7zyv5atII5Jb5uRtZJ6etGPUYcRHxUx8l5MH+EBz0Bp8RFeLt&#xA;DUTJAj/EByO3O+tGtt/T1Iva5z0uKIsy/hJ5j4dPf3/ew7N86x2KuxV2KuxV6p+QfmFLXW7zRZn4&#xA;pqEYltwTt60NaqPdkJP+xzV9qYriJDo7Ls3LUjHve7kAggioOxBzRu5Yk/kDyXpd7PrzwNHFbI88&#xA;kDMXtkCqWZxEa9BvToOwy/xZTAjQv3btkdTlxg1OfDXLiNPnfzZrg13zFfaqsfpJcyVjj7hEUInL&#xA;/K4qK++dFp8Ph4xHueW1GbxJmXezb8s/InkzzTpE8V5dTJrKOS0cbqjJGPssiENzU1+In8O+HrNT&#xA;lxTFAcDl6TTYskDZPGz7zF+T+k3uncdJmfT9QiSkUisxicqNhKpLdf5hv41zV4dRwy9YEh7ne5NR&#xA;qOGoZJx/zixXyN5budH8qeaLttO9fzVZSPam2kHqEQ8EeqqK8uQZmB35UGZ+pyieSAv0c3S4sRGO&#xA;dj18u9K9L0nUNU8oa1rd3EbC2sopFg5gkyyBdwAQtBUha+J9svy5hHJGA3JPydZg7MuJnI0I+XMv&#xA;M82KG1YqwYbEGoPuMUJ+fN9xT4bdAfEsT/TKvCcX8qO9DaPqEjeadPvnoji7gduNafDIv9MtgKIb&#xA;jCoV5PpTM51T5g1mFINYvoE2SK4lRR7K5AzCPN3EDYCDwMnYq7FXYq7FXYqvEsqxtGHYRuQWQE8S&#xA;R0qMiYi7rdNmqWZJC53dyC7FiAFBJrsBQD6BgAA5KTa3CrsVdiq+WaWZ+crtI5ABZyWNAKDc+AyM&#xA;YiIoCgkyJ5rMkh2KuxV2KuxVUtrie2uI7i3kaKeFg8UqGjKymoII7g4CARRSCQbD6h/LvzJfeYPK&#xA;lpqd8Ixcyc0kMVQCY3KVZSPhJpWgNP1Zq5dj2bjLZzP5aENpRssguYorm3lt5lDwzI0cinurChH3&#xA;HLcXY4BuUvk4+Xt0kVGI+P4D5N8y6QNH8wahpauZEtJ3ijdqVKA/CTTavHrmxIouPCVgFAW9xcW0&#xA;yT28rwzxnlHLGxV1PiGFCMiQCKLYCRuHpfk7879a0+VLbX66lYkgG4AAuIx412En+y3981uo7NjL&#xA;eGx+xz8HaEo7S3H2vcdK1DTNTs49T06RJ7e6UFbhBuwWoo1aGqmooemaWcJRPCejuYSEhY6vI/z8&#xA;1vX4J7XSFcR6LdxCU8RRpZY3PJXbwT4TQeObXsvHAgy/iDq+0skgRH+EvG83DqnYq7FUw8vQmbX9&#xA;NhALepdQrQe8ijDHmwmfSX03ma6h8yeYf+Ug1P8A5i5/+TjZhS5u3h9IS/AzdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVZ7+Wv5k3/l6eHSZvTbR7ictKzg84mkAXkrAj4QQCQR45OEq&#xA;cfPh4hfV7s1/cn9oD5AfxzKp1r56/NPTFsPOV2yNVb0Ld7mpDS151/2ak5i5BRdnp5XBiOQb3Yq9&#xA;U/Kr8xfLvljy/d2upyT/AFiS5Msccas4KGNRsCQinkpr45CWDFPeQssZZc0doSoIf8z/AMyPLPmz&#xA;R7W2sbS5jvra4EiT3EcSgRFGV0DJI7fE3E0p2yYhCI9IphE5SbnLi+LzPFtdirsVTPy3rI0XW7TU&#xA;zALkWzFvQY8QaqV60NCK1G2GJo2wyR4hT1D/AJXfo3pV/R1z6tPsck41/wBatfwy/wAYOH+UPe8k&#xA;v7s3l9c3ZXgbiV5SgNQC7FqV+nMcm3OiKFIfFL17/oV38yv9+6d/yPk/6pZDjCu/6Fd/Mr/funf8&#xA;j5P+qWPGFd/0K7+ZX+/dO/5Hyf8AVLHjCu/6Fd/Mr/funf8AI+T/AKpY8YV3/Qrv5lf7907/AJHy&#xA;f9UseMK7/oV38yv9+6d/yPk/6pY8YV3/AEK7+ZX+/dO/5Hyf9UseMK7/AKFd/Mr/AH7p3/I+T/ql&#xA;jxhXf9Cu/mV/v3Tv+R8n/VLHjCu/6Fd/Mr/funf8j5P+qWPGFd/0K7+ZX+/dO/5Hyf8AVLHjCu/6&#xA;Fd/Mr/funf8AI+T/AKpY8YV3/Qrv5lf7907/AJHyf9UseMK7/oV38yv9+6d/yPk/6pY8YV3/AEK7&#xA;+ZX+/dO/5Hyf9UseMK7/AKFd/Mr/AH7p3/I+T/qljxhXf9Cu/mV/v3Tv+R8n/VLHjCu/6Fd/Mr/f&#xA;unf8j5P+qWPGFd/0K7+ZX+/dO/5Hyf8AVLHjCp0/5Ifnq8C251q3ESKFVVvJV+EClCVjBP05LxvN&#xA;r8KPck7/APOMH5mu5d59PZ2NWZriQkn3JiyPiBsW/wDQrv5lf7907/kfJ/1Sx4wrv+hXfzK/37p3&#xA;/I+T/qljxhXf9Cu/mV/v3Tv+R8n/AFSx4wrv+hXfzK/37p3/ACPk/wCqWPGFd/0K7+ZX+/dO/wCR&#xA;8n/VLHjCu/6Fd/Mr/funf8j5P+qWPGFd/wBCu/mV/v3Tv+R8n/VLHjCu/wChXfzK/wB+6d/yPk/6&#xA;pY8YV3/Qrv5lf7907/kfJ/1Sx4wrv+hXfzK/37p3/I+T/qljxhXf9Cu/mV/v3Tv+R8n/AFSx4wr2&#xA;D/ldV1/1ak/5HH/mjOL/ANE0v5g+f7HoP5FH877Hf8rquv8Aq1J/yOP/ADRj/oml/MHz/Yv8ij+d&#xA;9jv+V1XX/VqT/kcf+aMf9E0v5g+f7F/kUfzvsd/yuq6/6tSf8jj/AM0Y/wCiaX8wfP8AYv8AIo/n&#xA;fY7/AJXVdf8AVqT/AJHH/mjH/RNL+YPn+xf5FH877Hf8rquv+rUn/I4/80Y/6JpfzB8/2L/Io/nf&#xA;Y7/ldV1/1ak/5HH/AJox/wBE0v5g+f7F/kUfzvsd/wArquv+rUn/ACOP/NGP+iaX8wfP9i/yKP53&#xA;2O/5XVdf9WpP+Rx/5ox/0TS/mD5/sX+RR/O+x3/K6rr/AKtSf8jj/wA0Y/6JpfzB8/2L/Io/nfYz&#xA;W18zyT+TJPMRtwrx2s9z9W5VBMIc8eVO/DwzotJqvFwDJVWOTrPyg/MDDfOQF++njf8A0NLf/wDU&#xA;vRf9JLf9U8o/lA9z2/8AoGh/qp/0v7Xf9DS3/wD1L0X/AEkt/wBU8f5QPcv+gaH+qn/S/td/0NLf&#xA;/wDUvRf9JLf9U8f5QPcv+gaH+qn/AEv7Xf8AQ0t//wBS9F/0kt/1Tx/lA9y/6Bof6qf9L+13/Q0t&#xA;/wD9S9F/0kt/1Tx/lA9y/wCgaH+qn/S/td/0NLf/APUvRf8ASS3/AFTx/lA9y/6Bof6qf9L+13/Q&#xA;0t//ANS9F/0kt/1Tx/lA9y/6Bof6qf8AS/td/wBDS3//AFL0X/SS3/VPH+UD3L/oGh/qp/0v7Xf9&#xA;DS3/AP1L0X/SS3/VPH+UD3L/AKBof6qf9L+13/Q0t/8A9S9F/wBJLf8AVPH+UD3L/oGh/qp/0v7X&#xA;rtx5vmj/AC/g81LbL6s9lbXn1UseINwqNx5UqePPwzaaceJXm+fdpw/LTyRHq8ORHvo0wL/le2p/&#xA;9WqD/kY/9M2P5Ed7o/5Ul/Nd/wAr21P/AKtUH/Ix/wCmP5Ed6/ypL+a7/le2p/8AVqg/5GP/AEx/&#xA;IjvX+VJfzXf8r21P/q1Qf8jH/pj+RHev8qS/mu/5Xtqf/Vqg/wCRj/0x/IjvX+VJfzXf8r21P/q1&#xA;Qf8AIx/6Y/kR3r/Kkv5ra/npqrMFXSYWZjQASOSSfowHRRHVI7SkTQi5/wA89WRyj6RCrqaMrO4I&#xA;I7EEYjRRIsFZdpTBox3a/wCV7an/ANWqD/kY/wDTD+RHej+VJfzXf8r21P8A6tUH/Ix/6Y/kR3r/&#xA;ACpL+a841c3AsH+rlhKWjAK1rQyKG6f5Nc8h0Yj4g4uVH7i+nai+D089vvQ31vUIJjCIzKiNQu1T&#xA;8IWEfCab7yMd69Dl/g4px4rokfpnz/0o5d4a/EnE1V/iP6yq6bd3Nxcz+snpqqJxSjDieUgIPIAE&#xA;0ArTK9VhhCEeE3ue7uj9nNlhySlI35fpTDMJyE98qRaG148mqPwEA9ROZX0m3pxII5E1NRTNn2XH&#xA;AZk5T9O/k0agzr0oHXbfTrfUpItPf1LVQvCTmslSRU0KgU8KZja2GOGQjGbj77Z4jIxuXNAZitjs&#xA;VdirsVeyaZ/5J64/7Zl7/wARlz0Dsv8AxOP9U/ped/5Hx/4ZD7w+XfKUVhJfzfXY0ljWIFUcxip9&#xA;aMNx9RkWvplu/vlWlETI8Xd+kPp3bc8scUfDJB4uYv8AmSr6QT9VdPJFSeXNH4ROuoxsZZZF4o6U&#xA;IRpQFXmRQt6a0ZjT4hXalZnBD+d+N/x8XHj2rqLIOM7RHMHqI7mh04jYG/pNb2A2Hy7pUiIZLowF&#xA;3RW5PCwQtOsRiahrzCMZOVKU+mgGCJ618u+v2ssnameJNQ4qB6S3qBlxDblxDgrnfwu4tA0Gd4PR&#xA;v2USIXdJTGh5emrhAwLU3Yjp2xGCBqiifaWpgJcWPkascR/iIvp5deqQXkMUN3PDFJ6sUcjJHKKU&#xA;ZVYgNsWG432OY0wASA7vBMzxxlIcJIBI7vLoo5FtZH+Xei2us+c9MsLtTJaF3nuIgKmSO2ie4eMf&#xA;66xcfpyzDEGQvk63tfUyw6ac4/VsB5GREb+F2l2t2uojW71LmyNpdtK8slmimkfM8qKBX4QDt7ZU&#xA;ZBytNOHhR4ZcUa596XEEGh64XIaxV9ZXn/kibD/tj6f/AMQhzptB/B7v0PgvtH/fZ/8Ahk/928k0&#xA;2ziubC8qUWWNomV3YArHVvUIBO9Nqgb5u5GiHkYRsFNNQ03QtISWSORb+4ilg9FTIrJRvX5clX7S&#xA;n00b6adNzXGUpeX4DbOEIefL9KU6vp9taLZtbziZbm3SVxVSyOdmUha03G3+YFkJE3bTkgBVdQl+&#xA;Ta3YqirHTNS1CQx2NrLdSKCzLCjOQB1Pwg5GUgOZZxhKXIWyLy9oPoS87u2dr+G59IW/xc45EK0A&#xA;RPiLEttmg7a7YGn4YRj4ksnTy/HR3/YvZEs5MyeDg6+Y3/BW+YdLtDK1zP8A6Gz3Sx3EhDkgOWEh&#xA;aNjy5IV6LTHsXtYagHHw8E8Y+n8fpT232UcEhkMuKMz9Xv8Av79lmveW/LFjYfWdO8xxX8u1LUQu&#xA;rtU9iCwFBv8AFTN1jyTJoxp02XDjiLjO2MZe4qOvbn6rbPcFeaRUaQV3CA/G3Q14rU0754dgxeJM&#xA;RuieXv6D4nZ9lyT4Y33JedbuVcqbSjhC3o8j6lRD6tacaca/BX+bM0aCBF8e1862+rh7+f8AFX81&#xA;x/zMr+n4deV/s96Ktb+S5n4pEBBRiJuRPIByo4ilN+NeuY+bTjHGyfVtt8L33bceUyOw270bmK3L&#xA;ZGnWKQ2/D1yjrEZBVQzKQCQPAnLMMoxmDIXHr7mOQExNc0P5b1C21i/i02WRbPUiSk1tJ9pWAqeI&#xA;NOansRmwy9lzEgY+rFLlLp8e4+TjYtXGQo7THMM38u+T1nmku7w87KJmEIG3rcTTl/q7fTm17G7C&#xA;8WXiZP7sHb+l+z73Wdqdq+GOCH19fL9qG13y16aPeWQAhQFpoq/Zp1K+2Dt3seGKXFh68493mP1M&#xA;ux9fkyQ/edP4mEr5x8mvEsEd6wvxIQ7OCsHHcfCxA3rT2zBn2HnjhE+A8Xdty9zmx7RxGfDxJlml&#xA;c97Jpn/knrj/ALZl7/xGXPQOy/8AE4/1T+l53/kfH/hkPvD5R0bTY9QnlieRkMcfNFjUO7nmqUAL&#xA;J0D8j7A5jYsfEafWdfqzgiCADZrc0BsT3HnXCPMheNLtEu9ThmuqR6er+nIig+syzLCoA5bA8+R6&#xA;7Dvh8MXIE/T9u9MfzmQ48Uow3y1YJ+n0mR6b8q6bnonUnkmwGoi0i1T1wfTDNFFVlDyFPVKu6D0g&#xA;By5A9CO2+ZB0keKhK/h9vudPH2gynF4ksXDz5y2NRvhsA+vpVcweuzHtXS3iuU9Lisf1e2ZqHbm1&#xA;vGz/AE8ya5jTjcgI9w+4O60+fhxSnkNATnudthOQH2Umnlfys+uW2rSKJuen2pniWNVIaTqqHkR9&#xA;pQaAbn8CI4ZkkAcubj6ztbFhGKXFHhyyoG/uT7Sfywub/wDLs+ZI2Q3NxdFLbnL6aLFF8BU1Xjyk&#xA;krSp+kZkYtJLJCxwj9Lqdb7QR0uuOKXHKFC6jfDtz29VVuebPtd8sW2h+eNB81aOHmtfUjLWnpqp&#xA;e2VFSb0QqIHdUckrvy/Z2FMyJ6aGMgg7jmD3eXf7nndH2zk1GnyYMoHDIemYvaV7CdkmIJGx2A68&#xA;0gutV8kT/mZ6tlbX1jJISILi5R7f61IQVcei8bbUP2jwPtXMHtYYZ4TKMROHXgmBXnVH7HH0HaWo&#xA;jh/LzmeewnAnbylxA/MH9DLLi0s7iomhSVOwkVW2+kZwQmQfSSHcwnKPI0wvz9o/lbT9DluBYRRX&#xA;cpEdr6Q9P4zvWi0FAAT0zadnZ808gHEeHq7fs3PnyZQOImI53u9dvP8AyRNh/wBsfT/+IQ56ToP4&#xA;Pd+h8r9o/wC+z/8ADJ/7t5RoWi2+qGZZL2O0kj48Fl2DmSqJRq/79ManbZWLfs5uskzHo8lixiXW&#xA;vx+tGxeV9Pk9IrqP7qWZY1uvTX0iGufq9AfUr6nH99xP7HfInKe78V+AzGAd/wCLr9vuQ2q6ZZR6&#xA;Lpt/aSh/VEsc8dFDqVnl9NpaMSGdAKbU264YSPEQWOSA4QR+NykuWtDsVRl75613yVDJpy3klmzu&#xA;sslpE0fOsi05+P2V7ZheLhyDjHqdnDTajHIw3ik+j/mybS8muZklklml9SCTkTM78qeoW8evfNH2&#xA;t2fDVyEhI45Y+o/tFd9u+7MyZdLAxoZPF5g/r3u+TM9D1O382alHNKwmgj5XDcgZGcyUPGQg0XrX&#xA;fL+yeyvykZTMjKeSuL8c3D7V7QOqyCHDwwx3X3e7ozeTy/bHTkke0jNm1YFag2A341+0M2fib893&#xA;BOIcPLZ5x5n02HT9VeKAEROPUUEEAcidlJrUDxzLxysOuzQEZbILUz/ooHUPLCjAioKvMisN/EHP&#xA;FdL9fujI/KJIfXc30/EfeEtTzPytmnNsI1UneSQKtApbiWoaSbU4Znnsmp8PFfuj513/AE/0nGGt&#xA;9N1Xx/G/kqDWZJtRWGMqiqrBkLBnr6sKhmSg4ijnjvvkDoRHFxHf7vpmdj15C9tk/mSZ0PxvH9ez&#xA;pPMXpwmR4VT9oF5OK8eDMKsV+0eFAv44x7M4pUCT/m73YHK+W/P7FlrKFkfb+N2VeXdIj1qU263S&#xA;W106hraOQHjIaVK8x9k06bb5VotCM8zj4hGf8N8j8eidVqzhiJ8PFHrXRdN+UWu6j5p086lEbfSr&#xA;FWmuLmBxzlJICwo6HmoO9Ttt70zsOwezMun4xlHOq3sPP9qdo48vCcZ/W9F1+a90/QLqXSrdJri1&#xA;iDQ2lDR1jILRKFpRmQFV8DTOhnjuNDbup02HNwzs73zvq8a/5WZ55XzLYW91pZstPuJLeK6s3hkL&#xA;KJPtN6jAbkEsB2pQ98hwAziT9UW6+HHIRPpl+hV80/lxaXHmZL7SHigsbqF4dRt6UVKp6atEoFOm&#xA;9NqEe+DUaEzhUNjxCXx4rPz3asHaIgfXvtX2UmMmmw2NtHEZmlkVQq1ABIUU5NnD9sdk4dKCZTvJ&#xA;M2IgVXv57fe9P2Z2nl1JqMKxx5yJ+7zet6Z/5J64/wC2Ze/8Rlzedl/4nH+qf0tX/I+P/DIfeHyl&#xA;o+mwXxuUkl9Fo40aJzTgGe4ihq5P7IEpOY2LGJXf43A/S+s67VSw8JA4rJvvoQnLbz9KcP5JAvJb&#xA;aO7eUxhD8Nu3JeYc1lQsPTUen136jMg6Per+z7+51MfaD92JmAjd/wAYo1w/Sa9R9XLbkXWXlSyM&#xA;tq73LTgzQrPbekVBVpLdXUOrlul2lKDffptVhphY3vcfo/4pdR21k4ZgREfTKpcV/wAOQg0Y1/k5&#xA;Xv3c96KPLemW2qa9Y2Fz/vPPKolFaclHxFQfFqUGV6MXlj73K9oZCOhykji9PL7uXQcz5PoTTdR8&#xA;l6XINYS2az0LzLpYub8KC8ltc6czLyaEGSQAiRl+AEVX55nQ1GPFMHkMm3x7i+d9oYcmTTnDkkJZ&#xA;NNLausJAbx91A+4vMtX85TP5Mj8t+VrWDV/LMl16s8LCUXkbtMXERRGVljLU4vTvQ+9OSeMcWGd4&#xA;usSarv2PL4HelHaOoOaOqhUsnDwn3/TZj5j4WnnmrQdV1PyfawFLi3vbS3jaw0xLuVoYDUdFDKjM&#xA;iFgDT2zntP2lPDqI455BPD3kDlW3u3/FN+r0/jQll4T4x50evVMLjQUn1HRdQEhY6UsqqsoPJxMi&#xA;oWJO/IBe+aXHrOHHlxkf3lcunCSfk5k8BlLHMfwXz8x96YLqVg961itxG14q82gDAuFBAqQOnXMI&#xA;4pCPFXpdgcUhHir097yT8xNfGqa40ELcrSxrFHToXr+8b7xT6M6bszTeHjs/VL8B6nsvTeHjs/VL&#xA;f9T6IvP/ACRNh/2x9P8A+IQ52+g/g936Hxf2j/vs/wDwyf8Au3kmk6XBfIVaVopjPFFHRQykOsjN&#xA;tVSW/d/CO52zdzlTyOOAkmZ8myCO5f1pf3ETzFPQPKMJbm4pcjn+5LfZXrU5X434+PRs/L8/1eV7&#xA;9yJfydY2V1GlzeGcloPhVCq0edI3JqatGQ3wsvXB4xI2DP8ALiJ3Pd96D/wnE2nXV8l9WKCNJYla&#xA;IgsGiEnx8WYR1J4ruanJeLuBTDwNibUbTR7VfNn6KaQ3EEEzxO7Jw5mIHl8IZtiy+PTwwmZ4LYxx&#xA;jxOHmxH8z/LQn82XNzdarY2QkjV0Sd5fWbY9VVH2LCgPSma7JEQj6RsOjv8ATzMyeImyeZ5MR1XS&#xA;tIstI03ULTV0u7+6SVbrT0heP6sYyEjPqsaSeopL7DbplETezsJDhN+W3n0/anf5T6ze6brE/wBW&#xA;tWuRKgDKJPTUtQhFYn4dyduWZeOVRJPIbup1UblGjuTXzfQFrc302n/WprC6toowGnEqcY4zxBc+&#xA;qSIyF6EhsHix4RIHn8/lzYHFMSMSOR9w+fJ515m1GK/1Z5YjyjRVjVgSQSo3K17V6Zmafi4bkKdX&#xA;qzEz9JsDr+OiGvrsWlq9wy8glKitOpA/jni2nw+JMR731zLk4ImSDi1omYRvDtLL6duymvL7B39w&#xA;rlvkDmVPQ1GweUbl9v6RXvIaI6neiOZ2+z+34NaVrIunit3U+t6KPI/SrFEc0Hh+8w6zQ+GDIH08&#xA;RA+ch+hcGp4yInnX6B+tMLi1guECTLyUGoFSO1D08QaHMLHllA3E05E4CQoq0btE6vGSjoQUZdiC&#xA;OhFPDICRBsc0mIIo8nqvl/8AMLRp9NVtYvILC6iKxyvO6xI5JorKzUX4j1H8M9F7H7YjqYcMjWUc&#xA;/PzH6Xi+0uzJYZXEXA/Z5JkfMfljVLC4Njqlld/AwVop4no1CB9lj3G2b0Hd1MomnnieY9Lt2b67&#xA;ewmCVQJRJKgPGlVZSx6itRl2SIO4NEOPgnIWCDKJ5j8dQ1d3NpFbpdW86XVpOC1rPEQyyCtNiO4I&#xA;ow7HMHW9q49PiM5fV/N6k/jq5WDsrJlyiEfpP8XSv1+Xex6WV5ZDI5qxzyzVaqefIckzci+h6bTw&#xA;wwEICgHsOmf+SeuP+2Ze/wDEZc7jsv8AxOP9U/pdH/yPj/wyH3h8g5gvs7sVdiq+KSSKRJY2KyIQ&#xA;yMOoINQcWMoiQIO4L0/T/K9t5k8zaf5zW+NvBMEkv4EJRhLCgjKBx0U8KNXt88xMXakhE6XJHjlI&#xA;mj38W9+/9L5hr+yPAzmQPDGH3Dl8KRWgaEln5/1q8jtVtrWS3hFoUUKjhwplZQNvtrvmBrtTKehx&#xA;RMuKQlLivmKugfg16bHEaqZAocIrz7yPiyXUtVtNMhe71K84Q7CNX47cR9lAoDMfvzVevOYxjHcC&#xA;tr+3p9zt9NpZykRG5X7tvx5vNPMn5mahelrfSuVnanYzf7uYfMfY+jf3zc6XsqMN5+o/Z+16bSdk&#xA;whvP1S+z9rErPUb2yuvrVtM0VxRh6gO/xghuvzzZTxRmOEjZ2mTFGceGQsIfLGx9Y3n/AJImw/7Y&#xA;+n/8QhzptB/B7v0PgvtH/fZ/+GT/AN28SzfPGIm31G9toZYYJSkcwKyAAVIYcWoSKiqmhp1G2RMQ&#xA;WYmQKCGyTBsKWICipOwA64JSAFnYJAJNDmyLRoxosbaneLxmIKQQkfEa9TTtnKantfLqdRHBozGQ&#xA;G8584/j73p9L2Zj02A5tVYJ2jHkfx9zHfzR8tTeYPq2vWLiSThHbyISFVYwzHl0rXk+++U9mdpZc&#xA;meWnzgRzDl0BH43HeHN1enx4sMc+I8WE8+pB/G3kXnS+T9cZ5UESj0ujFqB6/wAhP8c6H8vJ1R1+&#xA;KhvzZtofkXWtCge5ure5VZ0QvzhdI1JBcfEdjt0PhmRgiI9XX6zNLJ/DQHVOfN35xA+XrLy1e2L3&#xA;N5ZMhS/EojAgAoEMYVvUPEdSR2yk1jyWOTlY8Zz4dzugYJop4UmiblHIoZGHcHfM4Gxbp5RMTRTc&#xA;gEEEVB6g54UDT7MtaGNnRytWjJKHwJFCfuyQmQCO9BiLtcFUGoABpT6BkSSmm8VdiqheWourdoGk&#xA;eNX2LRkBvvIOW4MvhyEgAa72GSHEKuksfyvbMN7h2Na1kjt360r1i9v86ZsI9rzHKIHulMf778fF&#xA;xZaGJ6/MRP8AvVi+VYlk5rckFSWiPoWxKsTWtfTqffxycu2ZSFGPv9U9/wDZMR2eAdj/ALGP6nov&#xA;kK40WGyfR7+kjSSNJHJccSjFuo6Kqvv1pv8APMrs3V4Z3DIB6jt/N5VQu6/A7k5sUo0Ynl80i1e0&#xA;is9TuLaGQSRRuRG4IPwncbjuOhzSarEMeWUQbALl45GUQS9Z0z/yT1x/2zL3/iMudz2X/icf6p/S&#xA;6D/kfH/hkPvD5BzBfZ3Yq7FXYqzT8tvM406/Om3ThbK8NUZjRUmpQH5P0P0Zqu1NJxx44/VH7nUd&#xA;q6PxI8cfqj9zJ/M/5j6dpytbaZxvLylOYNYUPuR9o+w+/NfpezJ5PVP0j7S63R9kynvP0x+15fqe&#xA;q6hqd01zfTNNKehPRR4KBsB8s6DFhjjFRFB6TDhhjjwxFBCZa2uxV2KvrK8/8kTYf9sfT/8AiEOd&#xA;NoP4Pd+h8F9o/wC+z/8ADJ/7t4lm+eMdirsVXwXN3a3EdxayBJENGDKHUqftCh6HwI/VtmDr9BDV&#xA;Y/DnfDYOxq3N0Oulpp8cAOKiN+nm3PcTTyGSZzI56scv0+mx4YCGOIjEdzRn1E8sjKZMpHvVf0zB&#xA;DpraYIZvWnlDNKELRcafzCtN1HUZqMmgyS7RjnkP3cIUPf8Agl22PVwj2fLFE+uU7Pu/ACGzfOjT&#xA;aXzX5llsGsJdTuXs2UI0LSMQVApxNTXj7ZWMUbut2455kVZpIbrSvLdynq3do0mplgI5vjaNowKF&#xA;XWvFadj3yieM+KDziR8vNysWoAwGIPDIG/eO74c0ZPPbsLeG3sI7VYoyJZISEjYggLSIDY0qWIyW&#xA;HFLGSLuHTvH7GvUZ45QJEVk61yPn5Fl3/Oi/9rT/AKd88i/wT/bP9i+o/wCEf0Ptd/zov/a0/wCn&#xA;fH/BP9s/2K/4R/Q+13/Oi/8Aa0/6d8f8E/2z/Yr/AIR/Q+13/Oi/9rT/AKd8f8E/2z/Yr/hH9D7X&#xA;f86L/wBrT/p3x/wT/bP9iv8AhH9D7Xf86L/2tP8Ap3x/wT/bP9iv+Ef0Ptd/zov/AGtP+nfH/BP9&#xA;s/2K/wCEf0Ptd/zov/a0/wCnfH/BP9s/2K/4R/Q+13/Oi/8Aa0/6d8f8E/2z/Yr/AIR/Q+13/Oi/&#xA;9rT/AKd8f8E/2z/Yr/hH9D7XqVh+iv8AlWE/p+v+jPqF1y5cPX9PjJzpT4OXWmdp2fwflY8N8NHn&#xA;z6uj9f5yPLj44+69nzL/AMgk/wC1/wD9OWYn7r+l9j6p/rj/ALT/ALN3/IJP+1//ANOWP7r+l9i/&#xA;64/7T/s3f8gk/wC1/wD9OWP7r+l9i/64/wC0/wCzd/yCT/tf/wDTlj+6/pfYv+uP+0/7N3/IJP8A&#xA;tf8A/Tlj+6/pfYv+uP8AtP8As3f8gk/7X/8A05Y/uv6X2L/rj/tP+zd/yCT/ALX/AP05Y/uv6X2L&#xA;/rj/ALT/ALN3/IJP+1//ANOWP7r+l9i/64/7T/s3f8gk/wC1/wD9OWP7r+l9i/64/wC0/wCzd/yC&#xA;T/tf/wDTlj+6/pfYv+uP+0/7N9H3n6I/5U7af70for9F2XpfY+selwi9Pl+xy6cqbZv9FzjXd+h8&#xA;c7dvxc3Hz45XXfxdL6PH/wDnTv8AtY/8kM3Pr8nlP3f9L7Hf86d/2sf+SGPr8l/d/wBL7Hf86d/2&#xA;sf8Akhj6/Jf3f9L7Hf8AOnf9rH/khj6/Jf3f9L7Hf86d/wBrH/khj6/Jf3f9L7Hf86d/2sf+SGPr&#xA;8l/d/wBL7Hf86d/2sf8Akhj6/Jf3f9L7Hf8AOnf9rH/khj6/Jf3f9L7Hf86d/wBrH/khj6/Jf3f9&#xA;L7Hf86d/2sf+SGPr8l/d/wBL7H//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:B039EDE8B317E8119407EF895204C460</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:B039EDE8B317E8119407EF895204C460</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:b5b8a50c-6062-394b-814c-b5e4734c94c3</stRef:instanceID>
            <stRef:documentID>xmp.did:b5b8a50c-6062-394b-814c-b5e4734c94c3</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62829471-ebf3-2c4e-be0f-37578a3e8e57</stEvt:instanceID>
                  <stEvt:when>2016-12-02T14:33:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88748e0b-36da-9648-b6fb-ed24389e375b</stEvt:instanceID>
                  <stEvt:when>2018-01-22T13:50:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:10501976-a557-e440-a565-3e25c4270c8f</stEvt:instanceID>
                  <stEvt:when>2018-02-20T13:40:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b5b8a50c-6062-394b-814c-b5e4734c94c3</stEvt:instanceID>
                  <stEvt:when>2018-02-21T21:19:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B039EDE8B317E8119407EF895204C460</stEvt:instanceID>
                  <stEvt:when>2018-02-22T12:16:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>559.967773</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -355.886 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 355.886 li
508.447 355.886 li
508.447 0 li
cp
clp
[1 0 0 1 0 0 ]ct
508.012 248.524 mo
0 248.524 li
0 0 li
508.012 0 li
508.012 248.524 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.192157 .184314 .247059 rgb
f
130.865 58.813 mo
130.619 57.8594 130.534 56.8633 130.615 55.8809 cv
130.722 54.5889 132.139 53.5703 133.085 52.7769 cv
134.195 51.8477 135.396 51.0342 136.506 50.106 cv
139.589 47.5283 141.934 44.0615 143.104 40.2183 cv
144.273 36.3735 144.252 32.165 142.971 28.3569 cv
142.202 26.0718 141.048 23.9146 139.121 22.4048 cv
137.75 21.3325 135.881 20.0376 132.879 18.9805 cv
129.312 17.7236 125.864 17.6704 122.205 18.1426 cv
114.14 19.1841 106.338 25.5112 106.37 34.1152 cv
106.384 37.7393 107.636 41.2837 109.501 44.3906 cv
111.366 47.4985 113.828 50.2065 116.417 52.7427 cv
116.794 53.1138 117.179 53.481 117.524 53.8833 cv
118.006 54.4429 117.979 54.6738 118.141 55.3179 cv
118.376 56.252 118.46 57.2231 118.391 58.1831 cv
118.375 58.4126 118.447 58.6157 118.645 58.7319 cv
118.842 58.8496 119.083 58.8604 119.313 58.8672 cv
122.631 58.9722 125.954 58.9038 129.265 58.6636 cv
129.817 58.623 130.333 58.6621 130.865 58.813 cv
cp
1 .639216 .113725 rgb
f
121.577 59.1475 mo
121.326 57.5103 120.743 55.9556 120.23 54.3857 cv
119.657 52.6348 119.196 50.8662 118.804 49.0664 cv
118.177 46.1748 117.789 43.2446 117.226 40.3418 cv
117.08 39.5923 116.195 36.0591 117.551 35.9995 cv
118.838 35.9429 119.952 37.4121 120.348 38.4585 cv
120.838 39.7549 120.701 41.2563 120.403 42.5762 cv
120.6 42.4966 120.797 42.4165 120.993 42.3369 cv
120.212 41.8496 120.342 40.4219 120.385 39.6421 cv
120.45 38.4575 120.734 37.2129 121.248 36.1396 cv
122.591 33.333 124.648 37.832 125.063 39.0063 cv
125.362 39.8521 125.602 40.7373 125.513 41.6382 cv
125.38 41.6587 125.247 41.6777 125.113 41.6973 cv
125.054 41.4756 125.027 41.2505 125.032 41.0225 cv
125.024 40.7715 125.055 40.5171 125.08 40.2686 cv
125.165 39.4355 125.445 38.6353 125.817 37.8916 cv
126.167 37.1914 126.682 36.6069 127.36 36.2153 cv
128.616 35.4907 128.866 37.3164 128.968 38.0825 cv
129.107 39.1187 129.941 41.0088 129.087 41.8696 cv
129.252 41.8491 129.416 41.8281 129.581 41.8066 cv
128.784 41.2192 129.671 39.2974 129.962 38.6348 cv
130.374 37.7017 131.016 36.3267 132.168 36.2051 cv
133.364 36.0791 133.204 38.9365 133.175 39.605 cv
133.123 40.8003 132.821 41.9614 132.507 43.1104 cv
130.976 48.7168 128.029 54.1929 127.63 60.0566 cv
127.6 60.499 128.32 60.5972 128.404 60.1616 cv
129.161 56.2793 130.446 52.5376 131.727 48.8042 cv
132.804 45.6646 134.034 42.397 134.058 39.0366 cv
134.065 37.9971 133.996 36.3516 133.051 35.6729 cv
132.189 35.0532 131.096 35.5386 130.455 36.25 cv
129.361 37.4644 127.35 41.1797 129.17 42.5088 cv
129.314 42.6143 129.544 42.5654 129.663 42.4448 cv
130.878 41.2075 129.912 38.6182 129.617 37.1523 cv
129.21 35.1392 127.615 34.8296 126.141 36.1152 cv
124.805 37.2798 123.882 39.9077 124.286 41.666 cv
124.437 42.3271 124.939 42.9697 125.717 42.7554 cv
126.342 42.584 126.345 41.6338 126.346 41.1318 cv
126.349 39.4146 124.302 33.1494 121.628 34.563 cv
120.256 35.2886 119.895 37.3545 119.684 38.7324 cv
119.486 40.0264 119.275 42.2075 120.588 43.0298 cv
120.802 43.1641 121.121 43.0391 121.177 42.79 cv
121.794 40.0732 121.475 36.9448 118.782 35.5029 cv
116.861 34.4741 115.963 35.9478 116.001 37.7271 cv
116.023 38.7407 116.231 39.7583 116.429 40.7495 cv
116.782 42.5156 117.051 44.2998 117.387 46.0703 cv
118.245 50.5747 119.476 55 121.215 59.2471 cv
121.307 59.4702 121.612 59.3882 121.577 59.1475 cv
121.577 59.1475 li
cp
.337255 .564706 .780392 rgb
f
126.594 15.6084 mo
126.933 13.7314 127.686 11.6406 127.515 9.72559 cv
127.419 8.66406 125.804 8.62695 125.834 9.72559 cv
125.86 10.7051 125.885 11.6455 125.778 12.6235 cv
125.668 13.6274 125.577 14.6104 125.772 15.6084 cv
125.852 16.0132 126.519 16.0195 126.594 15.6084 cv
126.594 15.6084 li
cp
f
139.614 114.751 mo
139.556 115.263 139.789 115.771 140.405 115.802 cv
140.719 115.817 141.042 115.783 141.342 115.874 cv
141.523 115.927 141.688 116.024 141.858 116.105 cv
142.424 116.372 143.217 116.496 144.136 116.619 cv
144.291 116.638 144.444 116.434 144.198 116.097 cv
143.916 115.708 142.268 114.801 142.119 114.621 cv
141.86 114.309 141.854 113.775 141.479 113.618 cv
141.198 113.501 140.335 113.67 140.084 113.866 cv
139.817 114.073 139.652 114.413 139.614 114.751 cv
cp
1 1 1 rgb
f
135.696 116.432 mo
135.57 116.434 135.441 116.427 135.325 116.379 cv
135.147 116.307 135.023 116.149 134.907 115.998 cv
134.732 115.772 134.592 115.083 135.205 114.19 cv
135.287 114.07 135.363 113.937 135.492 113.873 cv
135.626 113.806 135.786 113.823 135.935 113.841 cv
136.258 113.881 136.582 113.92 136.906 113.96 cv
136.956 113.966 137.012 113.975 137.045 114.013 cv
137.081 114.054 137.081 114.115 137.081 114.168 cv
137.084 114.632 137.313 115.096 137.196 115.543 cv
137.036 116.147 136.32 116.424 135.696 116.432 cv
cp
f
115.228 115.607 mo
115.265 115.349 114.948 115.199 114.693 115.136 cv
114.569 115.106 113.518 115.854 113.203 116.155 cv
113.025 116.325 112.762 116.59 112.911 116.787 cv
113.068 116.997 114.252 116.277 114.891 115.952 cv
115.039 115.875 115.204 115.773 115.228 115.607 cv
cp
f
112.309 114.058 mo
112.031 114.131 111.754 114.204 111.478 114.277 cv
110.91 114.426 110.304 114.599 109.929 115.05 cv
109.905 115.078 109.882 115.108 109.874 115.145 cv
109.845 115.26 109.975 115.352 110.091 115.375 cv
110.431 115.442 110.757 115.243 111.09 115.147 cv
111.524 115.024 111.99 115.078 112.428 114.974 cv
112.569 114.94 112.713 114.887 112.813 114.78 cv
112.912 114.674 113.027 114.419 112.864 114.132 cv
112.659 114.072 112.481 114.23 112.309 114.058 cv
cp
f
117.999 115.872 mo
118.367 116.199 121.027 114.686 121.471 114.516 cv
121.765 114.606 122.051 114.426 122.197 114.156 cv
122.343 113.885 122.355 113.566 122.359 113.259 cv
122.362 113.045 122.349 112.8 122.181 112.667 cv
122.08 112.588 121.945 112.569 121.817 112.563 cv
121.203 112.54 120.599 112.767 120.088 113.11 cv
119.579 113.452 119.153 113.904 118.751 114.369 cv
118.347 114.84 117.57 115.49 117.999 115.872 cv
cp
.290196 .466667 .388235 rgb
f
126.034 112.308 mo
125.867 112.307 125.695 112.314 125.545 112.388 cv
125.358 112.481 125.232 112.666 125.159 112.861 cv
124.982 113.337 125.114 113.919 125.5 114.248 cv
125.62 114.35 125.758 114.426 125.896 114.502 cv
126.244 114.693 126.591 114.884 126.938 115.076 cv
127.331 115.292 127.724 115.509 128.116 115.725 cv
128.509 115.941 129.047 116.399 129.382 116.1 cv
129.85 115.684 129.187 114.887 128.847 114.362 cv
128.594 113.971 128.34 113.579 128.087 113.188 cv
127.938 112.958 127.781 112.721 127.543 112.587 cv
127.431 112.524 127.305 112.486 127.179 112.455 cv
126.805 112.361 126.419 112.313 126.034 112.308 cv
cp
f
129.716 92.6709 mo
129.809 92.5425 129.916 92.9233 129.947 93.0796 cv
130.374 95.1533 130.462 97.5552 130.316 99.667 cv
130.006 104.189 129.549 108.504 127.897 112.726 cv
126.535 113.457 124.762 113.583 125.064 111.466 cv
125.276 109.988 125.494 108.509 125.647 107.023 cv
125.952 104.083 126.025 101.081 125.373 98.1802 cv
125.266 97.7065 125.083 97.1709 124.629 97.001 cv
124 96.7661 123.388 97.4092 123.13 98.0298 cv
122.632 99.2285 122.655 100.57 122.664 101.868 cv
122.687 105.506 123.081 109.427 122.153 112.947 cv
121.977 113.612 120.606 113.639 120.172 113.24 cv
119.743 112.844 119.292 110.499 119.228 110.02 cv
118.945 107.954 118.772 107.83 118.49 105.765 cv
118.403 105.126 118.134 103.381 118.163 101.631 cv
118.198 99.4248 118.83 95.772 119.196 93.5957 cv
119.09 93.5288 119.238 93.3877 119.36 93.3574 cv
120.699 93.0298 122.096 93.063 123.474 93.0977 cv
125.103 93.1382 126.731 93.1792 128.359 93.2202 cv
128.919 93.2349 129.387 93.125 129.716 92.6709 cv
cp
1 1 1 rgb
f
133.383 64.9136 mo
133.504 65.207 133.767 65.416 133.939 65.6807 cv
134.233 66.1299 134.251 66.6978 134.259 67.2339 cv
134.261 67.459 134.259 67.7031 134.121 67.8818 cv
133.881 68.1938 133.4 68.125 133.02 68.0249 cv
133.186 67.5967 132.929 67.0532 132.49 66.9126 cv
132.245 66.832 131.928 66.8447 131.791 66.6235 cv
131.707 66.4888 131.728 66.3164 131.752 66.1592 cv
131.881 65.335 132.01 64.5112 132.139 63.687 cv
132.182 63.4155 132.255 63.1001 132.506 62.9868 cv
132.757 62.8735 133.064 63.0449 133.194 63.2886 cv
133.324 63.5308 133.322 63.8208 133.311 64.0962 cv
133.297 64.3716 133.28 64.6582 133.383 64.9136 cv
cp
1 .733333 .552941 rgb
f
115.707 64.9956 mo
115.586 65.2886 115.324 65.4976 115.149 65.7632 cv
114.857 66.2114 114.839 66.7798 114.832 67.3145 cv
114.828 67.5405 114.831 67.7852 114.969 67.9639 cv
115.209 68.2759 115.69 68.2065 116.071 68.1064 cv
115.904 67.6777 116.162 67.1353 116.599 66.9937 cv
116.847 66.9141 117.162 66.9263 117.299 66.7061 cv
117.383 66.5708 117.361 66.3979 117.337 66.2412 cv
117.208 65.4165 117.08 64.5933 116.951 63.7686 cv
116.909 63.4971 116.835 63.1826 116.584 63.0688 cv
116.333 62.9556 116.026 63.1265 115.896 63.3701 cv
115.766 63.6133 115.768 63.9028 115.78 64.1777 cv
115.792 64.4536 115.811 64.7397 115.707 64.9956 cv
cp
f
122.428 77.2275 mo
122.415 76.1143 122.4 75.0015 122.387 73.8892 cv
122.6 73.6733 122.943 73.5479 123.246 73.5459 cv
123.815 73.543 124.379 73.6538 124.937 73.7622 cv
125.07 73.7886 125.216 73.8228 125.296 73.9331 cv
125.378 74.0459 125.36 74.2012 125.345 74.3398 cv
125.226 75.3501 125.344 76.3877 125.688 77.3452 cv
124.917 77.7212 124.031 77.8545 123.184 77.7222 cv
122.917 77.6797 122.431 77.4971 122.428 77.2275 cv
cp
f
121.295 69.8105 mo
121.285 69.8213 121.275 69.8315 121.266 69.8418 cv
120.282 70.9111 120.788 72.7466 121.527 73.8008 cv
121.768 74.1431 122.019 74.4878 122.352 74.7412 cv
123.073 75.2876 124.111 75.3135 124.924 74.9146 cv
125.736 74.5161 126.327 73.7456 126.638 72.896 cv
126.845 72.3267 126.936 71.6831 126.714 71.1187 cv
126.592 70.8081 126.384 70.5396 126.158 70.2944 cv
125.513 69.5972 124.658 69.0444 123.711 68.96 cv
122.887 68.8872 121.878 69.2031 121.295 69.8105 cv
cp
f
136.582 93.7656 mo
136.503 93.8501 136.43 93.9512 136.365 94.0698 cv
135.896 94.9287 135.531 96.2788 135.452 97.2529 cv
135.153 100.928 135.24 104.325 135.32 105.095 cv
135.4 105.86 135.419 106.633 135.388 107.402 cv
135.35 108.371 135.27 109.336 135.161 110.299 cv
135.021 111.541 134.88 112.782 134.741 114.024 cv
134.725 114.158 134.822 114.278 134.956 114.293 cv
137.057 114.519 li
137.193 114.533 137.311 114.432 137.319 114.296 cv
137.389 113.131 137.575 111.892 137.625 110.738 cv
137.664 109.893 137.701 109.046 137.846 108.213 cv
138.276 105.707 138.48 103.898 138.704 101.365 cv
138.828 99.9844 139.45 97.6079 139.718 97.6821 cv
140.271 97.8364 141.517 100.97 142.312 102.805 cv
142.444 103.109 142.578 103.422 142.592 103.753 cv
142.607 104.097 142.493 104.431 142.382 104.755 cv
141.821 106.395 141.302 108.049 140.827 109.715 cv
140.594 110.532 140.208 111.554 139.963 112.475 cv
139.837 112.945 139.595 113.672 139.718 114.101 cv
139.75 114.217 141.056 114.282 141.568 114.313 cv
141.751 114.323 141.942 114.379 142.123 114.413 cv
142.3 114.444 144.307 109.063 144.536 108.393 cv
144.844 107.491 145.819 105.68 145.794 104.71 cv
145.764 103.559 145.338 101.225 145.088 100.076 cv
144.567 97.6821 144.077 97.1753 143.667 95.7515 cv
143.431 94.9307 143.024 93.8452 142.123 93.5386 cv
141.117 93.1963 139.587 93.3408 138.523 93.314 cv
137.75 93.2944 137.048 93.2612 136.582 93.7656 cv
cp
.337255 .564706 .780392 rgb
f
106.076 103.656 mo
105.905 103.81 105.753 103.985 105.626 104.176 cv
105.529 104.322 105.444 104.48 105.4 104.648 cv
105.333 104.898 105.411 105.162 105.563 105.371 cv
106.208 106.255 106.371 107.149 107.01 108.02 cv
108.554 110.125 110.229 112.836 112.359 114.465 cv
112.577 114.632 112.894 114.469 112.884 114.195 cv
112.87 113.779 112.749 113.443 112.58 112.966 cv
112.292 112.158 111.942 110.692 110.879 108.976 cv
110.413 108.225 110.115 107.462 109.672 106.706 cv
109.298 106.066 108.969 105.565 108.369 105.055 cv
108.042 104.778 107.68 104.44 107.705 104.013 cv
107.713 103.866 107.77 103.722 107.753 103.575 cv
107.721 103.291 107.407 103.101 107.12 103.125 cv
106.835 103.148 106.289 103.465 106.076 103.656 cv
cp
1 .733333 .552941 rgb
f
113.68 104.104 mo
114.233 105.781 114.541 107.437 114.767 109.385 cv
114.955 111.005 115.062 112.352 115.195 113.978 cv
115.231 114.428 115.258 114.897 115.17 115.334 cv
115.112 115.619 114.74 115.696 114.565 115.465 cv
113.978 114.696 113.624 113.753 113.287 112.835 cv
112.469 110.61 111.65 108.385 110.833 106.16 cv
110.759 105.96 110.696 105.756 110.657 105.547 cv
110.378 104.045 111.28 103.696 112.106 103.583 cv
112.712 103.499 113.487 103.522 113.68 104.104 cv
cp
f
107.401 92.2607 mo
106.501 93.3647 106.02 95.1914 105.724 96.5161 cv
105.411 97.9131 105.171 98.9551 105.002 100.377 cv
104.916 101.107 104.855 101.842 104.827 102.577 cv
104.796 103.395 104.552 103.967 105.387 104.209 cv
107.946 104.95 111.015 104.557 113.696 104.281 cv
114.096 104.239 114.376 103.872 114.315 103.473 cv
114.129 102.27 114.071 100.485 113.297 97.0361 cv
112.961 95.5405 112.503 94.0737 111.978 92.6333 cv
111.911 92.4512 111.805 92.2817 111.652 92.1606 cv
110.582 91.3135 108.862 92.104 107.808 92.5176 cv
107.633 92.5854 107.508 92.1299 107.401 92.2607 cv
cp
.290196 .466667 .388235 rgb
f
105.928 81.5806 mo
105.967 81.2056 106.938 80.5986 106.93 80.1685 cv
106.91 78.9824 106.542 78.7021 106.742 78.4561 cv
107.018 78.1182 108.367 78.0371 108.757 78.0977 cv
109.364 78.1929 109.159 78.2373 109.284 78.9004 cv
109.425 79.6509 109.713 80.5366 110.49 80.6392 cv
111.126 80.7231 110.003 81.8896 109.565 82.293 cv
109.093 82.7271 108.397 82.9507 107.789 82.748 cv
107.386 82.6133 106.714 82.1396 106.56 81.7227 cv
106.518 81.6089 105.917 81.6831 105.928 81.5806 cv
cp
1 .733333 .552941 rgb
f
105.523 74.0039 mo
105.348 74.3584 105.256 74.752 105.26 75.1255 cv
105.267 75.7378 105.088 76.229 105.223 76.8262 cv
105.421 77.7046 105.767 78.645 106.554 79.082 cv
107.348 79.5249 108.394 79.2954 109.092 78.7144 cv
109.792 78.1333 110.196 77.2681 110.448 76.3945 cv
110.688 75.5664 110.801 74.6426 110.425 73.8677 cv
110.079 73.1572 109.344 72.6743 108.563 72.5557 cv
107.782 72.4375 106.971 72.6616 106.309 73.0923 cv
105.97 73.314 105.703 73.6387 105.523 74.0039 cv
cp
f
104.757 75.8608 mo
104.771 75.9263 104.854 75.9478 104.901 75.8999 cv
105.436 75.3516 106.097 74.9419 106.75 74.5391 cv
107.101 74.3237 107.449 74.1079 107.799 73.8931 cv
108.001 73.7681 108.517 73.3604 108.751 73.3965 cv
109.017 73.438 109.718 73.6714 110.345 73.8604 cv
110.399 73.8765 110.468 73.8887 110.504 73.8447 cv
110.524 73.8198 110.527 73.7842 110.527 73.752 cv
110.531 72.5806 109.549 71.5234 108.397 71.3193 cv
107.244 71.1152 106.023 71.6992 105.347 72.6548 cv
104.7 73.5674 104.526 74.7656 104.757 75.8608 cv
cp
1 1 1 rgb
f
106.992 69.4883 mo
107.524 69.1001 108.194 69.144 108.627 69.353 cv
109.119 69.5894 109.362 70.2061 109.242 70.7383 cv
109.122 71.271 108.694 71.7012 108.189 71.9097 cv
108.022 71.9785 107.842 72.0269 107.663 72.0088 cv
107.366 71.978 107.111 71.7661 106.954 71.5122 cv
106.796 71.2578 106.714 71.1235 106.624 70.8394 cv
106.48 70.3892 106.707 69.6968 106.992 69.4883 cv
cp
f
118.931 93.7383 mo
118.716 90.2046 118.286 86.6841 117.642 83.2021 cv
117.473 82.29 117.269 81.3364 116.666 80.6313 cv
116.252 80.1494 115.688 79.8271 115.206 79.415 cv
114.063 78.437 113.42 76.9712 113.182 75.4854 cv
112.943 74.0005 113.074 72.4814 113.259 70.9893 cv
113.371 70.0869 113.825 68.5254 114.286 67.5874 cv
114.375 67.4063 114.573 67.3032 114.771 67.332 cv
115.319 67.4131 115.907 67.6113 116.463 67.7197 cv
116.767 67.7788 116.938 68.106 116.805 68.3857 cv
116.646 68.7246 116.444 69.0889 116.362 69.2778 cv
115.346 71.6367 115.644 75.1094 117.292 77.0859 cv
117.418 77.2378 117.546 77.3911 117.7 77.5161 cv
118.194 77.9165 118.876 77.9688 119.512 78.0024 cv
119.837 78.02 120.082 77.8711 120.359 77.7104 cv
120.528 77.6128 120.676 77.4839 120.798 77.3325 cv
121.071 76.9961 121.303 76.627 121.49 76.2378 cv
123.056 76.2373 124.684 75.9907 126.25 75.9902 cv
126.531 76.9277 126.946 77.9463 128.12 78.0718 cv
128.497 78.1113 128.879 78.0322 129.222 77.8701 cv
130.208 77.4038 130.937 76.4966 131.543 75.6475 cv
132.567 74.2148 132.687 73.5303 133.017 71.9644 cv
133.15 71.3315 133.206 70.1924 132.976 69.0181 cv
132.905 68.6553 132.253 67.8745 133.115 67.8125 cv
133.924 67.7539 135.25 67.5879 135.308 68.2813 cv
135.41 69.4956 135.513 70.9185 135.472 72.1274 cv
135.364 75.2959 134.654 77.4067 132.158 79.7393 cv
131.805 80.0684 131.046 80.7202 130.705 81.0605 cv
129.603 82.1616 129.688 83.9414 129.85 85.4912 cv
130.13 88.165 130.23 90.75 130.163 93.4375 cv
128.373 94.0186 126.458 94.0552 124.577 94.0874 cv
122.698 94.1191 120.821 94.1509 118.942 94.1826 cv
118.9 93.9507 118.945 93.9736 118.931 93.7383 cv
cp
.572549 .733333 .839216 rgb
f
121.708 72.3271 mo
122.286 71.6016 123.009 70.9434 123.697 70.3613 cv
123.983 70.1206 124.399 69.7324 124.588 69.8159 cv
124.772 69.8975 125.393 70.1997 125.695 70.4194 cv
125.939 70.5977 126.339 71.0083 126.675 71.2085 cv
126.778 71.2705 126.914 71.189 126.904 71.0684 cv
126.854 70.4019 126.44 69.502 125.958 69.1201 cv
125.416 68.6914 125.058 68.4448 124.158 68.3223 cv
123.897 68.2871 123.41 68.2905 123.147 68.3091 cv
122.921 68.3232 122.699 68.3848 122.488 68.4683 cv
121.192 68.9805 120.325 70.4092 120.468 71.7949 cv
120.51 72.1982 120.636 72.605 120.902 72.9106 cv
120.966 72.9829 121.055 73.0542 121.147 73.0303 cv
121.216 73.0122 121.261 72.9482 121.3 72.8887 cv
121.425 72.6968 121.562 72.5093 121.708 72.3271 cv
cp
1 1 1 rgb
f
124.79 78.1875 mo
124.99 77.9961 125.043 77.7012 125.086 77.4277 cv
125.13 77.1416 125.169 76.8262 125.01 76.585 cv
124.864 76.3623 124.579 76.2632 124.312 76.272 cv
124.046 76.2798 123.792 76.3784 123.542 76.4751 cv
123.521 76.4839 123.499 76.4922 123.477 76.501 cv
123.296 76.5713 123.11 76.645 122.971 76.7793 cv
122.657 77.083 122.688 77.6343 122.967 77.9692 cv
123.248 78.3037 123.711 78.4395 124.147 78.418 cv
124.379 78.4063 124.622 78.3481 124.79 78.1875 cv
cp
f
126.388 88.5352 mo
126.487 88.9497 126.441 89.2891 126.179 89.624 cv
125.719 90.2109 125.26 90.7979 124.801 91.3838 cv
124.733 91.4712 124.66 91.561 124.559 91.6045 cv
124.462 91.646 124.351 91.6382 124.25 91.6108 cv
123.876 91.5122 123.617 91.1831 123.384 90.874 cv
123.036 90.4092 122.518 90.0078 122.252 89.4858 cv
121.936 88.8643 122.258 88.2627 122.389 87.5869 cv
122.905 84.9248 123.134 82.2607 123.134 79.5371 cv
123.134 79.0557 123.186 78.4712 123.618 78.2598 cv
124.009 78.0693 124.499 78.3374 124.707 78.7192 cv
124.915 79.1011 124.92 79.5566 124.929 79.9912 cv
124.989 82.9009 125.709 85.7051 126.388 88.5352 cv
cp
f
136.222 93.4321 mo
136.222 93.4268 136.223 93.4219 136.223 93.416 cv
136.281 92.6753 136.433 91.9458 136.49 91.2056 cv
136.563 90.2437 136.606 89.2798 136.594 88.3149 cv
136.569 86.4038 136.333 84.4858 135.732 82.6665 cv
135.532 82.0635 134.863 81.897 134.415 81.4487 cv
134.276 81.3096 134.133 81.1641 134.074 80.978 cv
133.976 80.668 134.135 80.334 134.339 80.0801 cv
135.006 79.249 136.11 78.9136 137.162 78.7368 cv
138.428 78.5239 139.744 78.4756 140.986 78.8062 cv
142.227 79.1372 143.392 79.8774 144.055 80.9771 cv
144.114 81.0737 144.17 81.1782 144.167 81.291 cv
144.16 81.5859 143.8 81.7114 143.567 81.8936 cv
143.245 82.146 143.137 82.5811 143.071 82.9858 cv
142.537 86.2632 143.47 89.6157 143.209 92.9263 cv
143.194 93.125 143.17 93.333 143.053 93.4941 cv
142.899 93.7051 142.626 93.7827 142.372 93.8423 cv
140.711 94.229 138.99 94.3809 137.287 94.2803 cv
136.42 94.229 136.16 94.2612 136.222 93.4321 cv
cp
f
140.424 91.2764 mo
140.671 91.1528 140.963 91.2856 141.206 91.4165 cv
141.671 91.665 142.135 91.915 142.599 92.1641 cv
142.847 92.2964 143 92.4434 142.989 92.7231 cv
142.955 93.4834 141.926 95.1943 140.963 94.7544 cv
140.608 94.5918 140.447 93.9067 140.19 93.605 cv
140.088 93.4858 139.978 93.3726 139.896 93.2388 cv
139.537 92.6455 139.803 91.5859 140.424 91.2764 cv
cp
1 .733333 .552941 rgb
f
131.769 89.4648 mo
131.268 87.938 131.83 85.917 132.337 84.4551 cv
132.461 84.0972 132.586 83.7388 132.71 83.3799 cv
132.94 82.7173 133.56 80.6377 134.224 80.3115 cv
134.363 80.2437 134.595 80.3906 134.735 80.4556 cv
135.286 80.7085 135.63 81.042 135.942 81.5596 cv
136.372 82.2725 136.179 83.3315 135.816 84.0786 cv
135.452 84.8262 135.028 85.9683 134.885 86.7876 cv
134.842 87.0322 134.833 87.293 134.926 87.5244 cv
135.022 87.7666 135.217 87.9541 135.411 88.1274 cv
136.685 89.2686 138.1 89.7231 139.708 90.3047 cv
140.127 90.4556 140.612 90.646 140.731 91.0742 cv
140.815 91.3779 140.68 91.6934 140.545 91.979 cv
140.256 92.5947 139.877 93.2847 139.21 93.4155 cv
138.79 93.4976 138.365 93.3262 137.97 93.1602 cv
136.462 92.5225 134.953 91.8853 133.445 91.2476 cv
132.531 90.8618 132.019 90.2246 131.769 89.4648 cv
cp
.290196 .466667 .388235 rgb
f
143.426 81.1074 mo
143.701 80.9346 144.067 81.0249 144.223 81.3096 cv
145.605 83.854 146.541 85.4883 147.012 89.6826 cv
147.131 90.7471 146.682 91.7368 146.538 92.7983 cv
146.418 93.6846 146.298 94.5703 146.178 95.4565 cv
146.149 95.6655 146.111 95.8936 145.953 96.0317 cv
145.816 96.1494 145.625 96.1724 145.446 96.1904 cv
144.808 96.2534 144.169 96.3169 143.53 96.3804 cv
143.761 94.5137 143.973 92.6455 144.167 90.7749 cv
144.25 89.9766 144.436 89.1714 144.188 88.4365 cv
143.923 87.6514 143.527 86.8413 143.192 86.0728 cv
143.057 85.7603 142.907 85.437 142.667 85.2012 cv
142.561 85.0981 142.485 84.9673 142.457 84.8232 cv
142.324 84.1514 142.292 83.521 142.458 82.8413 cv
142.613 82.2012 142.851 81.4668 143.426 81.1074 cv
cp
f
141.307 93.3486 mo
142.162 91.4551 143.382 89.6533 144.505 87.9238 cv
146 89.0718 147.614 89.8677 149.354 90.5933 cv
148.979 91.3354 144.563 99.0723 144.474 99.0327 cv
143.208 98.4648 141.248 97.4634 140.173 96.584 cv
140.095 96.519 140.012 96.4473 139.99 96.3491 cv
139.966 96.2461 140.013 96.1406 140.06 96.0459 cv
140.49 95.1611 140.896 94.2568 141.307 93.3486 cv
cp
.572549 .733333 .839216 rgb
f
131.967 65.2705 mo
132.123 63.2397 132.125 61.4736 132.281 59.4429 cv
132.362 58.3789 132.327 57.498 131.298 57.438 cv
127.82 57.2329 126.455 57.3438 123.852 57.2754 cv
122.524 57.2407 121.196 57.2329 119.869 57.2534 cv
118.93 57.2671 117.639 57.1382 116.861 57.8008 cv
116.264 58.3096 116.297 59.2251 116.387 60.0034 cv
116.529 61.2529 116.686 62.5 116.856 63.7461 cv
116.983 64.6807 116.899 66.1782 117.458 66.9639 cv
117.814 67.4644 118.831 67.5122 119.403 67.5469 cv
120.511 67.6128 121.643 67.5479 122.753 67.5483 cv
124.987 67.5503 127.221 67.5527 129.455 67.5542 cv
131.025 67.5562 131.845 66.8677 131.967 65.2705 cv
cp
.290196 .466667 .388235 rgb
f
122.189 78.603 mo
122.813 77.8296 123.571 77.1851 124.065 76.3223 cv
124.065 76.3223 124.154 76.0581 124.081 76.0459 cv
123.324 75.9238 122.314 75.877 121.559 76.002 cv
121.481 76.0146 121.422 76.0801 121.414 76.1582 cv
121.335 76.9243 121.441 77.7095 121.721 78.4277 cv
121.783 78.5854 121.927 78.772 122.081 78.7007 cv
122.125 78.6802 122.158 78.6411 122.189 78.603 cv
cp
.337255 .564706 .780392 rgb
f
126.131 75.8799 mo
126.236 75.8945 126.31 75.9893 126.308 76.0952 cv
126.294 76.8628 126.02 77.8682 125.77 78.5474 cv
125.736 78.6362 125.631 78.6694 125.417 78.4399 cv
125.315 78.3311 124.958 77.8755 124.879 77.7495 cv
124.532 77.1909 124.396 76.8701 124.065 76.3223 cv
124.033 76.2695 124.017 76.1577 124.043 76.1021 cv
124.062 76.0654 124.105 76.0498 124.145 76.0381 cv
124.772 75.8564 125.479 75.7925 126.131 75.8799 cv
cp
f
110.172 80.4468 mo
109.713 81.0488 109.306 81.5469 108.945 81.9893 cv
108.629 82.3789 108.212 82.0493 108.001 81.8745 cv
107.548 81.501 107.096 81.1265 106.643 80.7529 cv
106.571 80.6934 106.497 80.6328 106.407 80.6143 cv
106.273 80.5859 106.142 80.6533 106.023 80.7188 cv
105.797 80.8428 105.571 80.9668 105.346 81.0918 cv
103.494 82.1089 102.378 83.9795 101.734 85.9917 cv
101.504 86.707 101.376 87.4497 101.299 88.1973 cv
101.189 89.2764 100.929 90.5337 101.468 91.5337 cv
101.775 92.1035 102.305 92.5137 102.82 92.9072 cv
103.513 93.4365 104.235 93.979 105.061 94.2373 cv
105.226 94.2891 105.398 94.1831 105.43 94.0127 cv
105.576 93.2241 105.825 92.4556 106.168 91.7319 cv
106.23 91.603 106.174 91.4492 106.042 91.3975 cv
105.482 91.1758 104.809 91.1182 104.514 90.6094 cv
104.401 90.4155 104.37 90.186 104.354 89.9619 cv
104.255 88.5298 104.792 87.0659 105.786 86.0308 cv
105.887 85.9248 106.058 85.9048 106.175 85.9946 cv
106.441 86.2017 106.58 86.5132 106.676 86.8672 cv
106.854 87.5249 107.033 88.1865 107.106 88.8643 cv
107.231 90.0347 107.037 91.231 107.249 92.3892 cv
107.267 92.4883 107.291 92.5918 107.361 92.6636 cv
107.461 92.7666 107.621 92.7739 107.764 92.7734 cv
108.97 92.769 110.176 92.7305 111.38 92.6577 cv
111.451 92.6538 111.524 92.6479 111.588 92.6147 cv
111.752 92.5288 111.771 92.3052 111.769 92.1196 cv
111.745 90.3032 111.792 87.9971 111.751 86.1016 cv
111.747 85.8696 112.001 85.73 112.199 85.8501 cv
112.978 86.3213 113.436 86.9692 113.642 87.5757 cv
113.884 88.2925 113.547 89.2837 113.1 89.8955 cv
112.926 90.1343 112.692 90.4028 112.783 90.6855 cv
112.825 90.8188 113.852 91.5781 114.488 92.0225 cv
114.599 92.1006 114.753 92.0796 114.838 91.9741 cv
115.839 90.7446 116.516 89.2881 116.863 87.7373 cv
116.917 87.4946 116.962 87.2407 116.904 87 cv
116.852 86.7837 116.722 86.5952 116.593 86.4131 cv
116.056 85.6509 115.518 84.8887 114.981 84.126 cv
114.376 83.2671 113.765 82.4009 112.994 81.687 cv
112.46 81.1909 111.472 80.4556 110.614 80.3208 cv
110.456 80.2954 110.267 80.3232 110.172 80.4468 cv
cp
1 1 1 rgb
f
105.845 92.0698 mo
105.881 92.0044 105.96 91.9761 106.03 92.002 cv
109.201 93.1665 li
109.503 93.2773 109.823 93.4023 110.007 93.666 cv
110.129 93.8384 110.175 94.0518 110.211 94.2598 cv
110.312 94.8608 110.334 95.4746 110.277 96.0815 cv
110.506 96.4961 110.793 96.5728 111.022 96.9868 cv
110.569 97.1567 109.958 97.4087 109.544 97.1543 cv
109.131 96.9004 108.847 96.4502 108.793 95.9683 cv
108.761 95.6729 108.81 95.3628 108.704 95.0854 cv
108.508 94.564 107.88 94.377 107.335 94.2593 cv
106.788 94.1406 106.239 94.0215 105.69 93.9023 cv
105.626 93.8882 105.558 93.8721 105.514 93.8237 cv
105.48 93.7876 105.465 93.7373 105.453 93.689 cv
105.317 93.1396 105.567 92.5723 105.845 92.0698 cv
cp
1 .733333 .552941 rgb
f
113.048 90.7056 mo
112.517 91.25 111.897 91.6484 111.375 92.2007 cv
110.947 92.6519 110.684 93.0298 110.258 93.4829 cv
110.146 93.6016 110.032 93.7251 109.976 93.8784 cv
109.916 94.0391 109.926 94.2178 109.937 94.3906 cv
109.953 94.6641 109.97 94.938 109.987 95.2124 cv
109.997 95.3545 110.006 95.4995 110.047 95.6367 cv
110.089 95.7788 110.108 96.019 110.184 96.1479 cv
110.451 96.6055 110.499 96.9219 110.736 97.396 cv
110.879 97.6821 111.302 97.709 111.412 97.6821 cv
111.841 97.5801 111.8 97.4365 111.841 96.9253 cv
111.893 96.2837 111.927 96.2065 111.8 95.5752 cv
111.718 95.166 111.64 94.9082 111.7 94.7793 cv
111.762 94.6421 111.887 94.5464 112.006 94.4551 cv
112.702 93.9321 113.171 93.3774 113.866 92.854 cv
114.232 92.5786 114.603 92.2397 114.624 91.8716 cv
114.636 91.6387 114.457 91.4116 114.291 91.2476 cv
113.958 90.917 113.278 90.4697 113.048 90.7056 cv
cp
f
141.973 75.1802 mo
142.112 74.8354 142.229 74.4761 142.249 74.104 cv
142.282 73.4985 142.041 72.8833 141.605 72.4614 cv
141.171 72.0386 140.549 71.8159 139.945 71.8667 cv
139.674 71.8892 139.409 71.9639 139.146 72.0376 cv
138.893 72.1094 138.638 72.1807 138.385 72.2524 cv
138.3 72.2769 138.215 72.2998 138.136 72.3369 cv
137.954 72.4219 137.81 72.5703 137.69 72.7305 cv
137.321 73.2183 137.139 73.833 137.115 74.4443 cv
137.085 75.2012 137.301 75.9824 137.794 76.5571 cv
138.288 77.1318 139.075 77.4692 139.821 77.3398 cv
140.867 77.1567 141.576 76.166 141.973 75.1802 cv
cp
f
139.769 73.8057 mo
138.706 73.6733 137.728 73.6147 137.292 73.6445 cv
137.173 73.6528 137.078 73.54 137.107 73.4243 cv
137.229 72.9482 137.512 72.4834 137.887 72.1895 cv
138.335 71.8374 138.761 71.6348 139.318 71.5146 cv
139.94 71.3799 140.768 71.4365 141.326 71.7407 cv
141.76 71.978 142.075 72.3979 142.254 72.8589 cv
142.396 73.2256 142.46 73.6177 142.479 74.0112 cv
142.485 74.1348 142.368 74.2275 142.25 74.1924 cv
141.784 74.0508 140.722 73.9243 139.769 73.8057 cv
cp
1 1 1 rgb
f
140.239 76.6807 mo
139.716 76.667 139.194 76.6548 138.672 76.6416 cv
138.565 76.6401 138.447 76.6406 138.363 76.707 cv
138.272 76.7788 138.25 76.9048 138.232 77.0195 cv
137.986 78.6748 li
137.959 78.854 138.062 79.0269 138.23 79.0942 cv
138.936 79.3779 140.709 79.5552 140.72 79.0957 cv
140.733 78.4248 140.65 77.7559 140.615 77.0854 cv
140.609 76.958 140.594 76.8135 140.491 76.7383 cv
140.42 76.686 140.327 76.6821 140.239 76.6807 cv
cp
1 .733333 .552941 rgb
f
139.769 81.1323 mo
140.087 81.1323 140.087 80.6377 139.769 80.6377 cv
139.45 80.6377 139.45 81.1323 139.769 81.1323 cv
139.769 81.1323 li
cp
.572549 .733333 .839216 rgb
f
140.014 83.5493 mo
140.337 83.5493 140.337 83.0483 140.014 83.0483 cv
139.692 83.0483 139.692 83.5493 140.014 83.5493 cv
140.014 83.5493 li
cp
f
140.26 85.8667 mo
140.616 85.8667 140.616 85.3145 140.26 85.3145 cv
139.903 85.3145 139.903 85.8667 140.26 85.8667 cv
140.26 85.8667 li
cp
f
140.663 87.7534 mo
140.655 87.7495 140.648 87.7466 140.64 87.7427 cv
140.552 87.7026 140.436 87.7129 140.386 87.8091 cv
140.38 87.8208 140.375 87.8315 140.368 87.8433 cv
140.326 87.9253 140.356 88.0581 140.464 88.0757 cv
140.474 88.0771 140.486 88.0791 140.497 88.0815 cv
140.592 88.0972 140.702 88.0581 140.725 87.9521 cv
140.727 87.9414 140.729 87.9316 140.731 87.9219 cv
140.745 87.8613 140.725 87.7813 140.663 87.7534 cv
140.663 87.7534 li
cp
f
140.751 90.395 mo
141.036 90.395 141.036 89.9521 140.751 89.9521 cv
140.465 89.9521 140.465 90.395 140.751 90.395 cv
140.751 90.395 li
cp
f
109.74 84.6543 mo
109.997 84.7593 110.256 84.7002 110.526 84.6904 cv
110.843 84.6797 111.168 84.7168 111.479 84.6484 cv
111.722 84.5942 111.72 84.2144 111.479 84.1597 cv
111.135 84.082 110.763 84.1104 110.415 84.1416 cv
110.113 84.1675 109.851 84.207 109.66 84.46 cv
109.604 84.5352 109.669 84.626 109.74 84.6543 cv
109.74 84.6543 li
cp
f
123.646 80.1099 mo
123.861 80.1099 123.861 79.7769 123.646 79.7769 cv
123.431 79.7769 123.431 80.1099 123.646 80.1099 cv
123.646 80.1099 li
cp
f
124.547 82.5586 mo
124.858 82.5586 124.858 82.0757 124.547 82.0757 cv
124.235 82.0757 124.235 82.5586 124.547 82.5586 cv
124.547 82.5586 li
cp
f
123.81 84.8013 mo
124.007 84.8013 124.007 84.4971 123.81 84.4971 cv
123.614 84.4971 123.614 84.8013 123.81 84.8013 cv
123.81 84.8013 li
cp
f
125.201 85.9795 mo
125.387 85.9795 125.387 85.6924 125.201 85.6924 cv
125.016 85.6924 125.016 85.9795 125.201 85.9795 cv
125.201 85.9795 li
cp
f
123.694 87.2212 mo
123.701 87.2275 123.708 87.2334 123.715 87.2397 cv
123.815 87.3306 123.954 87.1929 123.864 87.0918 cv
123.857 87.0845 123.851 87.0776 123.845 87.0703 cv
123.752 86.9678 123.591 87.1284 123.694 87.2212 cv
123.694 87.2212 li
cp
f
124.93 88.3828 mo
124.943 88.3853 124.957 88.3882 124.969 88.3906 cv
125.136 88.4272 125.136 88.1558 124.969 88.1914 cv
124.957 88.1943 124.943 88.1973 124.93 88.1997 cv
124.839 88.2192 124.839 88.3633 124.93 88.3828 cv
124.93 88.3828 li
cp
f
123.155 89.1338 mo
123.145 89.1304 123.134 89.127 123.124 89.1221 cv
123.237 89.2007 123.391 89.0464 123.313 88.9331 cv
123.281 88.8857 123.25 88.8618 123.195 88.8457 cv
122.978 88.7842 122.947 89.1523 123.155 89.1338 cv
123.155 89.1338 li
cp
f
124.383 90.5806 mo
124.59 90.5806 124.59 90.2578 124.383 90.2578 cv
124.175 90.2578 124.175 90.5806 124.383 90.5806 cv
124.383 90.5806 li
cp
f
124.26 77.832 mo
124.386 77.832 124.386 77.6367 124.26 77.6367 cv
124.134 77.6367 124.134 77.832 124.26 77.832 cv
124.26 77.832 li
cp
f
gsave
131.967 65.2705 mo
132.123 63.2397 132.125 61.4736 132.281 59.4429 cv
132.362 58.3789 132.327 57.498 131.298 57.438 cv
127.82 57.2329 126.455 57.3438 123.852 57.2754 cv
122.524 57.2407 121.196 57.2329 119.869 57.2534 cv
118.93 57.2671 117.639 57.1382 116.861 57.8008 cv
116.264 58.3096 116.297 59.2251 116.387 60.0034 cv
116.529 61.2529 116.686 62.5 116.856 63.7461 cv
116.983 64.6807 116.899 66.1782 117.458 66.9639 cv
117.814 67.4644 118.831 67.5122 119.403 67.5469 cv
120.511 67.6128 121.643 67.5479 122.753 67.5483 cv
124.987 67.5503 127.221 67.5527 129.455 67.5542 cv
131.025 67.5562 131.845 66.8677 131.967 65.2705 cv
cp
clp
114.12 59.8071 mo
115.249 60.1772 116.514 60.1182 117.688 60.1201 cv
120.056 60.1245 122.423 60.1147 124.791 60.1133 cv
127.068 60.1123 129.347 60.0981 131.625 60.127 cv
132.42 60.1367 133.217 60.1528 134.013 60.188 cv
134.5 60.21 134.936 60.3188 135.383 60.0962 cv
135.595 59.9907 135.699 59.647 135.552 59.4502 cv
134.938 58.6279 132.928 58.936 132.025 58.9219 cv
129.702 58.8867 127.378 58.8955 125.055 58.9316 cv
122.667 58.9697 120.281 59.0195 117.895 59.1045 cv
116.664 59.1475 115.283 59.1035 114.12 59.5688 cv
114.008 59.6133 113.997 59.7671 114.12 59.8071 cv
114.12 59.8071 li
cp
f
114.462 62.7251 mo
116.407 63.2368 118.631 62.9385 120.615 62.8149 cv
122.512 62.6958 124.405 62.6567 126.305 62.6304 cv
127.944 62.6074 129.585 62.583 131.225 62.624 cv
132.04 62.644 132.83 62.6714 133.646 62.5908 cv
134.274 62.5293 135.239 62.5918 135.772 62.2173 cv
136.106 61.9819 136.091 61.5708 135.772 61.3335 cv
135.28 60.9678 134.591 61.1992 134.027 61.269 cv
133.187 61.3745 132.371 61.3911 131.525 61.3564 cv
129.901 61.2896 128.27 61.3359 126.645 61.3623 cv
124.787 61.3931 122.935 61.4517 121.08 61.582 cv
118.927 61.7344 116.549 61.7227 114.462 62.2983 cv
114.252 62.3564 114.249 62.6699 114.462 62.7251 cv
114.462 62.7251 li
cp
f
114.599 65.1309 mo
116.308 65.6143 118.178 65.5127 119.94 65.522 cv
121.86 65.5322 123.779 65.5181 125.698 65.5039 cv
127.616 65.4897 129.534 65.4697 131.452 65.4473 cv
133.005 65.4292 135.061 65.8018 136.483 65.1221 cv
136.786 64.9766 136.787 64.4663 136.483 64.3213 cv
135.06 63.6436 133 64.0396 131.452 64.0576 cv
129.533 64.0801 127.616 64.1245 125.698 64.1763 cv
123.779 64.228 121.859 64.2803 119.94 64.3384 cv
118.177 64.3921 116.308 64.3174 114.599 64.8037 cv
114.437 64.8491 114.437 65.0854 114.599 65.1309 cv
114.599 65.1309 li
cp
f
grestore
108.5 20.0205 mo
108.127 19.168 107.765 18.521 107.132 17.8247 cv
106.461 17.0864 105.77 16.3276 105.042 15.6455 cv
104.258 14.9126 103.15 16.0288 103.869 16.8179 cv
104.487 17.4951 105.286 18.0146 105.991 18.5967 cv
106.663 19.1523 107.489 19.707 108.065 20.355 cv
108.291 20.6094 108.614 20.2861 108.5 20.0205 cv
108.5 20.0205 li
cp
.337255 .564706 .780392 rgb
f
102.99 25.4131 mo
102.444 24.4209 101.515 24.126 100.479 23.7646 cv
99.7529 23.5117 99.0186 23.2749 98.2866 23.0322 cv
97.4053 22.7402 96.5522 22.2256 95.6157 22.2339 cv
95.0464 22.2383 94.8154 22.9023 95.1729 23.3042 cv
96.0698 24.3154 97.896 24.5122 99.1479 24.8828 cv
100.186 25.1895 101.671 25.252 102.587 25.8149 cv
102.846 25.9731 103.127 25.6646 102.99 25.4131 cv
102.99 25.4131 li
cp
f
102.644 42.6597 mo
100.339 43.022 97.7847 43.3589 95.8345 44.7471 cv
95.0625 45.2979 95.8218 46.584 96.5776 46.0195 cv
98.4536 44.6187 100.932 44.5063 102.91 43.2915 cv
103.263 43.0747 103.018 42.6021 102.644 42.6597 cv
102.644 42.6597 li
cp
f
111.624 51.9063 mo
110.485 50.8208 108.394 54.2344 107.613 54.8125 cv
107.317 55.0322 107.214 55.2871 107.271 55.6519 cv
107.303 55.8584 107.453 55.9839 107.613 56.0972 cv
107.813 56.2378 108.163 56.2349 108.363 56.0972 cv
109.165 55.542 109.729 54.7109 110.33 53.9585 cv
110.628 53.5864 110.92 53.2139 111.222 52.8457 cv
111.326 52.7178 111.439 52.6006 111.538 52.4692 cv
111.58 52.415 111.747 52.0269 111.661 52.1992 cv
111.709 52.103 111.705 51.9849 111.624 51.9063 cv
111.624 51.9063 li
cp
f
114.49 53.7085 mo
114.017 53.644 113.778 53.9199 113.517 54.2729 cv
113.258 54.6235 113.009 55.2383 113.032 55.6772 cv
113.061 56.2241 113.82 56.6948 114.233 56.1743 cv
114.523 55.8091 114.569 55.4351 114.667 54.9946 cv
114.74 54.6733 114.851 54.2642 114.731 53.9497 cv
114.692 53.8462 114.612 53.7251 114.49 53.7085 cv
114.49 53.7085 li
cp
f
143.892 23.2471 mo
144.814 22.6768 145.766 22.1582 146.711 21.6284 cv
147.69 21.0796 148.967 20.8203 149.795 20.0791 cv
150.311 19.6172 149.88 18.8174 149.262 18.792 cv
148.101 18.7446 146.884 19.7231 145.966 20.3535 cv
144.988 21.0259 144.183 21.8882 143.475 22.8296 cv
143.285 23.0806 143.646 23.3989 143.892 23.2471 cv
143.892 23.2471 li
cp
f
146.895 38.5962 mo
148.64 39.7002 150.677 40.1294 152.506 41.062 cv
152.789 41.2065 153.092 41.1733 153.328 40.9565 cv
153.432 40.8604 153.482 40.7983 153.502 40.6572 cv
153.542 40.373 153.487 40.0298 153.191 39.8911 cv
151.267 38.9912 149.211 38.4443 147.135 38.0288 cv
146.792 37.959 146.589 38.4033 146.895 38.5962 cv
146.895 38.5962 li
cp
f
139.222 51.8057 mo
139.603 52.2085 139.985 52.6079 140.374 53.0054 cv
140.813 53.4531 141.205 54.0142 141.746 54.3408 cv
142.465 54.7759 143.155 53.9404 142.826 53.2612 cv
142.551 52.6943 141.954 52.2759 141.459 51.9111 cv
140.906 51.5024 140.343 51.2056 139.692 50.9971 cv
139.214 50.8442 138.903 51.4668 139.222 51.8057 cv
139.222 51.8057 li
cp
f
358.812 58.2949 mo
359.123 53.6973 358.516 50.7451 364.152 49.9663 cv
367.193 49.5464 373.46 50.481 373.636 47.0996 cv
374 40.0991 373.912 28.9043 371.529 28.624 cv
357.215 26.939 305.027 26.0303 305.191 29.7114 cv
305.576 38.3804 305.866 46.916 309.12 47.5845 cv
310.746 47.9189 324.935 47.1011 325.109 50.0508 cv
325.582 58.1069 324.525 66.1797 324.233 74.2441 cv
323.98 81.2466 323.726 88.249 323.472 95.2515 cv
323.428 96.4702 323.532 97.9556 324.621 98.5073 cv
324.953 98.6763 325.333 98.7231 325.705 98.7681 cv
334.064 99.7715 342.439 100.643 350.827 101.38 cv
351.99 101.483 353.193 101.579 354.298 101.204 cv
355.404 100.829 356.394 99.854 356.405 98.686 cv
358.812 58.2949 li
cp
1 1 1 rgb
f
284.416 98.9453 mo
286.262 93.5068 290.429 88.9165 291.34 83.2451 cv
291.697 81.021 291.837 78.8105 291.517 76.5811 cv
291.044 73.2832 289.817 70.1484 288.598 67.0483 cv
287.319 63.7964 286.041 60.5454 284.762 57.2939 cv
284.036 55.4478 283.297 53.4561 283.759 51.5269 cv
284.221 49.5977 286.457 47.9868 288.205 48.9243 cv
288.131 46.834 288.325 44.3936 288.25 42.3032 cv
288.215 41.2988 288.188 40.2549 288.589 39.3335 cv
288.992 38.4121 289.957 37.6543 290.946 37.834 cv
291.708 37.9722 292.271 38.6006 292.74 39.2163 cv
298.504 46.8184 298.417 57.1704 300.82 66.4038 cv
301.005 67.1191 301.24 67.8809 301.829 68.3276 cv
302.416 68.7744 303.458 68.667 303.684 67.9644 cv
305.042 63.7705 310.657 62.4067 315.046 62.8081 cv
319.437 63.2095 323.554 65.8931 325.695 69.7471 cv
326.248 70.7422 326.371 72.4263 325.247 72.6074 cv
324.772 72.6831 324.324 72.4004 323.918 72.1421 cv
322.212 71.0537 320.373 70.1738 318.454 69.5298 cv
316.966 69.0313 315.374 68.6719 313.835 68.9819 cv
312.297 69.2905 310.837 70.4146 310.55 71.9565 cv
310.201 73.8325 311.623 75.5918 313.202 76.6646 cv
315.375 78.1426 318.032 78.896 320.658 78.7808 cv
321.917 78.7251 323.191 78.478 324.424 78.7358 cv
325.658 78.9937 326.876 79.9619 326.876 81.2212 cv
326.876 81.9243 326.5 82.5757 326.052 83.1172 cv
324.823 84.604 322.937 85.5269 321.008 85.5835 cv
319.34 85.6338 317.5 85.1118 316.112 86.0366 cv
315.488 86.4521 315.068 87.1035 314.666 87.7358 cv
309.928 95.1704 305.191 102.606 300.454 110.041 cv
297.653 109.704 295.063 108.429 292.537 107.174 cv
290.517 106.17 288.498 105.167 286.477 104.163 cv
285.292 103.574 284.035 102.918 283.398 101.756 cv
282.762 100.595 283.13 99.2686 284.416 98.9453 cv
cp
1 .733333 .552941 rgb
f
282.453 107.741 mo
280.057 112.247 277.385 116.985 275.764 121.837 cv
274.306 126.193 273.073 130.632 271.029 134.814 cv
269.414 138.12 270.265 139.318 273.727 141.104 cv
276.134 142.347 280.897 145.14 283.489 145.158 cv
284.44 145.164 285.438 144.861 286.064 144.145 cv
287.602 142.384 287.74 139.003 288.565 136.864 cv
289.666 134.007 291.162 131.321 292.324 128.491 cv
294.03 124.339 295.736 120.188 297.44 116.036 cv
297.834 115.077 298.221 113.947 297.7 113.051 cv
297.111 112.037 295.737 111.915 294.595 111.644 cv
290.139 110.587 286.775 105.709 282.226 106.237 cv
282.224 106.928 282.777 107.131 282.453 107.741 cv
cp
.572549 .733333 .839216 rgb
f
429.898 108.629 mo
429.917 108.427 429.938 108.238 429.96 108.07 cv
430.158 106.628 430.291 105.178 430.358 103.725 cv
430.412 102.532 431.185 99.2388 429.986 98.4038 cv
429.694 98.2002 429.322 98.1597 428.966 98.1304 cv
425.55 97.8501 416.907 98.9468 415.802 97.5073 cv
414.867 96.2871 414.397 93.3604 414.254 90.8125 cv
414.137 88.7285 412.553 83.1621 414.305 83.0146 cv
417.614 82.7354 424.461 82.1348 427.771 81.8618 cv
428.134 81.8315 428.528 81.7886 428.797 81.541 cv
429.111 81.251 429.152 80.7778 429.17 80.3516 cv
429.39 75.3682 429.319 70.3721 428.958 65.3965 cv
428.935 65.0747 428.908 64.7446 428.766 64.4551 cv
428.356 63.6235 427.241 63.5 426.314 63.4976 cv
421.917 63.4878 417.522 63.7148 413.152 64.1768 cv
412.71 64.2241 412.254 64.2715 411.833 64.1357 cv
411.411 64 411.079 64.0347 411.027 63.5942 cv
410.617 60.042 410.229 56.4863 409.842 52.9312 cv
409.607 50.7754 409.545 49.6987 411.995 49.5928 cv
416.883 49.3794 421.758 48.8418 426.576 47.9839 cv
426.823 47.9395 427.087 47.8872 427.264 47.7095 cv
427.516 47.4556 427.503 47.0488 427.474 46.6919 cv
427.208 43.4727 427.318 40.3081 426.867 37.04 cv
426.682 35.7046 426.465 34.373 426.344 33.0396 cv
426.267 32.1826 426.345 31.335 425.479 30.7798 cv
425.032 30.4941 424.47 30.4707 423.94 30.457 cv
416.286 30.2622 408.629 30.1821 400.972 30.2178 cv
397.145 30.2363 393.317 30.2837 389.489 30.3589 cv
387.895 30.3906 385.168 29.9199 383.699 30.5015 cv
381.875 31.2241 382.317 34.5283 382.393 36.0254 cv
382.542 38.9302 382.698 41.8345 382.862 44.7388 cv
383.12 49.2759 384.268 82.9707 384.357 89.6118 cv
384.403 92.9795 384.839 99.2441 384.846 102.611 cv
384.849 104.091 384.928 105.617 384.801 107.078 cv
384.683 108.432 384.654 109.56 385.835 110.531 cv
386.103 110.751 386.409 110.937 386.749 111.005 cv
391.29 111.92 428.014 113.883 429.168 112.096 cv
429.692 111.288 429.79 109.748 429.898 108.629 cv
cp
1 .639216 .113725 rgb
f
438.38 69.0146 mo
441.892 69.6216 455.021 71.3838 453.52 64.9551 cv
452.797 61.8574 454.076 58.311 454.651 55.2378 cv
455.322 51.6455 455.968 48.0454 456.387 44.4141 cv
457.208 37.3042 457.591 30.144 457.531 22.9873 cv
457.508 20.2144 457.419 17.4326 457.045 14.6816 cv
456.87 13.3813 457.042 9.84131 454.955 9.93945 cv
453.565 10.0039 452.175 14.3169 451.621 11.5205 cv
451.284 9.82275 451.607 8.04688 451.517 6.33398 cv
451.489 5.76025 451.435 5.13184 451.032 4.72363 cv
450.504 4.18945 449.57 4.28662 448.972 4.73975 cv
448.375 5.19336 448.039 5.9043 447.748 6.5957 cv
443.631 16.3813 444.191 27.4072 442.593 37.9019 cv
442.486 38.604 442.203 39.4702 441.497 39.5381 cv
441.075 39.5786 440.694 39.292 440.409 38.981 cv
439.242 37.7119 438.917 35.9102 438.291 34.3042 cv
437.471 32.2061 436.091 30.3833 434.727 28.5903 cv
433.7 27.2383 432.636 25.853 431.181 24.9756 cv
428.267 23.2178 424.583 23.8398 421.181 23.7378 cv
419.968 23.7012 418.783 24.5527 418.429 25.7134 cv
417.983 27.1846 418.168 28.9111 419.435 29.7837 cv
421.447 31.1709 424.366 29.7207 426.584 30.7437 cv
427.507 31.1685 428.194 31.9775 428.78 32.8081 cv
432.044 37.4297 433.057 43.2935 433.096 48.9517 cv
433.104 50.1353 433.028 51.438 432.214 52.2983 cv
431.374 53.1875 430.021 53.3135 428.796 53.333 cv
427.991 53.3457 427.167 53.334 426.408 53.061 cv
424.989 52.5498 424.051 51.2334 422.908 50.251 cv
421.763 49.2686 419.958 48.6313 418.811 49.6108 cv
418.266 50.0752 418.016 50.8062 417.95 51.519 cv
417.691 54.3169 419.947 56.7944 422.485 57.999 cv
425.024 59.2041 427.884 59.5176 430.56 60.3784 cv
431.828 60.7866 433.09 61.3418 434.027 62.2905 cv
434.964 63.2393 435.521 64.6499 435.165 65.9346 cv
434.951 66.708 435.443 67.8242 436.108 68.2734 cv
436.774 68.7222 437.588 68.8784 438.38 69.0146 cv
cp
1 .733333 .552941 rgb
f
453.877 70.3545 mo
452.724 70.0229 451.395 70.6274 450.237 70.6577 cv
448.221 70.7095 446.207 70.6738 444.192 70.6719 cv
442.333 70.6694 437.115 69.8662 436.525 72.0254 cv
436.199 73.2148 436.364 73.9619 436.616 75.0815 cv
436.929 76.4731 436.857 77.9702 436.892 79.3945 cv
437.004 84.0161 437.196 87.1426 436.991 94.3027 cv
436.847 99.2817 437.116 103.26 437.151 108.241 cv
437.154 108.606 437.175 109.014 437.442 109.264 cv
437.65 109.459 437.953 109.502 438.236 109.535 cv
442.77 110.071 447.312 110.53 451.861 110.913 cv
452.121 110.935 452.395 110.954 452.626 110.837 cv
452.939 110.681 453.091 110.328 453.211 110 cv
454.885 105.44 455.215 100.509 455.388 95.6548 cv
455.497 92.6318 455.55 89.6074 455.605 86.583 cv
455.677 82.5254 455.752 78.458 455.417 74.4092 cv
455.299 72.9897 455.579 70.895 453.937 70.373 cv
453.917 70.3667 453.896 70.3608 453.877 70.3545 cv
cp
.572549 .733333 .839216 rgb
f
456.18 72.2173 mo
456.406 70.3857 456.085 68.79 455.947 67.0049 cv
455.838 65.6157 455.45 64.7173 453.868 64.7808 cv
449.9 64.9399 445.948 65.3618 441.982 65.5649 cv
439.955 65.6694 437.932 65.6982 435.904 65.6484 cv
434.515 65.6138 433.461 65.9497 433.26 67.5034 cv
433.154 68.3311 433.334 69.165 433.515 69.9785 cv
433.546 70.1196 433.579 70.2598 433.609 70.4014 cv
433.839 71.4395 434.073 72.4858 434.506 73.457 cv
434.631 73.7358 434.776 74.0137 434.999 74.2236 cv
435.565 74.7588 436.448 74.7153 437.223 74.6382 cv
442.522 74.1099 447.627 75.2603 452.939 74.8735 cv
453.931 74.8018 455.041 74.6484 455.644 73.8589 cv
455.999 73.3965 456.109 72.7959 456.18 72.2173 cv
cp
.658824 .819608 .898039 rgb
f
341.456 154.831 mo
340.803 157.236 334.426 155.205 332.792 154.9 cv
330.573 154.486 330.933 153.842 331.51 151.997 cv
331.881 150.813 332.249 149.628 332.618 148.445 cv
333.252 146.414 333.883 144.375 334.719 142.417 cv
335.258 141.157 336.398 137.807 337.69 139.645 cv
338.463 140.746 338.919 143.379 339.341 144.751 cv
339.941 146.696 340.375 148.612 340.562 150.622 cv
340.671 151.794 341.749 153.75 341.456 154.831 cv
cp
366.107 190.968 mo
365.438 186.137 364.153 181.302 363.93 176.461 cv
363.276 162.23 359.075 148.518 355.715 134.689 cv
355.049 131.947 354.793 129.456 353.794 126.742 cv
352.86 124.2 351.692 117.621 347.252 115.045 cv
345.768 114.184 341.234 113.544 339.496 113.5 cv
335.986 113.408 331.781 113.429 328.788 115.54 cv
326.302 117.292 324.952 121.112 324.211 123.927 cv
323.303 127.382 322.315 130.557 320.902 133.862 cv
317.291 142.303 314.179 150.958 311.59 159.766 cv
308.413 170.58 304.321 180.437 303.222 191.655 cv
303.057 193.342 313.773 193.597 314.907 193.605 cv
316.636 193.619 318.858 193.859 320.032 192.296 cv
321.024 190.977 321.294 189.167 321.792 187.612 cv
322.545 185.263 324.085 175.901 324.988 174.092 cv
325.297 173.468 325.889 172.89 326.57 172.731 cv
330.546 171.8 334.63 172.215 338.614 172.866 cv
341.408 173.322 346.883 172.946 347.699 176.401 cv
348.413 179.426 348.775 182.527 348.987 185.625 cv
349.101 187.283 348.525 190.46 349.915 191.751 cv
351.115 192.866 354.491 192.61 356.028 192.664 cv
358.019 192.734 360.021 192.633 362 192.869 cv
363.052 192.996 364.158 193.213 365.149 192.831 cv
366.139 192.449 366.254 192.021 366.107 190.968 cv
cp
.929412 .0823529 .133333 rgb
f
319.117 217.471 mo
319.136 217.402 319.156 217.321 319.174 217.224 cv
319.291 216.587 318.46 215.11 318.248 214.479 cv
317.589 212.526 316.929 210.572 316.269 208.619 cv
315.906 207.543 315.538 206.435 315.595 205.3 cv
315.738 202.455 318.389 200.459 319.663 197.911 cv
320.753 195.726 321.746 192.207 319.728 190.83 cv
317.892 189.579 315.253 191.848 314.111 193.752 cv
313.742 194.367 313.477 195.054 313 195.588 cv
312.181 196.502 310.848 196.813 309.63 196.669 cv
308.413 196.526 307.281 195.989 306.188 195.432 cv
303.731 194.17 301.211 192.603 300.065 190.09 cv
299.079 187.927 299.286 185.387 299.994 183.117 cv
300.443 181.681 301.147 180.228 302.416 179.418 cv
303.972 178.422 305.993 178.618 307.756 178.065 cv
307.991 177.991 308.23 177.899 308.405 177.725 cv
308.792 177.342 308.744 176.702 308.575 176.184 cv
307.338 172.391 301.033 172.079 298.167 174.09 cv
294.889 176.391 292.408 178.668 292.523 185.353 cv
292.586 189.016 293.446 190.451 292.115 191.325 cv
291.284 191.871 290.679 190.001 290.327 189.071 cv
287.381 181.324 286.604 172.89 283.709 165.124 cv
282.939 163.059 282.024 161.052 281.109 159.047 cv
280.207 157.071 279.122 154.916 277.097 154.13 cv
276.333 153.834 275.365 153.809 274.798 154.4 cv
274.197 155.027 274.31 156.028 274.462 156.884 cv
274.916 159.418 275.369 161.952 275.821 164.486 cv
274.849 165.15 273.46 164.725 272.413 165.263 cv
271.183 165.894 270.931 167.536 271.027 168.916 cv
271.347 173.458 273.298 178.42 274.554 182.795 cv
275.947 187.655 277.486 192.474 279.166 197.243 cv
280.1 199.896 280.758 202.352 282.288 204.714 cv
283.678 206.861 285.267 208.868 287.064 210.691 cv
290.719 214.4 295.158 217.344 300.021 219.215 cv
303.545 220.569 307.337 220.312 311.034 220.539 cv
313.841 220.711 316.358 220.496 318.32 218.303 cv
318.768 217.802 318.977 217.933 319.117 217.471 cv
cp
1 .733333 .552941 rgb
f
304.769 241.3 mo
304.217 241.029 303.731 240.513 303.192 239.646 cv
302.102 237.893 301.471 235.896 300.521 234.071 cv
299.288 231.708 298.077 229.334 296.888 226.949 cv
296.497 226.163 296.464 225.393 297.149 224.842 cv
297.832 224.29 298.74 224.12 299.611 224.009 cv
304.848 223.341 310.323 224.126 315.317 222.414 cv
315.929 222.203 316.583 221.954 317.207 222.131 cv
317.87 222.32 318.305 222.94 318.666 223.527 cv
321.073 227.438 322.679 231.837 323.359 236.378 cv
323.39 236.596 323.419 236.827 323.329 237.027 cv
323.219 237.269 322.963 237.406 322.722 237.52 cv
318.281 239.624 312.543 240.265 307.749 241.297 cv
306.425 241.582 305.535 241.678 304.769 241.3 cv
cp
.572549 .733333 .839216 rgb
f
427.271 186.299 mo
426.901 184.268 425.146 171.733 422.933 171.958 cv
420.894 172.162 419.336 177.494 418.476 179.008 cv
416.609 182.283 414.611 185.484 412.486 188.598 cv
412.122 189.133 411.596 189.733 410.962 189.607 cv
410.587 189.531 410.315 189.218 410.074 188.921 cv
406.295 184.256 402.998 179.201 400.253 173.861 cv
399.92 173.214 399.562 172.526 398.888 172.211 cv
398.259 171.917 397.64 172.248 397.53 172.933 cv
396.468 179.518 396.722 184.153 395.62 190.8 cv
395.424 191.968 395.441 194.164 395.268 196.007 cv
395.137 197.39 393.969 198.446 392.582 198.409 cv
388.889 198.311 384.289 197.949 381.285 197.736 cv
380.651 197.691 380.037 197.519 379.478 197.217 cv
378.863 196.886 378.346 196.549 378.44 195.846 cv
378.558 195.763 378.565 196.075 378.421 196.051 cv
378.279 196.026 378.233 195.846 378.22 195.701 cv
377.337 186.094 377.025 176.436 377.284 166.792 cv
377.65 153.145 379.957 138.87 381.403 125.294 cv
381.742 122.113 388.334 121.381 391.025 123.115 cv
392.654 124.166 397.705 137.72 399.965 142.417 cv
401.972 146.588 405.728 153.519 408.571 157.143 cv
411.154 160.438 418.542 141.292 427.008 128.056 cv
428.635 125.514 430.972 124.569 433.721 124.745 cv
435.834 124.881 437.143 126.062 437.925 127.958 cv
438.671 129.758 439.343 131.774 439.959 133.611 cv
440.923 136.488 440.967 139.984 441.44 142.984 cv
442.689 150.911 443.289 158.796 444.457 166.75 cv
444.683 168.265 444.447 169.56 444.483 171.055 cv
444.536 173.203 445.109 175.453 445.461 177.569 cv
446.438 183.435 447.84 189.078 448.041 195.012 cv
448.053 195.377 448.046 195.787 447.783 196.039 cv
447.641 196.175 447.447 196.237 447.259 196.292 cv
442.557 197.656 430.693 198.057 429.953 197.548 cv
429.379 197.154 428.793 194.581 428.651 193.874 cv
428.145 191.359 427.73 188.822 427.271 186.299 cv
cp
.290196 .466667 .388235 rgb
f
389.126 224.352 mo
389.298 223.916 389.331 223.38 389.177 222.718 cv
388.736 220.811 388.01 218.971 387.032 217.276 cv
386.322 216.045 385.447 214.614 386.009 213.309 cv
386.507 212.152 387.88 211.722 389.016 211.178 cv
393.224 209.166 395.395 203.701 393.716 199.349 cv
393.514 198.827 393.183 198.258 392.629 198.175 cv
392.321 198.127 392.013 198.248 391.732 198.386 cv
390.17 199.151 388.926 200.542 388.34 202.181 cv
387.95 203.273 387.819 204.506 387.083 205.402 cv
386.27 206.393 384.878 206.734 383.601 206.647 cv
381.054 206.472 378.684 204.703 377.792 202.311 cv
376.9 199.917 377.533 197.03 379.344 195.229 cv
379.921 194.654 380.671 194.017 380.532 193.214 cv
380.38 192.336 379.268 192.014 378.379 192.087 cv
376.498 192.241 374.893 193.44 373.59 194.807 cv
370.586 197.957 371.612 201.737 371.941 202.874 cv
372.468 204.698 372.996 206.521 373.523 208.346 cv
372.598 208.729 371.646 208.275 370.836 207.686 cv
370.028 207.095 369.437 206.261 368.827 205.467 cv
366.051 201.854 362.584 198.776 358.668 196.45 cv
356.845 195.366 354.863 194.427 352.745 194.312 cv
351.612 194.251 350.165 194.745 350.141 195.881 cv
350.121 196.921 351.382 197.688 351.276 198.724 cv
350.002 198.148 348.731 197.574 347.459 196.999 cv
345.746 196.225 343.945 195.433 342.069 195.554 cv
340.193 195.674 338.253 197.04 338.177 198.919 cv
338.109 200.611 339.484 201.982 340.803 203.046 cv
343.654 205.342 346.776 207.327 350.171 208.696 cv
351.685 209.306 353.248 209.792 354.738 210.46 cv
356.624 211.307 358.367 212.435 360.102 213.56 cv
363.744 215.92 367.455 218.341 370.157 221.739 cv
371.762 223.758 373.167 226.234 375.618 227.041 cv
377.432 227.64 378.947 227.241 380.657 226.695 cv
382.693 226.047 388.151 226.801 389.126 224.352 cv
cp
1 .733333 .552941 rgb
f
471.275 171.585 mo
472.836 168.756 472.795 164.436 473.029 161.699 cv
473.478 156.435 473.256 151.101 472.018 145.951 cv
470.783 140.815 470.344 135.764 470.413 130.468 cv
470.424 129.553 470.451 128.62 470.178 127.747 cv
469.906 126.874 469.272 126.055 468.385 125.828 cv
467.5 125.601 466.415 126.177 466.322 127.086 cv
465.191 126.519 464.659 121.233 463.995 120.157 cv
463.33 119.082 461.558 118.604 460.835 119.643 cv
460.533 120.078 460.504 120.641 460.493 121.17 cv
460.423 124.732 460.733 128.302 461.416 131.799 cv
461.837 133.971 462.405 136.23 461.805 138.36 cv
461.471 138.493 461.127 138.392 461.31 138.083 cv
460.765 134.922 460.22 131.761 459.675 128.6 cv
459.181 125.733 458.64 122.754 456.927 120.402 cv
456.539 119.868 456.019 119.337 455.359 119.303 cv
454.628 119.266 453.996 119.884 453.766 120.578 cv
453.537 121.272 453.618 122.025 453.698 122.751 cv
454.564 130.535 455.188 138.344 455.567 146.167 cv
455.607 146.991 455.237 148.169 454.443 147.943 cv
454.389 147.642 454.714 147.987 454.662 147.686 cv
453.803 146.76 452.946 145.833 452.088 144.908 cv
451.015 143.748 449.932 142.58 448.646 141.662 cv
446.417 140.073 443.682 139.32 440.957 139.066 cv
439.514 138.931 437.601 139.295 437.418 140.732 cv
437.371 141.101 437.46 141.473 437.573 141.827 cv
438.539 144.857 442.22 145.72 444.28 148.144 cv
445.876 150.023 449.025 154.721 450.111 156.936 cv
451.144 159.044 451.971 164.428 449.839 163.892 cv
446.044 162.938 439.849 163.374 436.952 166 cv
436.159 166.719 435.425 167.674 435.512 168.741 cv
435.762 171.777 441.245 171.612 443.323 171.618 cv
447.074 171.628 450.198 174.942 453.167 177.034 cv
453.363 177.173 453.774 177.173 453.701 176.943 cv
457.349 178.145 460.606 176.921 464.211 175.591 cv
465.812 175.001 467.723 174.576 469.21 173.747 cv
470.106 173.248 470.773 172.493 471.275 171.585 cv
cp
f
477.793 228.199 mo
478.167 226.785 478.004 225.022 478.012 223.167 cv
478.033 218.987 478.051 214.808 478.071 210.628 cv
478.094 205.517 478.117 200.379 477.327 195.33 cv
476.462 189.813 474.648 184.496 472.839 179.213 cv
472.757 178.972 472.661 178.713 472.448 178.574 cv
472.234 178.435 471.957 178.453 471.702 178.477 cv
467.083 178.905 462.467 179.375 457.857 179.889 cv
457.178 179.702 457.075 180.643 457.032 181.347 cv
456.866 184.092 458.221 186.878 458.536 189.577 cv
458.959 193.219 459.517 196.813 459.728 200.48 cv
459.995 205.125 459.958 209.787 459.616 214.427 cv
459.47 216.406 459.612 218.488 459.203 220.423 cv
458.74 222.609 457.712 224.632 457.091 226.771 cv
456.981 227.149 456.884 227.555 457 227.93 cv
457.708 230.243 462.393 230.946 464.359 231.276 cv
467.5 231.805 470.817 231.748 473.957 231.219 cv
476.4 230.807 477.398 229.699 477.793 228.199 cv
cp
.572549 .733333 .839216 rgb
f
301.823 112.773 mo
301.651 111.848 302.461 110.991 302.435 110.05 cv
302.413 109.337 301.9 108.715 301.288 108.349 cv
300.674 107.981 299.966 107.819 299.279 107.628 cv
297.085 107.014 294.991 106.042 293.106 104.763 cv
291.417 103.617 289.894 102.227 288.133 101.197 cv
286.417 100.194 284.491 99.5498 282.516 99.3203 cv
281.019 101.287 279.585 103.598 279.028 106.006 cv
278.947 106.362 278.876 106.739 278.989 107.086 cv
279.135 107.533 279.549 107.828 279.938 108.091 cv
284.821 111.398 289.749 114.731 295.213 116.945 cv
296.706 117.55 298.529 118.031 299.824 117.075 cv
301.219 116.044 300.77 114.153 301.823 112.773 cv
cp
.658824 .819608 .898039 rgb
f
317.75 212.901 mo
317.01 212.528 316.071 212.472 314.884 212.867 cv
307.462 215.345 299.544 216.327 291.744 215.737 cv
291.147 215.692 290.679 215.852 290.462 216.408 cv
290.245 216.966 290.316 217.589 290.403 218.18 cv
290.766 220.642 291.338 223.072 292.115 225.438 cv
292.358 226.18 292.64 226.945 293.209 227.479 cv
294.266 228.474 295.916 228.359 297.356 228.182 cv
304.02 227.36 310.683 226.538 317.347 225.715 cv
318.99 225.513 319.883 225.219 320.097 223.648 cv
320.465 220.939 320.708 214.396 317.75 212.901 cv
cp
f
372.493 233.406 mo
372.113 231.747 371.808 230.071 371.578 228.384 cv
371.204 225.636 375.299 225.924 376.971 225.887 cv
381.005 225.797 385.147 224.949 389.166 224.431 cv
389.513 224.386 389.882 224.345 390.198 224.497 cv
390.733 224.755 390.88 225.433 390.965 226.02 cv
391.207 227.701 391.449 229.396 391.341 231.09 cv
391.325 231.348 391.294 231.622 391.13 231.821 cv
390.903 232.096 390.503 232.139 390.147 232.153 cv
387.558 232.26 384.958 232.025 382.375 232.246 cv
379.065 232.528 375.812 233.555 372.493 233.406 cv
cp
f
471.456 169.644 mo
468.772 169.581 464.936 171.87 463.012 172.455 cv
459.537 173.512 456.027 174.453 452.49 175.277 cv
451.869 176.15 451.869 177.278 452.26 178.274 cv
452.66 179.29 453.059 180.306 453.458 181.323 cv
453.606 181.697 453.777 182.1 454.126 182.297 cv
454.477 182.493 454.911 182.432 455.306 182.363 cv
461.635 181.273 467.965 180.185 474.294 179.095 cv
474.546 179.052 474.809 179.005 475.019 178.856 cv
475.487 178.528 475.516 177.854 475.472 177.282 cv
475.315 175.219 474.818 173.182 474.008 171.279 cv
473.513 170.115 472.586 169.671 471.456 169.644 cv
cp
f
289.051 39.1768 mo
289.029 39.2866 288.8 39.5044 289 39.3267 cv
288.753 39.5454 288.619 39.8765 288.518 40.1782 cv
288.235 41.0366 288.271 41.9199 288.966 42.5845 cv
289.926 43.502 291.597 43.1436 291.962 41.8149 cv
292.201 40.9463 291.917 40.1772 291.269 39.5869 cv
291.083 39.4165 290.906 39.2319 290.673 39.1221 cv
290.255 38.9331 290.236 38.9326 290.617 39.1191 cv
290.369 38.9521 290.33 38.9116 290.499 38.9971 cv
290.22 38.3765 289.188 38.5366 289.051 39.1768 cv
289.051 39.1768 li
cp
1 .654902 .423529 rgb
f
284.735 50.5874 mo
285.036 50.4414 285.011 50.4443 284.662 50.5977 cv
284.474 50.7061 284.28 50.8994 284.17 51.084 cv
283.997 51.374 283.973 51.7275 283.941 52.0542 cv
283.873 52.7036 284.103 53.5605 284.629 53.9785 cv
285.192 54.4238 285.865 54.6221 286.534 54.2368 cv
287.343 53.769 287.444 52.8789 287.111 52.0894 cv
286.957 51.7246 286.622 51.4668 286.367 51.1733 cv
286.662 51.5132 286.099 50.7861 286.154 50.8413 cv
285.969 50.6538 285.752 50.5474 285.506 50.4668 cv
285.645 50.5488 285.785 50.6309 285.923 50.7134 cv
285.934 50.7266 285.943 50.7393 285.952 50.7524 cv
285.682 50.3037 285.116 50.2583 284.735 50.5874 cv
284.735 50.5874 li
cp
f
325.387 70.9771 mo
325.386 71.0293 325.386 71.0825 325.385 71.1357 cv
325.385 71.1743 325.445 71.1748 325.446 71.1357 cv
325.446 71.083 325.446 71.0303 325.447 70.9771 cv
325.447 70.939 325.387 70.9385 325.387 70.9771 cv
325.387 70.9771 li
cp
f
323.784 69.2559 mo
323.424 70.104 323.812 71.4644 324.709 71.8516 cv
325.183 72.0562 325.643 72.1343 326.117 71.8608 cv
326.667 71.543 326.917 70.8999 326.768 70.29 cv
326.587 69.5488 325.94 69.0186 325.323 68.6421 cv
324.69 68.2559 324.04 68.6533 323.784 69.2559 cv
323.784 69.2559 li
cp
f
324.087 84.6221 mo
324.543 84.647 324.958 84.5288 325.381 84.3828 cv
325.863 84.2178 326.131 83.9937 326.535 83.6846 cv
326.902 83.4023 327.074 82.9868 327.235 82.5728 cv
327.758 81.2354 326.225 79.8496 324.939 80.2471 cv
324.498 80.3843 324.234 80.5396 323.879 80.8281 cv
323.718 80.9575 323.757 80.9277 323.997 80.7407 cv
323.832 80.8633 323.668 80.9883 323.507 81.1162 cv
323.197 81.3608 322.844 81.8149 322.694 82.1553 cv
322.449 82.707 322.365 83.2529 322.683 83.8042 cv
322.981 84.3213 323.504 84.5908 324.087 84.6221 cv
324.087 84.6221 li
cp
f
418.542 50.4619 mo
417.384 51.6772 417.829 54.4023 419.299 55.1865 cv
420.269 55.7021 421.88 55.106 421.74 53.8066 cv
421.641 52.8818 421.221 52.1558 420.662 51.4307 cv
420.731 51.5259 420.708 51.4956 420.595 51.3398 cv
420.464 51.1592 420.336 50.978 420.185 50.813 cv
419.933 50.5386 419.697 50.3975 419.356 50.2515 cv
419.097 50.1416 418.725 50.2681 418.542 50.4619 cv
418.542 50.4619 li
cp
f
420.482 27.6807 mo
420.498 27.6699 420.513 27.6587 420.529 27.6484 cv
420.374 27.7246 420.209 27.7617 420.037 27.7607 cv
420.184 27.7466 420.33 27.7275 420.476 27.7026 cv
420.918 27.522 420.956 27.5049 420.588 27.6504 cv
420.716 27.5986 420.992 27.5957 420.412 27.6543 cv
420.696 27.625 420.843 27.6025 421.083 27.5273 cv
421.16 27.5034 421.24 27.4873 421.32 27.4717 cv
421.535 27.4272 422.292 27.0957 421.637 27.3599 cv
422.313 27.0884 422.659 26.7231 422.906 26.0347 cv
423.079 25.5547 422.881 24.9883 422.544 24.6348 cv
421.641 23.6816 420.217 23.9429 419.294 24.7168 cv
418.977 24.9819 418.737 25.4492 418.642 25.8457 cv
418.488 26.5117 418.733 27.0034 419.127 27.4971 cv
419.416 27.8579 420.109 27.9482 420.482 27.6807 cv
420.482 27.6807 li
cp
f
449.683 4.96338 mo
448.96 5.14551 448.544 5.9248 448.384 6.5957 cv
448.158 7.5542 448.333 8.38867 448.993 9.11914 cv
449.375 9.5415 450.024 9.68945 450.563 9.54492 cv
451.301 9.34668 451.695 8.71875 451.76 7.99414 cv
451.859 6.88477 451.189 4.58496 449.683 4.96338 cv
449.683 4.96338 li
cp
f
454.72 11.5796 mo
454.227 12.4282 453.744 13.7178 454.408 14.6128 cv
455.09 15.5356 456.202 15.543 456.898 14.6289 cv
457.572 13.7432 457.107 12.4478 456.624 11.5923 cv
456.218 10.874 455.135 10.8672 454.72 11.5796 cv
454.72 11.5796 li
cp
f
439.001 141.69 mo
440.279 142.338 441.939 142.941 443.192 141.938 cv
443.638 141.58 443.708 140.922 443.606 140.406 cv
443.362 139.179 442.091 138.817 441.009 138.785 cv
440.114 138.76 439.41 139.096 438.754 139.673 cv
438.158 140.199 438.286 141.327 439.001 141.69 cv
439.001 141.69 li
cp
f
436.568 169.928 mo
437.334 171.095 438.942 171.516 440.272 171.405 cv
441.423 171.311 442.397 170.532 442.405 169.299 cv
442.414 168.066 441.449 167.276 440.299 167.165 cv
438.969 167.038 437.358 167.438 436.578 168.594 cv
436.328 168.963 436.325 169.557 436.568 169.928 cv
436.568 169.928 li
cp
f
454.767 120.335 mo
454.567 120.946 454.693 121.548 454.789 122.165 cv
454.876 122.729 454.939 123.402 455.273 123.998 cv
455.94 125.19 457.893 124.997 458.224 123.631 cv
458.406 122.886 458.297 122.224 458.076 121.503 cv
457.879 120.868 457.667 120.169 457.144 119.725 cv
456.324 119.027 455.118 119.265 454.767 120.335 cv
454.767 120.335 li
cp
f
461.469 119.768 mo
461.466 119.811 461.463 119.854 461.46 119.898 cv
461.55 119.686 461.64 119.472 461.729 119.26 cv
461.212 119.696 461.358 120.492 461.456 121.068 cv
461.43 120.84 461.444 120.94 461.496 121.368 cv
461.52 121.522 461.568 121.657 461.614 121.806 cv
461.738 122.202 461.863 122.576 462.193 122.852 cv
462.847 123.398 463.983 123.463 464.427 122.579 cv
464.874 121.691 464.632 120.672 463.99 119.938 cv
463.561 119.448 462.853 118.768 462.13 119.03 cv
462.363 119.062 462.595 119.094 462.828 119.125 cv
462.787 119.106 462.747 119.087 462.708 119.067 cv
462.138 118.788 461.508 119.119 461.469 119.768 cv
461.469 119.768 li
cp
f
468.848 126.972 mo
468.382 127.257 468.267 127.628 468.065 128.031 cv
467.779 128.599 467.737 129.266 467.915 129.872 cv
468.271 131.088 469.86 131.278 470.536 130.232 cv
470.954 129.585 471.015 128.825 470.776 128.105 cv
470.641 127.698 470.482 127.235 470.073 127.023 cv
469.684 126.822 469.25 126.727 468.848 126.972 cv
468.848 126.972 li
cp
f
273.322 171.506 mo
273.881 171.066 273.993 170.36 274.246 169.731 cv
274.569 168.923 274.518 167.702 274.218 166.909 cv
273.933 166.155 273.361 165.593 272.506 165.588 cv
271.574 165.582 270.663 166.389 270.71 167.361 cv
270.755 168.282 271.066 168.998 271.414 169.833 cv
271.649 170.399 271.946 171.116 272.435 171.501 cv
272.728 171.731 273.026 171.739 273.322 171.506 cv
273.322 171.506 li
cp
f
276.98 159.469 mo
277 159.332 277.193 159.102 277.258 158.953 cv
277.394 158.641 277.543 158.356 277.64 158.023 cv
277.825 157.392 277.696 156.612 277.489 155.998 cv
277.206 155.159 276.393 154.609 275.497 154.85 cv
274.468 155.125 274.003 156.314 274.509 157.231 cv
274.591 157.4 274.61 157.425 274.568 157.308 cv
274.608 157.422 274.645 157.537 274.678 157.653 cv
274.787 158.017 274.943 158.334 275.126 158.664 cv
275.358 159.079 275.852 159.481 276.005 159.726 cv
276.303 160.203 276.911 159.963 276.98 159.469 cv
276.98 159.469 li
cp
f
303.891 175.021 mo
304.041 175.07 304.188 175.126 304.335 175.187 cv
304.16 175.009 303.985 174.833 303.81 174.656 cv
304.013 175.305 304.595 175.532 305.167 175.781 cv
305.901 176.1 306.711 176.5 307.515 176.175 cv
308.22 175.891 308.912 174.973 308.33 174.21 cv
307.715 173.401 306.894 173.109 305.884 173.205 cv
305.205 173.268 304.213 173.351 303.89 174.074 cv
304.042 173.959 304.193 173.844 304.344 173.729 cv
304.197 173.777 304.047 173.824 303.898 173.871 cv
303.318 174.05 303.334 174.825 303.891 175.021 cv
303.891 175.021 li
cp
f
319.936 196.625 mo
320.821 195.932 321.394 194.656 321.696 193.578 cv
321.986 192.541 321.369 191.431 320.332 191.139 cv
319.326 190.854 318.146 191.455 317.892 192.502 cv
317.643 193.531 317.752 194.777 317.751 195.704 cv
317.749 196.917 319.095 197.283 319.936 196.625 cv
319.936 196.625 li
cp
f
344.501 201.167 mo
345.171 200.416 344.944 199.686 344.754 198.822 cv
344.521 197.758 343.506 196.744 342.488 196.424 cv
340.754 195.879 339.064 197.959 340.074 199.522 cv
340.327 199.915 340.542 200.118 340.908 200.402 cv
340.317 199.944 341.001 200.502 341.226 200.625 cv
341.602 200.833 341.972 201.058 342.398 201.148 cv
342.784 201.23 342.058 200.94 342.424 201.129 cv
342.625 201.232 342.768 201.325 343 201.407 cv
343.477 201.573 344.132 201.582 344.501 201.167 cv
344.501 201.167 li
cp
f
355 198.014 mo
355.457 197.631 355.573 197.037 355.585 196.476 cv
355.559 196.655 355.534 196.838 355.508 197.019 cv
355.696 196.272 355.556 195.648 355.205 194.984 cv
354.748 194.122 353.872 193.532 352.877 193.559 cv
352.022 193.58 351.237 193.99 350.792 194.737 cv
350.206 195.723 350.448 196.817 351.15 197.654 cv
351.662 198.265 352.351 198.379 353.094 198.463 cv
352.883 198.434 352.674 198.404 352.464 198.375 cv
352.551 198.39 352.635 198.407 352.72 198.43 cv
353.196 198.556 353.592 198.563 354.07 198.438 cv
353.887 198.461 353.708 198.485 353.525 198.508 cv
354.096 198.54 354.566 198.379 355 198.014 cv
355 198.014 li
cp
f
376.949 194.472 mo
377.031 194.381 377.116 194.302 377.211 194.226 cv
376.927 194.343 376.643 194.458 376.358 194.574 cv
375.685 194.355 375.615 194.351 376.147 194.563 cv
376.405 194.634 376.665 194.636 376.924 194.567 cv
377.072 194.516 377.215 194.454 377.355 194.383 cv
376.979 194.569 377.208 194.448 377.325 194.416 cv
377.5 194.381 377.442 194.386 377.146 194.428 cv
377.33 194.427 377.51 194.4 377.684 194.347 cv
378.058 194.242 378.378 194.061 378.655 193.788 cv
379.56 192.898 379.102 191.436 377.952 191.057 cv
377.165 190.797 376.317 191.128 375.781 191.724 cv
375.593 191.932 375.419 192.16 375.287 192.409 cv
375.098 192.762 375.027 193.142 375.132 193.534 cv
375.106 193.436 375.467 194.361 375.203 193.682 cv
375.204 193.469 375.205 193.255 375.207 193.042 cv
375.145 193.254 375.12 193.47 375.094 193.689 cv
374.987 194.635 376.344 195.141 376.949 194.472 cv
376.949 194.472 li
cp
f
394.101 202.35 mo
394.337 202.013 393.894 202.562 394.148 202.304 cv
394.338 202.11 394.474 201.891 394.584 201.649 cv
394.702 201.394 394.816 201.141 394.968 200.904 cv
395.721 199.739 395.003 198.13 393.716 197.767 cv
392.479 197.417 390.881 198.401 391.006 199.803 cv
391.08 200.635 391.247 201.36 391.581 202.125 cv
391.511 201.864 391.444 201.605 391.375 201.347 cv
391.381 201.429 391.383 201.511 391.38 201.594 cv
391.377 202.244 391.819 202.833 392.446 203.01 cv
393.114 203.199 393.721 202.892 394.101 202.35 cv
394.101 202.35 li
cp
f
32.0815 142.19 mo
34.2085 142.19 li
35.2798 142.19 36.0771 141.944 36.5996 141.451 cv
37.1221 140.958 37.3828 140.323 37.3828 139.546 cv
37.3828 138.698 37.1035 138.042 36.5459 137.579 cv
35.9878 137.116 35.1904 136.884 34.1548 136.884 cv
32.0815 136.884 li
32.0815 142.19 li
cp
32.0815 135.859 mo
33.7173 135.859 li
34.6313 135.859 35.2998 135.629 35.7227 135.171 cv
36.145 134.712 36.3564 134.146 36.3564 133.47 cv
36.3564 132.609 36.0762 132.049 35.5142 131.787 cv
34.9521 131.526 34.3599 131.395 33.7349 131.395 cv
32.0815 131.395 li
32.0815 135.859 li
cp
30.8311 130.369 mo
33.4751 130.369 li
34.1084 130.369 34.7188 130.424 35.3057 130.535 cv
35.8931 130.645 36.4292 130.926 36.9146 131.377 cv
37.3999 131.828 37.6431 132.508 37.6431 133.416 cv
37.6431 133.883 37.5537 134.304 37.376 134.682 cv
37.1982 135.06 36.9648 135.377 36.6748 135.632 cv
36.3853 135.888 36.0654 136.084 35.7158 136.222 cv
35.7158 136.262 li
36.2388 136.294 36.7241 136.441 37.1724 136.701 cv
37.6201 136.96 37.9819 137.335 38.2568 137.823 cv
38.5317 138.312 38.6694 138.886 38.6694 139.546 cv
38.6694 140.452 38.4546 141.178 38.0259 141.725 cv
37.5972 142.271 37.0483 142.656 36.3794 142.881 cv
35.71 143.104 34.9868 143.217 34.2104 143.217 cv
30.8311 143.217 li
30.8311 130.369 li
cp
1 1 1 rgb
f
41.8994 130.369 mo
43.1499 130.369 li
43.1499 138.61 li
43.1499 139.5 43.2998 140.243 43.5996 140.837 cv
43.8994 141.432 44.3013 141.867 44.8042 142.144 cv
45.3071 142.42 45.8618 142.558 46.4678 142.558 cv
47.0557 142.558 47.6001 142.423 48.1006 142.152 cv
48.6006 141.882 49.0044 141.451 49.3115 140.857 cv
49.6191 140.264 49.7725 139.515 49.7725 138.61 cv
49.7725 130.369 li
51.0234 130.369 li
51.0234 138.426 li
51.0234 140.437 50.5513 141.799 49.6074 142.513 cv
48.6631 143.228 47.6177 143.584 46.4702 143.584 cv
45.7827 143.584 45.1011 143.456 44.4243 143.201 cv
43.748 142.946 43.1577 142.434 42.6543 141.667 cv
42.1509 140.898 41.8994 139.818 41.8994 138.426 cv
41.8994 130.369 li
cp
f
61.4858 131.946 mo
60.4912 132.533 li
60.228 131.915 59.8696 131.51 59.4155 131.317 cv
58.9614 131.124 58.5493 131.027 58.1787 131.027 cv
57.4141 131.027 56.8398 131.225 56.458 131.619 cv
56.0757 132.014 55.8843 132.472 55.8843 132.995 cv
55.8843 133.464 56.0239 133.864 56.3032 134.196 cv
56.5825 134.528 56.8921 134.788 57.231 134.976 cv
57.5698 135.164 58.0952 135.421 58.8062 135.746 cv
59.5171 136.081 60.0986 136.396 60.5518 136.689 cv
61.0044 136.984 61.3823 137.373 61.6875 137.857 cv
61.9927 138.341 62.1445 138.94 62.1445 139.654 cv
62.1445 140.32 61.9834 140.955 61.6602 141.556 cv
61.3379 142.159 60.8613 142.647 60.2324 143.021 cv
59.603 143.397 58.8628 143.584 58.0107 143.584 cv
56.8511 143.584 55.9453 143.283 55.2935 142.681 cv
54.6421 142.079 54.1646 141.42 53.8633 140.703 cv
55.0391 140.116 li
55.251 140.743 55.6099 141.307 56.1147 141.807 cv
56.6201 142.308 57.2896 142.558 58.123 142.558 cv
58.6196 142.558 59.0728 142.444 59.4819 142.215 cv
59.8916 141.987 60.2178 141.658 60.4595 141.229 cv
60.7021 140.801 60.8228 140.301 60.8228 139.73 cv
60.8228 139.345 60.7637 139.013 60.646 138.733 cv
60.5269 138.454 60.3535 138.206 60.1235 137.99 cv
59.8931 137.773 59.6104 137.569 59.2754 137.378 cv
58.9409 137.187 58.4951 136.96 57.939 136.701 cv
56.8452 136.185 56.0146 135.656 55.4478 135.117 cv
54.8818 134.578 54.5986 133.883 54.5986 133.031 cv
54.5986 132.613 54.6924 132.175 54.8809 131.718 cv
55.0688 131.261 55.4253 130.861 55.9502 130.517 cv
56.4746 130.173 57.1992 130.001 58.1226 130.001 cv
59.7666 130.001 60.8877 130.65 61.4858 131.946 cv
cp
f
65.4468 143.217 mo
65.4468 130.369 li
66.6968 130.369 li
66.6968 143.217 li
65.4468 143.217 li
cp
f
70.8408 143.217 mo
70.8408 129.854 li
80.5879 140.591 li
80.5879 130.369 li
81.8379 130.369 li
81.8379 143.732 li
72.0908 132.995 li
72.0908 143.217 li
70.8408 143.217 li
cp
f
85.9819 143.217 mo
85.9819 130.369 li
92.8657 130.369 li
92.8657 131.395 li
87.2324 131.395 li
87.2324 135.509 li
92.6641 135.509 li
92.6641 136.535 li
87.2324 136.535 li
87.2324 142.19 li
92.8657 142.19 li
92.8657 143.217 li
85.9819 143.217 li
cp
f
102.948 131.946 mo
101.953 132.533 li
101.69 131.915 101.331 131.51 100.877 131.317 cv
100.423 131.124 100.011 131.027 99.6401 131.027 cv
98.876 131.027 98.3022 131.225 97.9199 131.619 cv
97.5371 132.014 97.3462 132.472 97.3462 132.995 cv
97.3462 133.464 97.4858 133.864 97.7651 134.196 cv
98.0444 134.528 98.354 134.788 98.6929 134.976 cv
99.0317 135.164 99.5566 135.421 100.268 135.746 cv
100.979 136.081 101.561 136.396 102.013 136.689 cv
102.466 136.984 102.844 137.373 103.15 137.857 cv
103.454 138.341 103.606 138.94 103.606 139.654 cv
103.606 140.32 103.445 140.955 103.123 141.556 cv
102.799 142.159 102.323 142.647 101.694 143.021 cv
101.065 143.397 100.324 143.584 99.4727 143.584 cv
98.3125 143.584 97.4067 143.283 96.7554 142.681 cv
96.1035 142.079 95.627 141.42 95.3252 140.703 cv
96.5005 140.116 li
96.7129 140.743 97.0713 141.307 97.5762 141.807 cv
98.082 142.308 98.751 142.558 99.5854 142.558 cv
100.081 142.558 100.535 142.444 100.944 142.215 cv
101.354 141.987 101.679 141.658 101.921 141.229 cv
102.164 140.801 102.285 140.301 102.285 139.73 cv
102.285 139.345 102.225 139.013 102.107 138.733 cv
101.989 138.454 101.815 138.206 101.585 137.99 cv
101.355 137.773 101.072 137.569 100.737 137.378 cv
100.402 137.187 99.957 136.96 99.4009 136.701 cv
98.3066 136.185 97.4761 135.656 96.9097 135.117 cv
96.3433 134.578 96.0601 133.883 96.0601 133.031 cv
96.0601 132.613 96.1538 132.175 96.3423 131.718 cv
96.5303 131.261 96.8872 130.861 97.4121 130.517 cv
97.9365 130.173 98.6611 130.001 99.5845 130.001 cv
101.229 130.001 102.35 130.65 102.948 131.946 cv
cp
f
113.428 131.946 mo
112.433 132.533 li
112.17 131.915 111.812 131.51 111.358 131.317 cv
110.903 131.124 110.491 131.027 110.121 131.027 cv
109.356 131.027 108.782 131.225 108.4 131.619 cv
108.018 132.014 107.827 132.472 107.827 132.995 cv
107.827 133.464 107.966 133.864 108.246 134.196 cv
108.525 134.528 108.834 134.788 109.173 134.976 cv
109.512 135.164 110.037 135.421 110.748 135.746 cv
111.459 136.081 112.042 136.396 112.494 136.689 cv
112.947 136.984 113.325 137.373 113.63 137.857 cv
113.935 138.341 114.087 138.94 114.087 139.654 cv
114.087 140.32 113.925 140.955 113.603 141.556 cv
113.28 142.159 112.804 142.647 112.174 143.021 cv
111.545 143.397 110.805 143.584 109.953 143.584 cv
108.793 143.584 107.888 143.283 107.236 142.681 cv
106.584 142.079 106.107 141.42 105.805 140.703 cv
106.981 140.116 li
107.193 140.743 107.552 141.307 108.057 141.807 cv
108.562 142.308 109.232 142.558 110.065 142.558 cv
110.562 142.558 111.015 142.444 111.425 142.215 cv
111.833 141.987 112.16 141.658 112.402 141.229 cv
112.644 140.801 112.765 140.301 112.765 139.73 cv
112.765 139.345 112.706 139.013 112.588 138.733 cv
112.47 138.454 112.295 138.206 112.065 137.99 cv
111.835 137.773 111.553 137.569 111.217 137.378 cv
110.883 137.187 110.437 136.96 109.881 136.701 cv
108.787 136.185 107.957 135.656 107.39 135.117 cv
106.824 134.578 106.541 133.883 106.541 133.031 cv
106.541 132.613 106.634 132.175 106.823 131.718 cv
107.011 131.261 107.367 130.861 107.893 130.517 cv
108.417 130.173 109.141 130.001 110.065 130.001 cv
111.709 130.001 112.83 130.65 113.428 131.946 cv
cp
f
125.852 143.217 mo
125.852 130.369 li
127.102 130.369 li
127.102 143.217 li
125.852 143.217 li
cp
f
131.247 143.217 mo
131.247 129.854 li
140.994 140.591 li
140.994 130.369 li
142.243 130.369 li
142.243 143.732 li
132.497 132.995 li
132.497 143.217 li
131.247 143.217 li
cp
f
148.409 143.217 mo
148.409 131.395 li
144.977 131.395 li
144.977 130.369 li
153.087 130.369 li
153.087 131.395 li
149.659 131.395 li
149.659 143.217 li
148.409 143.217 li
cp
f
155.824 143.217 mo
155.824 130.369 li
162.708 130.369 li
162.708 131.395 li
157.075 131.395 li
157.075 135.509 li
162.506 135.509 li
162.506 136.535 li
157.075 136.535 li
157.075 142.19 li
162.708 142.19 li
162.708 143.217 li
155.824 143.217 li
cp
f
166.27 143.217 mo
166.27 129.854 li
176.017 140.591 li
176.017 130.369 li
177.267 130.369 li
177.267 143.732 li
167.52 132.995 li
167.52 143.217 li
166.27 143.217 li
cp
f
187.931 131.946 mo
186.936 132.533 li
186.673 131.915 186.314 131.51 185.86 131.317 cv
185.406 131.124 184.994 131.027 184.624 131.027 cv
183.859 131.027 183.285 131.225 182.903 131.619 cv
182.521 132.014 182.329 132.472 182.329 132.995 cv
182.329 133.464 182.469 133.864 182.749 134.196 cv
183.027 134.528 183.337 134.788 183.676 134.976 cv
184.015 135.164 184.54 135.421 185.251 135.746 cv
185.962 136.081 186.544 136.396 186.997 136.689 cv
187.449 136.984 187.828 137.373 188.132 137.857 cv
188.438 138.341 188.59 138.94 188.59 139.654 cv
188.59 140.32 188.428 140.955 188.105 141.556 cv
187.783 142.159 187.306 142.647 186.677 143.021 cv
186.048 143.397 185.308 143.584 184.456 143.584 cv
183.296 143.584 182.39 143.283 181.738 142.681 cv
181.087 142.079 180.61 141.42 180.309 140.703 cv
181.484 140.116 li
181.696 140.743 182.055 141.307 182.56 141.807 cv
183.065 142.308 183.734 142.558 184.568 142.558 cv
185.064 142.558 185.518 142.444 185.927 142.215 cv
186.337 141.987 186.663 141.658 186.904 141.229 cv
187.147 140.801 187.268 140.301 187.268 139.73 cv
187.268 139.345 187.208 139.013 187.091 138.733 cv
186.972 138.454 186.798 138.206 186.568 137.99 cv
186.338 137.773 186.055 137.569 185.721 137.378 cv
185.386 137.187 184.94 136.96 184.384 136.701 cv
183.29 136.185 182.459 135.656 181.893 135.117 cv
181.327 134.578 181.043 133.883 181.043 133.031 cv
181.043 132.613 181.137 132.175 181.326 131.718 cv
181.514 131.261 181.87 130.861 182.395 130.517 cv
182.92 130.173 183.644 130.001 184.568 130.001 cv
186.211 130.001 187.333 130.65 187.931 131.946 cv
cp
f
191.892 143.217 mo
191.892 130.369 li
193.142 130.369 li
193.142 143.217 li
191.892 143.217 li
cp
f
200.884 143.732 mo
195.875 130.369 li
197.232 130.369 li
200.884 140.519 li
204.537 130.369 li
205.895 130.369 li
200.884 143.732 li
cp
f
208.631 143.217 mo
208.631 130.369 li
215.515 130.369 li
215.515 131.395 li
209.881 131.395 li
209.881 135.509 li
215.313 135.509 li
215.313 136.535 li
209.881 136.535 li
209.881 142.19 li
215.515 142.19 li
215.515 143.217 li
208.631 143.217 li
cp
f
31.1953 154.304 mo
31.5093 154.304 li
44.6924 154.304 li
44.6924 159.576 li
37.6611 159.576 li
37.6611 162.872 li
44.0327 162.872 li
44.0327 167.925 li
37.6611 167.925 li
37.6611 176.275 li
37.3472 176.275 li
31.1953 176.275 li
31.1953 154.304 li
cp
f
60.7305 171.582 mo
60.9609 171.55 61.1909 171.493 61.4214 171.41 cv
62.4258 171.137 63.3408 170.525 64.1675 169.573 cv
64.9941 168.621 65.4077 167.193 65.4077 165.289 cv
65.4077 163.385 64.9883 161.957 64.1519 161.004 cv
63.3149 160.052 62.4048 159.44 61.4214 159.168 cv
61.1909 159.105 60.9663 159.054 60.7466 159.011 cv
60.5264 158.97 60.312 158.949 60.103 158.949 cv
59.8726 158.949 59.6323 158.97 59.3813 159.011 cv
59.1299 159.054 58.8896 159.116 58.6587 159.2 cv
57.6963 159.493 56.812 160.115 56.0073 161.067 cv
55.2017 162.019 54.7988 163.427 54.7988 165.289 cv
54.7988 167.151 55.2017 168.558 56.0073 169.51 cv
56.812 170.462 57.6963 171.085 58.6587 171.378 cv
58.8896 171.462 59.1245 171.524 59.3652 171.566 cv
59.606 171.608 59.8408 171.629 60.0718 171.629 cv
60.2808 171.629 60.5005 171.613 60.7305 171.582 cv
cp
51.1572 173.418 mo
49.1484 171.096 48.1445 168.386 48.1445 165.289 cv
48.1445 162.213 49.1333 159.508 51.1104 157.175 cv
53.0884 154.842 56.0332 153.675 59.9463 153.675 cv
60.2603 153.675 li
64.1724 153.675 67.1182 154.842 69.0957 157.175 cv
71.0732 159.508 72.0615 162.213 72.0615 165.289 cv
72.0615 168.386 71.0732 171.085 69.0957 173.387 cv
67.1182 175.689 64.1724 176.85 60.2603 176.871 cv
59.9463 176.902 li
56.0957 176.902 53.1665 175.741 51.1572 173.418 cv
cp
f
84.2705 164.19 mo
85.3169 164.19 86.0488 163.95 86.4678 163.468 cv
86.8862 162.987 87.1162 162.464 87.1587 161.899 cv
87.1587 161.857 87.1587 161.815 87.1587 161.773 cv
87.1587 161.732 87.1587 161.69 87.1587 161.647 cv
87.1587 161.606 87.1587 161.559 87.1587 161.507 cv
87.1587 161.455 87.1587 161.396 87.1587 161.333 cv
87.0957 160.79 86.855 160.288 86.436 159.828 cv
86.0176 159.368 85.2959 159.137 84.2705 159.137 cv
83.0781 159.137 li
83.0781 164.19 li
84.2705 164.19 li
cp
76.6118 154.304 mo
76.9263 154.304 li
86.0283 154.304 li
86.2373 154.304 86.708 154.33 87.4409 154.381 cv
88.1729 154.435 88.9473 154.628 89.7637 154.962 cv
90.7256 155.36 91.6099 156.009 92.4155 156.909 cv
93.2212 157.809 93.624 159.137 93.624 160.895 cv
93.624 162.82 93.1689 164.279 92.2588 165.273 cv
91.3491 166.267 90.3496 166.974 89.2612 167.392 cv
89.2188 167.413 89.1772 167.429 89.1357 167.438 cv
89.0938 167.45 89.0522 167.466 89.0103 167.486 cv
95.1621 176.275 li
94.8486 176.275 li
87.4097 176.275 li
83.0781 169.526 li
83.0781 176.275 li
82.7642 176.275 li
76.6118 176.275 li
76.6118 154.304 li
cp
f
114.685 159.576 mo
109.851 159.576 li
109.851 154.304 li
110.165 154.304 li
125.984 154.304 li
125.984 159.576 li
121.15 159.576 li
121.15 176.275 li
120.836 176.275 li
114.685 176.275 li
114.685 159.576 li
cp
f
129.75 154.304 mo
130.064 154.304 li
143.248 154.304 li
143.248 159.576 li
136.216 159.576 li
136.216 162.652 li
142.588 162.652 li
142.588 167.486 li
136.216 167.486 li
136.216 171.001 li
143.248 171.001 li
143.248 176.275 li
142.934 176.275 li
129.75 176.275 li
129.75 154.304 li
cp
f
155.269 167.643 mo
159.976 167.643 li
157.622 159.89 li
155.269 167.643 li
cp
153.73 154.304 mo
154.044 154.304 li
161.514 154.304 li
169.298 176.275 li
168.984 176.275 li
162.393 176.275 li
161.2 172.477 li
154.044 172.477 li
152.82 176.275 li
152.506 176.275 li
145.915 176.275 li
153.73 154.304 li
cp
f
174.288 154.304 mo
174.602 154.304 li
180.754 154.304 li
184.458 167.172 li
188.162 154.304 li
188.476 154.304 li
194.627 154.304 li
197.829 176.275 li
197.515 176.275 li
191.614 176.275 li
190.076 164.285 li
186.592 176.275 li
186.278 176.275 li
182.323 176.275 li
178.839 164.285 li
177.301 176.275 li
176.987 176.275 li
171.086 176.275 li
174.288 154.304 li
cp
f
213.679 160.455 mo
213.366 160.455 li
213.26 160.372 213.156 160.282 213.051 160.188 cv
212.947 160.094 212.842 160.005 212.737 159.921 cv
212.214 159.524 211.691 159.194 211.168 158.933 cv
210.645 158.671 210.09 158.53 209.505 158.509 cv
208.94 158.53 208.51 158.646 208.218 158.854 cv
207.924 159.064 207.715 159.305 207.59 159.576 cv
207.506 159.723 207.454 159.87 207.433 160.016 cv
207.412 160.162 207.401 160.288 207.401 160.393 cv
207.401 160.853 207.558 161.213 207.872 161.476 cv
208.187 161.737 208.542 161.93 208.94 162.056 cv
209.128 162.119 209.316 162.171 209.505 162.213 cv
209.693 162.255 209.86 162.297 210.007 162.338 cv
210.383 162.422 210.817 162.532 211.31 162.668 cv
211.8 162.805 212.309 162.998 212.832 163.249 cv
213.836 163.709 214.757 164.426 215.594 165.398 cv
216.43 166.372 216.85 167.799 216.85 169.684 cv
216.85 172.215 216.017 174.046 214.354 175.176 cv
212.69 176.306 210.771 176.871 208.595 176.871 cv
208.281 176.902 li
207.694 176.88 207.14 176.829 206.617 176.745 cv
206.094 176.661 205.57 176.535 205.047 176.369 cv
204.273 176.118 203.483 175.752 202.678 175.27 cv
201.872 174.789 200.999 174.161 200.057 173.387 cv
202.976 168.71 li
203.29 168.71 li
203.395 168.815 203.499 168.914 203.604 169.008 cv
203.708 169.102 203.813 169.202 203.917 169.306 cv
204.503 169.808 205.158 170.279 205.879 170.719 cv
206.601 171.158 207.339 171.441 208.093 171.566 cv
208.175 171.587 208.259 171.603 208.344 171.613 cv
208.426 171.624 208.51 171.629 208.595 171.629 cv
209.18 171.608 209.609 171.493 209.881 171.284 cv
210.153 171.075 210.341 170.845 210.446 170.594 cv
210.509 170.447 210.551 170.3 210.571 170.153 cv
210.592 170.008 210.604 169.882 210.604 169.777 cv
210.604 168.961 210.32 168.386 209.756 168.051 cv
209.191 167.716 208.489 167.434 207.652 167.204 cv
207.611 167.183 207.558 167.167 207.496 167.156 cv
207.433 167.146 207.37 167.13 207.307 167.11 cv
206.973 167.026 206.612 166.921 206.225 166.795 cv
205.837 166.669 205.445 166.524 205.047 166.356 cv
204.085 165.917 203.196 165.242 202.379 164.332 cv
201.563 163.421 201.155 162.077 201.155 160.298 cv
201.155 158.436 201.82 156.866 203.149 155.59 cv
204.477 154.314 206.387 153.675 208.877 153.675 cv
209.191 153.675 li
209.776 153.675 210.676 153.785 211.89 154.005 cv
213.104 154.225 214.38 154.795 215.719 155.716 cv
215.74 155.737 215.766 155.758 215.798 155.778 cv
215.829 155.799 215.855 155.82 215.876 155.841 cv
213.679 160.455 li
cp
f
60.2046 204.198 mo
58.6313 204.198 li
63.6021 195.704 li
59.9404 195.704 li
59.4526 197.027 li
58.436 197.027 li
58.854 194.451 li
65.3848 194.451 li
65.2036 195.495 li
60.2046 204.198 li
cp
1 .639216 .113725 rgb
f
75.7119 197.932 mo
75.7119 197.932 75.2241 197.724 74.5278 197.724 cv
72.9268 197.724 71.7983 199.381 71.7983 201.623 cv
71.7983 202.625 72.1328 203.154 72.6621 203.154 cv
74.333 203.154 75.4888 199.395 75.4888 199.395 cv
75.7119 197.932 li
cp
74.7363 204.198 mo
75.3491 201.637 li
75.2798 201.803 74.0962 204.338 72.2446 204.338 cv
71.1582 204.338 70.4063 203.308 70.4063 201.901 cv
70.4063 198.53 72.4253 196.679 74.5278 196.679 cv
75.1685 196.679 75.6279 196.859 75.8643 196.985 cv
76.2544 194.591 li
75.0708 194.312 li
75.1963 193.545 li
77.772 193.477 li
76.2129 203.084 li
77.4106 203.294 li
77.2852 204.059 li
74.7363 204.198 li
cp
f
84.522 197.932 mo
84.522 197.932 83.9932 197.724 83.269 197.724 cv
81.9463 197.724 80.5117 198.907 80.5117 201.692 cv
80.5117 202.667 80.8735 203.154 81.3613 203.154 cv
83.0322 203.154 84.2437 199.395 84.2437 199.395 cv
84.522 197.932 li
cp
83.5054 204.198 mo
84.0625 201.637 li
83.979 201.803 82.7676 204.338 80.9434 204.338 cv
79.8989 204.338 79.1191 203.294 79.1191 201.901 cv
79.1191 198.489 81.1802 196.679 83.269 196.679 cv
84.1738 196.679 84.8286 197.097 84.8286 197.097 cv
85.2461 196.817 li
86.0122 196.817 li
85.0093 203.084 li
86.2212 203.294 li
86.0952 204.059 li
83.5054 204.198 li
cp
f
91.9541 203.738 mo
90.7715 206.523 90.186 207.54 88.71 207.54 cv
87.916 207.54 87.1367 207.317 87.1367 207.317 cv
87.415 206.427 li
87.415 206.427 87.9722 206.496 88.4595 206.496 cv
89.4346 206.496 89.8101 206.022 90.3672 204.741 cv
88.5566 197.918 li
87.5957 197.654 li
87.7495 196.888 li
89.8521 196.817 li
91.022 201.929 li
91.147 202.875 li
93.2075 197.904 li
92.1636 197.654 li
92.2886 196.888 li
95.3521 196.817 li
95.2129 197.654 li
94.4331 197.877 li
91.9541 203.738 li
cp
f
96.1563 201.971 mo
97.061 201.971 li
97.061 203.154 li
97.0752 203.154 97.4927 203.321 98.1191 203.321 cv
99.0244 203.321 99.6509 202.945 99.6509 202.18 cv
99.6509 200.856 96.5874 200.995 96.5874 198.907 cv
96.5874 197.375 97.8687 196.679 99.4004 196.679 cv
100.417 196.679 101.461 197.027 101.461 197.027 cv
101.127 198.907 li
100.222 198.907 li
100.139 197.821 li
100.139 197.821 99.832 197.696 99.2334 197.696 cv
98.4673 197.696 97.9106 198.001 97.9106 198.698 cv
97.9106 200.09 101.043 200.021 101.043 201.971 cv
101.043 203.433 99.79 204.338 97.9106 204.338 cv
96.7964 204.338 95.8218 203.989 95.8218 203.989 cv
96.1563 201.971 li
cp
f
112.611 199.395 mo
112.611 198.211 111.956 197.794 111.121 197.794 cv
109.492 197.794 108.67 199.603 108.67 201.623 cv
108.67 202.736 109.254 203.224 110.09 203.224 cv
111.706 203.224 112.611 201.623 112.611 199.395 cv
cp
109.839 204.338 mo
108.252 204.338 107.278 203.252 107.278 201.581 cv
107.278 198.656 108.962 196.679 111.372 196.679 cv
113.084 196.679 113.989 197.836 113.989 199.422 cv
113.989 202.457 112.235 204.338 109.839 204.338 cv
cp
f
120.307 194.451 mo
119.333 194.451 119.04 195.008 118.915 195.773 cv
118.734 196.888 li
120.697 196.888 li
120.517 197.932 li
118.567 197.932 li
117.523 204.477 li
117.244 206.218 116.464 207.54 114.668 207.54 cv
114.181 207.54 113.512 207.359 113.512 207.359 cv
113.749 206.469 li
114.738 206.469 li
115.573 206.469 115.991 205.8 116.158 204.756 cv
117.23 197.932 li
115.921 197.932 li
116.061 197.027 li
117.397 196.888 li
117.537 196.053 li
117.788 194.451 118.567 193.338 120.307 193.338 cv
121.282 193.338 122.256 193.615 122.256 193.615 cv
121.895 195.565 li
120.99 195.565 li
120.99 194.451 li
120.307 194.451 li
cp
f
129.452 203.697 mo
129.452 203.697 128.407 204.338 127.628 204.338 cv
126.681 204.338 126.221 203.781 126.221 202.682 cv
126.221 202.416 126.249 202.11 126.305 201.789 cv
126.918 197.932 li
125.539 197.932 li
125.692 197.027 li
127.084 196.888 li
127.363 195.134 li
128.742 194.854 li
128.407 196.888 li
130.329 196.888 li
130.162 197.932 li
128.24 197.932 li
127.642 201.65 li
127.585 202.013 127.558 202.304 127.558 202.527 cv
127.558 203.028 127.711 203.224 128.101 203.224 cv
128.491 203.224 129.229 202.945 129.229 202.945 cv
129.452 203.697 li
cp
f
135.882 197.932 mo
134.42 197.932 133.375 201.553 133.375 201.553 cv
132.93 204.198 li
131.607 204.198 li
132.624 197.932 li
131.44 197.654 li
131.565 196.888 li
134.127 196.817 li
133.584 199.241 li
133.654 199.06 134.559 196.679 136.509 196.679 cv
136.857 196.679 137.205 196.817 137.205 196.817 cv
136.787 198.907 li
135.882 198.907 li
135.882 197.932 li
cp
f
142.897 197.932 mo
142.897 197.932 142.369 197.724 141.645 197.724 cv
140.322 197.724 138.888 198.907 138.888 201.692 cv
138.888 202.667 139.25 203.154 139.737 203.154 cv
141.408 203.154 142.62 199.395 142.62 199.395 cv
142.897 197.932 li
cp
141.881 204.198 mo
142.438 201.637 li
142.355 201.803 141.143 204.338 139.319 204.338 cv
138.275 204.338 137.495 203.294 137.495 201.901 cv
137.495 198.489 139.556 196.679 141.645 196.679 cv
142.55 196.679 143.205 197.097 143.205 197.097 cv
143.622 196.817 li
144.388 196.817 li
143.385 203.084 li
144.597 203.294 li
144.471 204.059 li
141.881 204.198 li
cp
f
148.868 195.495 mo
148.422 195.495 148.102 195.244 148.102 194.8 cv
148.102 194.145 148.422 193.545 149.077 193.545 cv
149.522 193.545 149.843 193.796 149.843 194.242 cv
149.843 194.896 149.522 195.495 148.868 195.495 cv
cp
149.48 204.059 mo
146.918 204.198 li
147.921 197.932 li
146.738 197.654 li
146.876 196.888 li
149.425 196.817 li
148.422 203.084 li
149.606 203.294 li
149.48 204.059 li
cp
f
157.291 199.395 mo
157.318 199.186 157.346 198.977 157.346 198.781 cv
157.346 198.267 157.179 197.863 156.622 197.863 cv
154.812 197.863 153.642 201.692 153.642 201.692 cv
153.238 204.198 li
151.916 204.198 li
152.918 197.932 li
151.749 197.654 li
151.874 196.888 li
154.422 196.817 li
153.795 199.52 li
153.865 199.367 155.063 196.679 157.179 196.679 cv
158.307 196.679 158.725 197.375 158.725 198.392 cv
158.725 198.642 158.697 198.907 158.655 199.186 cv
158.015 203.084 li
159.198 203.294 li
159.073 204.059 li
156.511 204.198 li
157.291 199.395 li
cp
f
163.399 195.495 mo
162.953 195.495 162.633 195.244 162.633 194.8 cv
162.633 194.145 162.953 193.545 163.608 193.545 cv
164.054 193.545 164.374 193.796 164.374 194.242 cv
164.374 194.896 164.054 195.495 163.399 195.495 cv
cp
164.012 204.059 mo
161.45 204.198 li
162.452 197.932 li
161.269 197.654 li
161.408 196.888 li
163.956 196.817 li
162.953 203.084 li
164.137 203.294 li
164.012 204.059 li
cp
f
171.821 199.395 mo
171.849 199.186 171.877 198.977 171.877 198.781 cv
171.877 198.267 171.709 197.863 171.152 197.863 cv
169.342 197.863 168.173 201.692 168.173 201.692 cv
167.769 204.198 li
166.446 204.198 li
167.449 197.932 li
166.279 197.654 li
166.405 196.888 li
168.953 196.817 li
168.326 199.52 li
168.396 199.367 169.593 196.679 171.709 196.679 cv
172.838 196.679 173.255 197.375 173.255 198.392 cv
173.255 198.642 173.228 198.907 173.186 199.186 cv
172.545 203.084 li
173.729 203.294 li
173.604 204.059 li
171.042 204.198 li
171.821 199.395 li
cp
f
180.952 197.932 mo
180.952 197.932 180.451 197.724 179.698 197.724 cv
178.376 197.724 176.969 198.921 176.969 201.664 cv
176.969 202.682 177.332 203.154 177.819 203.154 cv
179.503 203.154 180.687 199.395 180.687 199.395 cv
180.952 197.932 li
cp
181.216 204.532 mo
180.896 206.51 179.741 207.61 177.93 207.61 cv
176.719 207.61 175.368 207.039 175.368 207.039 cv
175.702 206.037 li
175.702 206.037 176.914 206.469 177.791 206.469 cv
179.072 206.469 179.657 205.744 179.893 204.616 cv
180.52 201.637 li
180.437 201.803 179.225 204.338 177.373 204.338 cv
176.343 204.338 175.577 203.321 175.577 201.901 cv
175.577 198.489 177.624 196.679 179.698 196.679 cv
180.646 196.679 181.272 197.097 181.272 197.097 cv
181.689 196.817 li
182.456 196.817 li
181.216 204.532 li
cp
f
184.165 201.971 mo
185.07 201.971 li
185.07 203.154 li
185.084 203.154 185.501 203.321 186.128 203.321 cv
187.033 203.321 187.659 202.945 187.659 202.18 cv
187.659 200.856 184.596 200.995 184.596 198.907 cv
184.596 197.375 185.877 196.679 187.409 196.679 cv
188.425 196.679 189.47 197.027 189.47 197.027 cv
189.136 198.907 li
188.23 198.907 li
188.147 197.821 li
188.147 197.821 187.84 197.696 187.242 197.696 cv
186.476 197.696 185.919 198.001 185.919 198.698 cv
185.919 200.09 189.052 200.021 189.052 201.971 cv
189.052 203.433 187.799 204.338 185.919 204.338 cv
184.805 204.338 183.83 203.989 183.83 203.989 cv
184.165 201.971 li
cp
f
162.159 355.886 mo
.435059 355.886 li
.435059 261.775 li
162.159 261.775 li
162.159 355.886 li
cp
.819608 .490196 .00784314 rgb
f
77.5806 291.92 mo
77.667 291.92 77.7534 291.92 77.8403 291.92 cv
78.0952 291.92 78.2505 291.491 78.2935 291.24 cv
78.3359 290.989 78.2793 290.733 78.21 290.487 cv
77.939 289.533 77.4663 288.637 76.8335 287.874 cv
76.6714 287.678 76.4658 287.476 76.2114 287.48 cv
76.126 287.945 76.4399 288.378 76.689 288.779 cv
76.938 289.182 77.1265 289.731 76.8286 290.1 cv
76.6846 290.278 76.458 290.364 76.2656 290.49 cv
76.0737 290.617 75.8979 290.833 75.9531 291.055 cv
75.9941 291.221 76.1465 291.329 76.2881 291.424 cv
76.4209 291.514 76.5542 291.602 76.687 291.69 cv
76.8506 291.8 77.0195 291.91 77.2104 291.958 cv
77.4023 292.005 77.4424 292.061 77.5806 291.92 cv
cp
1 .733333 .552941 rgb
f
135.043 297.798 mo
135.121 297.791 134.979 296.768 134.976 296.659 cv
134.958 296.125 135.194 296.08 135.597 295.885 cv
136.12 295.632 136.562 295.262 136.845 294.745 cv
137.219 294.06 137.24 293.174 136.826 292.513 cv
136.479 291.96 135.864 291.607 135.222 291.485 cv
133.913 291.236 132.12 291.627 131.605 293.021 cv
131.295 293.861 131.684 294.818 132.241 295.454 cv
132.818 296.116 132.885 296.666 132.676 297.534 cv
132.638 297.693 132.653 297.781 132.801 297.853 cv
132.948 297.924 133.121 297.91 133.285 297.896 cv
133.88 297.839 134.447 297.854 135.043 297.798 cv
cp
f
142.654 308.284 mo
143.038 308.093 143.58 308.236 143.949 308.586 cv
144.195 308.819 144.363 309.122 144.526 309.419 cv
144.708 309.746 144.889 310.076 145.013 310.429 cv
145.086 310.639 145.135 310.888 145.009 311.072 cv
144.94 311.174 144.828 311.237 144.713 311.283 cv
144.067 311.536 143.249 311.193 142.977 310.556 cv
142.635 310.823 142.261 311.05 141.866 311.229 cv
141.816 311.251 141.762 311.273 141.708 311.261 cv
141.605 311.237 141.573 311.109 141.56 311.005 cv
141.546 310.893 141.533 310.78 141.549 310.669 cv
141.597 310.32 141.908 310.072 142.053 309.752 cv
142.168 309.494 142.171 309.203 142.221 308.926 cv
142.281 308.596 142.443 308.39 142.654 308.284 cv
cp
f
140.192 313.102 mo
140.059 312.521 139.917 311.94 139.774 311.362 cv
139.329 309.551 138.883 307.742 138.438 305.932 cv
138.215 305.026 137.993 304.121 137.77 303.217 cv
137.695 302.912 136.992 301.307 137.598 301.225 cv
137.655 301.218 137.713 301.229 137.77 301.242 cv
138.317 301.358 138.865 301.476 139.412 301.592 cv
140.001 301.718 140.405 301.968 140.65 302.533 cv
140.977 303.287 141.077 304.041 141.257 304.831 cv
141.382 305.383 141.575 305.841 141.622 306.418 cv
141.639 306.629 141.735 309.236 141.855 309.245 cv
142.715 309.311 143.438 308.93 144.22 308.564 cv
144.453 308.455 144.219 306.682 144.171 306.398 cv
143.995 305.354 143.706 304.313 143.441 303.288 cv
143.299 302.733 143.18 302.167 143.043 301.618 cv
142.925 301.143 142.613 300.784 142.365 300.362 cv
142.004 299.747 141.065 299.522 140.403 299.331 cv
139.486 299.068 138.563 298.944 137.63 298.77 cv
137.22 298.692 136.024 298.384 135.932 298.146 cv
135.87 297.983 135.917 297.803 135.958 297.635 cv
135.999 297.467 136.029 297.277 135.938 297.129 cv
135.858 296.999 135.698 296.934 135.545 296.928 cv
135.094 296.911 134.646 296.989 134.172 296.967 cv
133.642 296.941 133.111 296.949 132.58 296.942 cv
131.636 296.931 132.238 297.374 131.799 297.928 cv
131.26 298.609 130.106 298.013 129.411 298.327 cv
129.112 298.461 129.012 298.685 128.813 298.928 cv
128.196 299.683 127.557 300.362 127.016 301.186 cv
126.48 301.998 126.052 302.873 125.521 303.692 cv
125.321 304.002 125.112 304.307 124.903 304.61 cv
124.39 305.356 124.05 306.095 123.688 306.924 cv
123.56 307.216 122.304 310.306 122.462 310.381 cv
122.975 310.625 123.312 310.826 123.825 311.07 cv
123.913 311.111 124.01 311.154 124.103 311.129 cv
124.199 311.103 124.261 311.013 124.314 310.929 cv
125.181 309.582 126.047 308.234 126.913 306.888 cv
127.293 306.296 127.675 305.702 127.982 305.068 cv
128.23 304.557 128.429 304.021 128.676 303.508 cv
129.099 302.633 129.663 301.824 130.341 301.128 cv
130.436 301.03 130.571 300.928 130.691 300.989 cv
130.756 301.021 130.791 301.091 130.82 301.156 cv
131.571 302.826 131.537 304.729 131.488 306.558 cv
131.43 308.747 131.373 310.935 131.314 313.124 cv
131.986 313.921 132.886 314.429 133.927 314.46 cv
134.969 314.492 135.996 314.233 137.006 313.978 cv
138.141 313.689 139.058 313.391 140.192 313.102 cv
cp
.192157 .184314 .247059 rgb
f
97.4531 305.88 mo
97.1504 305.033 96.749 304.224 96.2593 303.47 cv
95.9814 303.043 95.6606 302.619 95.2119 302.378 cv
94.2842 301.878 93.02 302.254 92.1841 301.613 cv
92.0693 301.524 87.895 300.163 86.5742 299.335 cv
85.6802 298.774 84.7837 298.211 83.9614 297.55 cv
81.7847 295.799 80.2139 293.43 78.5376 291.196 cv
78.2266 290.781 77.6782 291.129 77.2705 291.251 cv
76.147 291.588 77.4863 292.986 77.7588 293.498 cv
79.0928 295.998 80.2803 297.214 81.7725 298.977 cv
83.4565 300.965 85.8545 302.172 88.0928 303.504 cv
88.3442 303.654 88.6128 303.827 88.707 304.104 cv
88.8096 304.405 88.6743 304.73 88.5464 305.023 cv
87.2134 308.076 86.5024 311.398 86.4697 314.729 cv
86.4668 315.021 86.4795 315.34 86.6699 315.561 cv
86.8569 315.776 87.1631 315.836 87.4453 315.882 cv
88.791 316.105 90.1367 316.327 91.4824 316.55 cv
91.6802 316.582 91.8896 316.613 92.0742 316.538 cv
92.2729 316.456 92.4028 316.267 92.5215 316.087 cv
92.9541 315.432 93.3862 314.776 93.8184 314.121 cv
95.4468 311.653 98.4473 308.663 97.4531 305.88 cv
cp
f
110.513 326.945 mo
109.949 321.534 109.898 316.069 110.361 310.648 cv
110.775 305.789 111.144 300.84 111.057 295.938 cv
111.032 294.534 110.875 293.063 110.98 291.664 cv
111.057 290.655 111.258 289.951 110.581 289.027 cv
110.183 289.409 109.786 289.79 109.388 290.17 cv
107.718 291.77 106.048 293.369 104.377 294.968 cv
103.325 295.977 102.271 296.986 101.314 298.086 cv
100.384 299.155 99.5503 300.305 98.6753 301.421 cv
94.9063 306.225 90.314 310.466 87.5039 315.886 cv
87.2554 316.365 87.3818 316.717 87.7002 317.152 cv
88.0181 317.589 88.5054 317.865 88.9775 318.128 cv
91.7471 319.669 94.5273 321.215 97.479 322.37 cv
100.44 323.53 103.542 324.283 106.574 325.244 cv
107.879 325.656 109.235 326.456 110.513 326.945 cv
cp
.772549 .87451 .937255 rgb
f
135.596 316.821 mo
135.596 316.184 135.596 315.547 135.596 314.91 cv
135.596 309.203 129.153 305.476 125.222 301.34 cv
123.443 299.47 121.666 297.6 119.888 295.729 cv
117.733 293.462 115.549 291.171 112.902 289.507 cv
112.237 289.089 111.495 288.701 110.712 288.757 cv
110.73 290.681 110.748 292.605 110.766 294.53 cv
110.779 295.967 110.792 297.406 110.624 298.831 cv
110.483 300.015 110.218 301.18 110.002 302.352 cv
109.632 304.368 109.408 306.41 109.187 308.448 cv
108.554 314.286 107.94 320.166 108.412 326.019 cv
108.478 326.835 108.712 327.834 109.506 328.035 cv
110.097 328.186 110.675 327.792 111.167 327.431 cv
114.471 324.995 118.104 323.046 121.763 321.187 cv
124.334 319.879 126.946 318.603 129.729 317.838 cv
131.625 317.316 133.649 317.098 135.596 316.821 cv
cp
.662745 .792157 .866667 rgb
f
125.776 316.434 mo
125.794 316.012 125.725 315.572 125.651 315.205 cv
125.364 313.776 125.334 312.313 124.991 310.884 cv
124.671 309.559 124.186 308.228 123.257 307.227 cv
122.33 306.227 120.879 305.621 119.568 306.001 cv
118.31 306.364 117.39 307.662 117.464 308.971 cv
117.485 309.339 117.575 309.698 117.65 310.059 cv
117.93 311.394 118.012 312.759 118.094 314.12 cv
118.208 316.005 118.322 317.889 118.435 319.773 cv
118.301 319.798 118.356 319.832 118.457 319.924 cv
118.558 320.017 118.709 320.02 118.845 320.013 cv
120.601 319.934 122.241 319.161 123.826 318.402 cv
124.208 318.22 124.59 318.035 124.973 317.854 cv
125.557 317.573 125.75 317.021 125.776 316.434 cv
cp
.192157 .184314 .247059 rgb
f
111.214 332.309 mo
111.149 331.964 111.082 331.618 111.05 331.277 cv
110.947 330.174 110.933 329.062 110.926 327.953 cv
110.912 325.811 110.96 323.651 110.569 321.533 cv
110.526 321.303 110.468 321.057 110.295 320.898 cv
110.164 320.777 110.27 320.714 110.097 320.67 cv
108.48 320.241 106.522 320.086 104.88 319.771 cv
103.355 319.479 101.859 319.056 100.365 318.634 cv
95.3218 317.211 90.2793 315.788 85.2368 314.365 cv
83.7524 313.946 82.2681 313.527 80.8081 313.029 cv
78.1133 312.113 75.7173 311.17 73.1289 309.984 cv
72.7622 309.817 72.2852 309.942 72.0493 310.27 cv
71.7725 310.653 71.749 310.983 71.9858 311.392 cv
72.2222 311.802 72.6138 312.092 72.9751 312.396 cv
73.8428 313.126 74.583 313.994 75.2998 314.874 cv
79.3555 319.844 82.8398 325.315 87.4609 329.764 cv
87.7808 330.071 88.1084 330.377 88.4893 330.604 cv
89.0225 330.922 89.6372 331.073 90.2417 331.219 cv
97.127 332.861 104.138 333.977 111.193 334.552 cv
111.487 333.834 111.357 333.071 111.214 332.309 cv
cp
.843137 .94902 1 rgb
f
110.566 329.483 mo
110.592 329.709 110.971 334.597 111.193 334.552 cv
112.703 334.245 135.515 332.549 135.935 332.338 cv
136.231 332.189 136.852 331.629 137.352 331.004 cv
143.196 323.698 148.502 316.783 154.926 309.982 cv
155.203 309.689 155.485 309.393 155.714 309.063 cv
155.862 308.85 155.68 308.564 155.425 308.615 cv
147.358 310.212 li
145.744 310.531 144.13 310.851 142.528 311.229 cv
132.171 313.679 122.456 318.583 111.956 320.322 cv
111.304 320.43 110.694 320.492 110.012 320.584 cv
109.8 320.613 109.649 320.805 109.675 321.018 cv
109.675 321.018 110.327 327.368 110.566 329.483 cv
cp
.486275 .701961 .8 rgb
f
92.2803 302.477 mo
92.0171 302.338 91.9946 301.963 92.2188 301.768 cv
92.478 301.542 92.6396 301.157 92.7529 300.814 cv
92.8452 300.532 92.9385 300.248 93.0313 299.967 cv
92.3813 299.467 91.771 298.701 91.6802 297.886 cv
91.6475 297.593 91.7012 297.295 91.7866 297.013 cv
92.2163 295.598 93.5293 294.495 94.9966 294.315 cv
95.5718 294.245 96.2021 294.325 96.6338 294.711 cv
97.0342 295.069 97.4277 295.677 97.5122 296.207 cv
97.6138 296.848 97.3916 297.485 97.0703 298.048 cv
96.6831 298.728 95.874 299.11 95.5645 299.828 cv
95.4102 300.185 95.3989 300.585 95.3926 300.973 cv
95.3848 301.458 95.2534 301.961 95.3809 302.432 cv
95.5117 302.917 93.3452 303.042 92.2803 302.477 cv
cp
1 .733333 .552941 rgb
f
94.0117 294.707 mo
93.5195 294.572 91.4385 294.316 91.6035 294.666 cv
92.0947 295.707 92.1782 296.123 92.6299 296.594 cv
92.6802 296.646 94.582 294.862 94.0117 294.707 cv
cp
1 .654902 .423529 rgb
f
108.074 304.668 mo
108.338 304.414 108.63 304.145 108.996 304.104 cv
109.311 304.07 109.634 304.228 109.823 304.483 cv
110.013 304.738 110.072 305.078 110.009 305.389 cv
109.953 305.51 109.786 305.51 109.659 305.551 cv
109.322 305.658 109.227 306.096 109.273 306.445 cv
109.319 306.795 109.447 307.157 109.334 307.492 cv
109.167 307.991 108.541 308.186 108.018 308.118 cv
107.56 307.561 107.27 306.866 107.195 306.147 cv
107.172 305.938 107.17 305.72 107.261 305.531 cv
107.33 305.389 107.446 305.276 107.559 305.166 cv
107.731 305 107.902 304.835 108.074 304.668 cv
cp
1 .733333 .552941 rgb
f
119.153 300.347 mo
119.146 300.211 119.115 300.048 118.989 299.998 cv
118.874 299.952 118.737 300.028 118.624 299.979 cv
118.567 299.955 118.522 299.902 118.461 299.897 cv
118.417 299.895 118.375 299.92 118.336 299.943 cv
117.747 300.312 117.218 300.765 116.691 301.218 cv
116.605 301.292 116.512 301.383 116.523 301.495 cv
116.851 301.584 117.196 301.583 117.536 301.582 cv
117.951 301.58 118.365 301.578 118.78 301.577 cv
118.866 301.577 118.957 301.574 119.027 301.524 cv
119.125 301.455 119.144 301.319 119.151 301.198 cv
119.168 300.915 119.169 300.63 119.153 300.347 cv
cp
1 .654902 .423529 rgb
f
121.943 306.291 mo
121.971 307.007 119.688 307.33 119.36 306.704 cv
119.179 306.357 119.549 305.689 119.615 305.343 cv
119.728 304.755 119.681 304.3 119.25 303.919 cv
118.772 303.497 118.357 303.166 118.118 302.543 cv
117.794 301.701 117.847 300.371 118.112 299.511 cv
118.411 298.537 119.056 297.673 119.904 297.11 cv
120.848 296.483 122.515 296.637 123.269 297.542 cv
124.05 298.477 124.518 300.111 124.256 301.26 cv
124.026 302.269 123.47 302.93 122.6 303.479 cv
121.717 304.036 121.912 305.479 121.943 306.291 cv
cp
1 .733333 .552941 rgb
f
119.164 308.728 mo
119.361 307.829 119.248 306.425 118.38 306.729 cv
118.088 306.832 117.129 307.61 116.89 307.812 cv
115.069 309.336 113.346 310.977 111.733 312.72 cv
111.457 313.019 110.254 309.762 109.66 307.699 cv
109.439 306.932 107.43 307.719 107.503 308.012 cv
107.91 309.637 109.783 315.181 110.482 315.44 cv
110.801 315.559 111.132 315.68 111.473 315.668 cv
112.01 315.652 112.48 315.317 112.893 314.973 cv
113.716 314.286 114.407 313.489 115.22 312.802 cv
116.226 311.951 117.246 311.107 118.175 310.179 cv
118.618 309.73 119.039 309.295 119.164 308.728 cv
cp
.192157 .184314 .247059 rgb
f
136.434 334.995 mo
136.367 334.932 136.3 334.871 136.234 334.816 cv
135.603 334.294 134.961 333.783 134.38 333.204 cv
133.486 332.313 132.655 331.363 131.824 330.416 cv
124.298 321.824 116.774 313.233 109.249 304.643 cv
108.355 303.623 107.383 302.768 106.281 301.979 cv
106.026 302.037 105.762 302.101 105.558 302.264 cv
105.353 302.427 105.228 302.722 105.341 302.958 cv
105.364 302.932 105.388 302.905 105.411 302.88 cv
105.333 303.421 105.626 303.955 106.014 304.342 cv
108.465 306.788 110.864 309.287 113.208 311.836 cv
113.956 312.649 114.709 313.446 115.403 314.306 cv
117.507 316.909 132.923 334.299 134.876 336.333 cv
135.189 336.661 135.146 337.194 134.893 337.568 cv
134.639 337.943 134.235 338.184 133.858 338.435 cv
133.48 338.686 133.101 338.985 132.948 339.411 cv
132.795 339.839 132.903 340.325 133.133 340.718 cv
133.362 341.11 133.701 341.426 134.037 341.73 cv
136.788 344.229 138.196 345.939 141.299 347.987 cv
141.652 348.22 142.664 348.656 143.071 348.768 cv
144.572 349.173 146.128 347.818 146.384 347.174 cv
147.228 345.048 143.091 337.954 141.165 335.921 cv
140.616 335.342 139.83 335.232 139.039 335.39 cv
138.102 335.578 137.852 336.018 137.198 335.646 cv
136.931 335.496 136.678 335.226 136.434 334.995 cv
cp
1 .796078 .780392 rgb
f
78.0405 282.305 mo
77.5688 282.494 73.7007 284.941 73.3257 284.316 cv
72.9668 283.719 73.4463 282.332 73.7324 281.697 cv
73.8784 281.373 74.0376 281.008 73.9082 280.679 cv
73.8267 280.471 73.6436 280.322 73.4702 280.181 cv
72.5073 279.398 71.5957 278.554 70.7422 277.653 cv
70.5864 277.489 70.4204 277.285 70.4648 277.063 cv
70.5264 276.751 70.9268 276.668 71.2441 276.65 cv
72.4277 276.59 73.5498 277.014 74.6758 276.644 cv
75.0474 276.522 75.23 276.117 75.3857 275.758 cv
75.9131 274.546 76.9941 272.181 78.2646 271.624 cv
78.4751 271.936 78.6279 272.337 78.7915 272.688 cv
79.0981 273.347 79.3115 275.743 79.8794 276.017 cv
80.2617 276.199 81.334 275.858 81.7476 275.79 cv
82.2422 275.708 85.7031 274.865 84.9829 276.357 cv
84.6177 277.115 84.1094 277.657 83.5195 278.232 cv
83.0659 278.674 82.3535 279.212 82.4014 279.921 cv
82.4224 280.233 82.5977 280.511 82.7573 280.78 cv
83.1626 281.467 83.4663 282.187 83.75 282.929 cv
83.9697 283.504 84.2334 283.794 83.5752 283.961 cv
82.4233 284.252 80.7173 283.355 79.709 282.867 cv
79.1665 282.605 78.6841 282.047 78.0405 282.305 cv
cp
f
112.507 309.604 mo
112.717 308.842 112.61 307.631 112.161 306.98 cv
111.969 306.702 111.787 306 110.753 306.073 cv
110.316 306.104 110.229 306.53 110.229 306.717 cv
110.228 306.902 110.283 307.083 110.326 307.265 cv
110.428 307.688 110.468 308.123 110.577 308.544 cv
110.687 308.965 110.876 309.385 111.214 309.658 cv
111.552 309.933 112.142 309.839 112.507 309.604 cv
cp
1 .733333 .552941 rgb
f
124.191 311.027 mo
124.074 311.302 123.891 311.554 123.693 311.729 cv
123.021 312.327 122.485 313.047 121.834 313.684 cv
120.785 314.714 119.707 315.736 118.543 316.642 cv
118.245 316.874 117.888 317.111 117.518 317.029 cv
117.321 316.987 117.156 316.858 117 316.732 cv
114.602 314.822 112.322 312.669 110.84 309.985 cv
110.778 309.874 110.717 309.753 110.73 309.628 cv
110.757 309.382 111.038 309.261 111.275 309.188 cv
111.463 309.132 111.651 309.075 111.839 309.019 cv
112.076 308.947 112.33 308.876 112.566 308.948 cv
112.783 309.016 112.945 309.19 113.096 309.358 cv
114.551 310.813 115.703 312.82 117.558 313.799 cv
117.674 313.86 117.794 313.919 117.924 313.935 cv
118.315 313.983 118.637 313.653 118.892 313.354 cv
119.729 312.367 120.587 311.396 121.468 310.447 cv
122.05 309.82 123.041 308.933 123.951 309.635 cv
124.407 309.987 124.399 310.544 124.191 311.027 cv
cp
.192157 .184314 .247059 rgb
f
90.8125 333.467 mo
90.7168 332.344 94.5298 332.156 94.5259 334.133 cv
94.9868 334.071 95.4468 334.008 95.9072 333.946 cv
95.7012 332.831 99.6807 332.565 99.5903 334.37 cv
99.5596 334.981 100.414 335.354 100.824 334.883 cv
101.294 334.341 101.689 333.523 102.488 333.491 cv
103.516 333.451 104.119 334.684 104.334 335.497 cv
104.518 336.186 105.503 336.158 105.699 335.497 cv
105.854 334.973 106.042 334.503 106.422 334.099 cv
107.149 333.326 108.358 334.589 108.402 335.315 cv
108.434 335.851 109.177 336.321 109.585 335.806 cv
110.885 334.163 112.864 333.602 113.941 335.784 cv
114.241 336.393 115.008 336.114 115.215 335.618 cv
115.708 334.445 118.325 333.075 118.528 335.108 cv
118.605 335.882 119.646 336.075 119.902 335.294 cv
120.5 333.468 123.28 333.039 124.118 334.873 cv
124.389 335.465 125.294 335.264 125.447 334.697 cv
126.022 332.579 129.396 332.253 129.419 334.807 cv
129.425 335.513 130.538 335.704 130.68 334.978 cv
131.512 330.693 124.993 330.571 124.044 334.312 cv
124.488 334.254 124.931 334.194 125.374 334.138 cv
123.97 331.188 119.449 331.999 118.554 334.923 cv
119.011 334.984 119.469 335.047 119.927 335.108 cv
119.506 331.577 115.11 332.455 113.941 335.081 cv
114.343 335.081 114.744 335.081 115.146 335.081 cv
113.683 332.226 110.454 332.469 108.605 334.825 cv
108.999 334.989 109.393 335.152 109.788 335.315 cv
109.704 334.018 108.588 332.673 107.244 332.536 cv
105.626 332.372 104.752 333.746 104.334 335.12 cv
104.79 335.12 105.244 335.12 105.699 335.12 cv
105.338 333.724 104.465 332.535 103.042 332.126 cv
101.513 331.686 100.67 332.858 99.8018 333.859 cv
100.213 334.03 100.625 334.2 101.036 334.37 cv
101.217 330.689 93.8418 330.747 94.5508 334.319 cv
94.7046 335.099 95.9849 334.924 95.9326 334.133 cv
95.8115 332.294 94.353 331.388 92.606 331.458 cv
91.5039 331.502 89.7656 332.144 90.1333 333.559 cv
90.2295 333.93 90.8462 333.862 90.8125 333.467 cv
90.8125 333.467 li
cp
f
90.9287 339.44 mo
91.0996 338.484 91.8369 337.856 92.7212 337.553 cv
93.9736 337.123 94.6431 338.008 94.7212 339.179 cv
94.7666 339.863 95.6201 340.116 96.0024 339.527 cv
96.2793 339.1 96.4795 338.562 96.9155 338.271 cv
97.7944 337.686 98.7666 338.633 99.248 339.262 cv
99.5317 339.632 100.196 339.785 100.447 339.262 cv
100.731 338.668 101.066 337.9 101.852 338.24 cv
102.477 338.511 102.976 339.079 103.439 339.558 cv
103.753 339.881 104.255 339.774 104.488 339.422 cv
104.849 338.878 105.143 338.425 105.854 338.401 cv
106.583 338.376 107.713 339.085 107.671 339.885 cv
107.644 340.401 108.265 340.722 108.688 340.469 cv
109.824 339.792 110.704 338.555 112.092 338.403 cv
113.127 338.29 113.908 339.836 114.666 340.374 cv
114.98 340.598 115.477 340.438 115.653 340.115 cv
116.479 338.605 118.273 338.184 118.979 340.048 cv
119.186 340.598 119.958 340.8 120.284 340.22 cv
121.351 338.322 124.173 337.914 124.929 340.291 cv
125.137 340.947 126.167 341.027 126.335 340.291 cv
126.539 339.398 127.306 338.832 128.083 338.437 cv
128.447 338.252 128.854 338.167 129.258 338.178 cv
129.732 338.191 129.703 338.896 129.731 339.22 cv
129.792 339.909 130.75 340.093 130.963 339.387 cv
131.466 337.716 130.196 336.434 128.513 336.775 cv
126.953 337.094 125.293 338.284 124.929 339.903 cv
125.397 339.903 125.867 339.903 126.335 339.903 cv
125.201 336.379 120.751 336.442 119.051 339.499 cv
119.486 339.556 119.92 339.611 120.355 339.668 cv
119.227 336.724 115.908 336.713 114.407 339.389 cv
114.736 339.302 115.065 339.216 115.395 339.129 cv
114.386 338.397 113.836 337.022 112.403 337.001 cv
110.482 336.973 109.502 338.385 108.006 339.302 cv
108.345 339.496 108.684 339.691 109.022 339.885 cv
109.079 338.503 107.814 337.626 106.646 337.203 cv
105.176 336.672 104.095 337.623 103.335 338.749 cv
103.685 338.703 104.034 338.659 104.384 338.612 cv
103.644 337.836 102.785 336.951 101.674 336.787 cv
100.473 336.61 99.71 337.592 99.248 338.562 cv
99.6479 338.562 100.047 338.562 100.447 338.562 cv
99.6064 337.466 98.6387 336.664 97.1895 336.779 cv
95.9126 336.882 95.4165 337.869 94.8149 338.832 cv
95.2422 338.948 95.6689 339.064 96.0962 339.179 cv
95.9375 337.251 94.7842 335.931 92.7637 336.263 cv
91.3765 336.492 89.7983 337.942 90.3018 339.44 cv
90.3955 339.72 90.8677 339.78 90.9287 339.44 cv
90.9287 339.44 li
cp
f
12.8584 284.232 mo
12.8584 273.272 li
18.0273 273.272 li
18.0273 274.147 li
13.9253 274.147 li
13.9253 277.656 li
17.916 277.656 li
17.916 278.533 li
13.9253 278.533 li
13.9253 284.232 li
12.8584 284.232 li
cp
f
20.4692 277.435 mo
21.4097 277.435 li
21.4097 284.232 li
20.4692 284.232 li
20.4692 277.435 li
cp
20.2207 275.134 mo
20.2207 274.942 20.2837 274.774 20.4102 274.631 cv
20.5361 274.487 20.7129 274.415 20.9395 274.415 cv
21.1611 274.415 21.3364 274.487 21.4658 274.631 cv
21.5938 274.774 21.6582 274.942 21.6582 275.134 cv
21.6582 275.355 21.583 275.531 21.4326 275.661 cv
21.2827 275.791 21.1182 275.857 20.9395 275.857 cv
20.7607 275.857 20.5972 275.791 20.4463 275.659 cv
20.2959 275.529 20.2207 275.354 20.2207 275.134 cv
cp
f
24.5093 284.232 mo
24.5093 277.435 li
25.4497 277.435 li
25.4497 278.566 li
25.9492 277.626 26.7114 277.156 27.7358 277.156 cv
28.5337 277.156 29.1265 277.406 29.5156 277.908 cv
29.9043 278.408 30.0986 279.065 30.0986 279.879 cv
30.0986 284.232 li
29.1582 284.232 li
29.1582 280.007 li
29.1582 279.439 29.0649 278.947 28.8794 278.532 cv
28.6934 278.117 28.2749 277.909 27.623 277.909 cv
27.1826 277.909 26.7969 278.039 26.4678 278.299 cv
26.1377 278.56 25.8857 278.903 25.7114 279.335 cv
25.5371 279.765 25.4497 280.219 25.4497 280.694 cv
25.4497 284.232 li
24.5093 284.232 li
cp
f
36.2988 283.762 mo
36.6328 283.762 36.9512 283.698 37.2524 283.572 cv
37.5552 283.444 37.8213 283.26 38.0522 283.018 cv
38.2822 282.775 38.4653 282.47 38.6006 282.101 cv
38.7354 281.731 38.8027 281.31 38.8027 280.836 cv
38.8027 280.339 38.7075 279.868 38.5161 279.422 cv
38.3247 278.977 38.042 278.613 37.6675 278.331 cv
37.2925 278.05 36.8467 277.909 36.3296 277.909 cv
35.7993 277.909 35.3413 278.044 34.9556 278.313 cv
34.5688 278.581 34.2739 278.941 34.0703 279.39 cv
33.8662 279.839 33.7642 280.321 33.7642 280.836 cv
33.7642 281.404 33.8755 281.911 34.0967 282.358 cv
34.3188 282.805 34.6235 283.151 35.0107 283.396 cv
35.3984 283.641 35.8271 283.762 36.2988 283.762 cv
cp
39.6826 284.232 mo
38.8027 284.232 li
38.8027 283.074 li
38.4844 283.647 38.0801 284.031 37.5898 284.225 cv
37.0996 284.418 36.6694 284.516 36.3008 284.516 cv
35.8115 284.516 35.353 284.43 34.9253 284.26 cv
34.4971 284.088 34.1211 283.843 33.7964 283.52 cv
33.4712 283.197 33.2183 282.808 33.0356 282.352 cv
32.8535 281.896 32.7627 281.39 32.7627 280.834 cv
32.7627 280.197 32.9043 279.596 33.1865 279.031 cv
33.4697 278.467 33.8818 278.014 34.4243 277.67 cv
34.9673 277.328 35.6025 277.156 36.3311 277.156 cv
37.4287 277.156 38.2324 277.616 38.7417 278.536 cv
38.7417 272.74 li
39.6826 272.74 li
39.6826 284.232 li
cp
f
11.6548 293.964 mo
12.7212 293.964 li
15.271 299.714 li
17.4502 293.964 li
18.4019 293.964 li
14.3955 304.049 li
13.3789 304.049 li
14.7856 300.7 li
11.6548 293.964 li
cp
f
23.7725 300.291 mo
24.2979 300.291 24.7651 300.16 25.1753 299.897 cv
25.5859 299.636 25.9033 299.28 26.1294 298.834 cv
26.355 298.387 26.4678 297.897 26.4678 297.365 cv
26.4678 296.832 26.355 296.343 26.1294 295.896 cv
25.9033 295.449 25.5859 295.094 25.1753 294.831 cv
24.7651 294.57 24.2979 294.438 23.7725 294.438 cv
23.2549 294.438 22.7905 294.569 22.3784 294.829 cv
21.9673 295.09 21.6484 295.445 21.4214 295.894 cv
21.1948 296.342 21.0811 296.832 21.0811 297.365 cv
21.0811 297.897 21.1948 298.387 21.4214 298.835 cv
21.6484 299.283 21.9673 299.639 22.3784 299.899 cv
22.7905 300.161 23.2549 300.291 23.7725 300.291 cv
cp
23.7749 301.044 mo
23.1118 301.044 22.4985 300.896 21.9346 300.6 cv
21.3706 300.302 20.9199 299.874 20.584 299.316 cv
20.2476 298.758 20.0796 298.107 20.0796 297.363 cv
20.0796 296.619 20.2476 295.968 20.584 295.409 cv
20.9199 294.851 21.3706 294.424 21.9346 294.129 cv
22.4985 293.833 23.1118 293.686 23.7749 293.686 cv
24.4365 293.686 25.0498 293.833 25.6143 294.129 cv
26.1782 294.424 26.6284 294.851 26.9653 295.409 cv
27.3008 295.968 27.4692 296.619 27.4692 297.363 cv
27.4692 298.107 27.3008 298.758 26.9653 299.316 cv
26.6284 299.874 26.1782 300.302 25.6143 300.6 cv
25.0498 300.896 24.4365 301.044 23.7749 301.044 cv
cp
f
30.1294 293.964 mo
31.0693 293.964 li
31.0693 298.085 li
31.0693 298.646 31.1978 299.153 31.4536 299.608 cv
31.7104 300.063 32.2192 300.291 32.9814 300.291 cv
33.7378 300.291 34.2427 300.063 34.4951 299.605 cv
34.7471 299.147 34.8735 298.641 34.8735 298.085 cv
34.8735 293.964 li
35.8135 293.964 li
35.8135 297.975 li
35.8135 299.167 35.52 299.977 34.9326 300.403 cv
34.3452 300.83 33.6943 301.044 32.9814 301.044 cv
32.252 301.044 31.5947 300.83 31.0083 300.403 cv
30.4219 299.977 30.1294 299.167 30.1294 297.975 cv
30.1294 293.964 li
cp
f
38.9141 300.762 mo
38.9141 293.964 li
39.854 293.964 li
39.854 295.386 li
40.168 294.791 40.48 294.38 40.791 294.15 cv
41.1016 293.921 41.4526 293.808 41.8423 293.808 cv
42.1128 293.808 42.3892 293.859 42.6719 293.964 cv
42.3892 294.84 li
42.1821 294.725 41.958 294.667 41.7163 294.667 cv
41.4004 294.667 41.0981 294.801 40.8101 295.067 cv
40.522 295.334 40.2905 295.669 40.1167 296.073 cv
39.9414 296.478 39.854 296.869 39.854 297.25 cv
39.854 300.762 li
38.9141 300.762 li
cp
f
12.6406 317.29 mo
12.6406 305.779 li
13.5811 305.779 li
13.5811 317.29 li
12.6406 317.29 li
cp
f
17.3232 313.219 mo
21.9258 313.219 li
21.9106 312.81 21.8086 312.433 21.6201 312.088 cv
21.4316 311.742 21.1748 311.47 20.8491 311.269 cv
20.5249 311.068 20.1582 310.967 19.7505 310.967 cv
19.083 310.967 18.5347 311.182 18.1064 311.612 cv
17.6782 312.042 17.4175 312.577 17.3232 313.219 cv
cp
22.1475 315.146 mo
22.8662 315.505 li
22.1787 316.884 21.1353 317.573 19.7368 317.573 cv
18.9731 317.573 18.3271 317.386 17.8003 317.014 cv
17.2729 316.64 16.8818 316.17 16.6265 315.603 cv
16.3726 315.035 16.2451 314.465 16.2451 313.893 cv
16.2451 313.288 16.3716 312.704 16.6255 312.142 cv
16.8784 311.577 17.2695 311.115 17.7979 310.755 cv
18.3267 310.394 18.9731 310.214 19.7368 310.214 cv
20.4888 310.214 21.1001 310.398 21.5713 310.769 cv
22.0425 311.137 22.3765 311.577 22.5723 312.088 cv
22.7686 312.597 22.8662 313.074 22.8662 313.517 cv
22.8662 313.972 li
17.2466 313.972 li
17.2466 314.483 17.3486 314.958 17.5522 315.392 cv
17.7563 315.827 18.0469 316.174 18.4243 316.433 cv
18.8013 316.691 19.2383 316.82 19.7354 316.82 cv
20.8135 316.82 21.6172 316.262 22.1475 315.146 cv
cp
f
28.6289 316.82 mo
29.0674 316.82 29.4785 316.709 29.8623 316.487 cv
30.2461 316.267 30.5542 315.934 30.7861 315.492 cv
31.0186 315.05 31.1348 314.518 31.1348 313.894 cv
31.1348 313.519 31.082 313.16 30.978 312.816 cv
30.873 312.472 30.7163 312.159 30.5073 311.879 cv
30.2979 311.598 30.0376 311.375 29.7266 311.212 cv
29.4155 311.048 29.0596 310.967 28.6592 310.967 cv
28.1338 310.967 27.6768 311.102 27.2876 311.372 cv
26.8984 311.642 26.6021 312.002 26.3984 312.451 cv
26.1938 312.901 26.0918 313.381 26.0918 313.894 cv
26.0918 314.462 26.2031 314.969 26.4248 315.415 cv
26.647 315.862 26.9517 316.208 27.3394 316.453 cv
27.7271 316.698 28.1567 316.82 28.6289 316.82 cv
cp
31.1348 311.705 mo
31.1348 310.493 li
32.0103 310.493 li
32.0103 317.29 li
31.1348 317.29 li
31.1348 316.133 li
30.8745 316.591 30.5273 316.946 30.0928 317.196 cv
29.6582 317.447 29.1709 317.573 28.6304 317.573 cv
27.978 317.573 27.3813 317.422 26.8413 317.118 cv
26.3008 316.814 25.874 316.383 25.5605 315.822 cv
25.2476 315.262 25.0908 314.618 25.0908 313.893 cv
25.0908 313.41 25.167 312.948 25.3218 312.509 cv
25.4756 312.069 25.7065 311.677 26.0142 311.327 cv
26.3208 310.98 26.6958 310.708 27.1396 310.51 cv
27.583 310.313 28.0854 310.214 28.646 310.214 cv
29.7749 310.214 30.6045 310.711 31.1348 311.705 cv
cp
f
38.2104 316.82 mo
38.5444 316.82 38.8623 316.757 39.1641 316.629 cv
39.4663 316.501 39.7324 316.317 39.9634 316.075 cv
40.1938 315.833 40.3765 315.527 40.5117 315.158 cv
40.6465 314.789 40.7144 314.368 40.7144 313.894 cv
40.7144 313.396 40.6191 312.926 40.4277 312.48 cv
40.2368 312.033 39.9541 311.671 39.5791 311.389 cv
39.2046 311.108 38.7588 310.967 38.2412 310.967 cv
37.7109 310.967 37.2524 311.101 36.8667 311.37 cv
36.4805 311.64 36.1855 311.998 35.9819 312.447 cv
35.7778 312.897 35.6758 313.378 35.6758 313.894 cv
35.6758 314.462 35.7866 314.969 36.0088 315.415 cv
36.23 315.862 36.5347 316.208 36.9219 316.453 cv
37.3096 316.698 37.7393 316.82 38.2104 316.82 cv
cp
41.5938 317.29 mo
40.7144 317.29 li
40.7144 316.133 li
40.3955 316.705 39.9922 317.089 39.5015 317.282 cv
39.0107 317.477 38.5815 317.573 38.2119 317.573 cv
37.7227 317.573 37.2646 317.488 36.8369 317.316 cv
36.4087 317.146 36.0322 316.9 35.7075 316.577 cv
35.3828 316.256 35.1294 315.865 34.9473 315.409 cv
34.7651 314.953 34.6743 314.447 34.6743 313.893 cv
34.6743 313.255 34.8154 312.654 35.0981 312.089 cv
35.3809 311.525 35.7935 311.071 36.3359 310.729 cv
36.8784 310.386 37.5142 310.214 38.2432 310.214 cv
39.3403 310.214 40.144 310.674 40.6533 311.594 cv
40.6533 305.799 li
41.5938 305.799 li
41.5938 317.29 li
cp
f
44.6934 310.493 mo
45.6338 310.493 li
45.6338 317.29 li
44.6934 317.29 li
44.6934 310.493 li
cp
44.4448 308.19 mo
44.4448 308 44.5078 307.833 44.6343 307.688 cv
44.7603 307.545 44.937 307.473 45.1636 307.473 cv
45.3857 307.473 45.5605 307.545 45.6895 307.688 cv
45.8179 307.833 45.8823 308 45.8823 308.19 cv
45.8823 308.413 45.8071 308.589 45.6567 308.72 cv
45.5063 308.849 45.3418 308.914 45.1636 308.914 cv
44.9849 308.914 44.8208 308.849 44.6704 308.718 cv
44.52 308.586 44.4448 308.41 44.4448 308.19 cv
cp
f
48.7334 317.29 mo
48.7334 310.493 li
49.6738 310.493 li
49.6738 311.625 li
50.1733 310.684 50.9355 310.214 51.96 310.214 cv
52.7578 310.214 53.3506 310.464 53.7397 310.965 cv
54.1279 311.465 54.3223 312.123 54.3223 312.936 cv
54.3223 317.29 li
53.3823 317.29 li
53.3823 313.064 li
53.3823 312.496 53.2891 312.005 53.1035 311.589 cv
52.9175 311.175 52.4985 310.967 51.8472 310.967 cv
51.4067 310.967 51.021 311.097 50.6914 311.356 cv
50.3623 311.616 50.1099 311.962 49.9355 312.393 cv
49.7607 312.822 49.6738 313.275 49.6738 313.753 cv
49.6738 317.29 li
48.7334 317.29 li
cp
f
60.5225 316.82 mo
60.9609 316.82 61.3716 316.709 61.7549 316.487 cv
62.1387 316.267 62.4468 315.934 62.6787 315.492 cv
62.9106 315.05 63.0264 314.518 63.0264 313.894 cv
63.0264 313.401 62.9312 312.932 62.7417 312.481 cv
62.5518 312.032 62.27 311.667 61.8975 311.388 cv
61.5234 311.107 61.0757 310.967 60.5532 310.967 cv
60.0234 310.967 59.5649 311.101 59.1787 311.37 cv
58.793 311.64 58.4976 311.998 58.2935 312.447 cv
58.0898 312.897 57.9878 313.378 57.9878 313.894 cv
57.9878 314.462 58.0986 314.969 58.3203 315.415 cv
58.5425 315.862 58.8467 316.208 59.2344 316.453 cv
59.6216 316.698 60.0508 316.82 60.5225 316.82 cv
cp
57.2832 318.56 mo
58.3169 318.56 li
58.4468 319.079 58.7231 319.457 59.1465 319.692 cv
59.5693 319.929 60.0332 320.047 60.5381 320.047 cv
61.519 320.047 62.1689 319.737 62.4878 319.121 cv
62.8062 318.505 62.9653 317.821 62.9653 317.072 cv
62.9653 316.242 li
62.6978 316.676 62.3452 317.006 61.9092 317.233 cv
61.4722 317.46 61.0107 317.573 60.5244 317.573 cv
60.0352 317.573 59.5762 317.488 59.1484 317.316 cv
58.7202 317.146 58.3442 316.9 58.02 316.577 cv
57.6948 316.256 57.4419 315.865 57.2598 315.409 cv
57.0771 314.953 56.9863 314.447 56.9863 313.893 cv
56.9863 313.252 57.125 312.65 57.4028 312.088 cv
57.6807 311.524 58.0889 311.071 58.6289 310.729 cv
59.1689 310.386 59.811 310.214 60.5547 310.214 cv
61.7007 310.214 62.5249 310.711 63.0264 311.705 cv
63.0264 310.493 li
63.9063 310.493 li
63.9063 317.072 li
63.9063 317.771 63.7866 318.4 63.5483 318.963 cv
63.3101 319.524 62.938 319.971 62.4331 320.303 cv
61.9268 320.634 61.2954 320.8 60.5396 320.8 cv
59.5049 320.8 58.7407 320.575 58.2485 320.128 cv
57.7554 319.682 57.4336 319.158 57.2832 318.56 cv
cp
f
11.9829 332.424 mo
12.7515 332.019 li
12.8818 332.416 13.0957 332.737 13.394 332.982 cv
13.6924 333.227 14.0459 333.35 14.4565 333.35 cv
14.9102 333.35 15.2612 333.222 15.5103 332.969 cv
15.7578 332.715 15.8828 332.394 15.8828 332.004 cv
15.8828 331.568 15.7393 331.26 15.4521 331.075 cv
15.166 330.893 14.7715 330.727 14.2695 330.579 cv
13.854 330.448 13.5112 330.316 13.2427 330.181 cv
12.9736 330.046 12.749 329.853 12.5679 329.604 cv
12.3872 329.354 12.2969 329.035 12.2969 328.651 cv
12.2969 328.294 12.3848 327.971 12.5605 327.68 cv
12.7363 327.389 12.9878 327.16 13.3159 326.993 cv
13.6431 326.826 14.0283 326.742 14.4722 326.742 cv
15.4434 326.742 16.1479 327.208 16.5859 328.138 cv
15.8828 328.513 li
15.7651 328.217 15.5732 327.974 15.3052 327.783 cv
15.0376 327.591 14.7344 327.496 14.3955 327.496 cv
14.0259 327.496 13.7402 327.601 13.5391 327.813 cv
13.3379 328.024 13.2373 328.278 13.2373 328.577 cv
13.2373 328.816 13.293 329.007 13.4053 329.149 cv
13.5176 329.292 13.6558 329.4 13.8203 329.473 cv
13.9844 329.546 14.249 329.643 14.6133 329.765 cv
15.0571 329.907 15.4268 330.05 15.7241 330.188 cv
16.021 330.329 16.2832 330.545 16.5117 330.839 cv
16.7397 331.132 16.8535 331.51 16.8535 331.974 cv
16.8535 332.539 16.647 333.035 16.2344 333.462 cv
15.8213 333.889 15.1982 334.102 14.3647 334.102 cv
13.2153 334.102 12.4219 333.542 11.9829 332.424 cv
cp
f
19.6245 333.818 mo
19.6245 327.774 li
18.5313 327.774 li
18.5313 327.021 li
19.6245 327.021 li
19.6245 324.391 li
20.5649 324.391 li
20.5649 327.021 li
21.8804 327.021 li
21.8804 327.774 li
20.5649 327.774 li
20.5649 333.818 li
19.6245 333.818 li
cp
f
23.1177 327.021 mo
24.1841 327.021 li
26.7344 332.771 li
28.9136 327.021 li
29.8652 327.021 li
25.8589 337.106 li
24.8418 337.106 li
26.2485 333.758 li
23.1177 327.021 li
cp
f
31.979 333.818 mo
31.979 322.309 li
32.9194 322.309 li
32.9194 333.818 li
31.979 333.818 li
cp
f
36.6611 329.747 mo
41.2642 329.747 li
41.249 329.337 41.147 328.96 40.9585 328.615 cv
40.7695 328.271 40.5132 327.999 40.1875 327.798 cv
39.8633 327.596 39.4966 327.496 39.0889 327.496 cv
38.4209 327.496 37.873 327.711 37.4448 328.14 cv
37.0166 328.57 36.7559 329.106 36.6611 329.747 cv
cp
41.4858 331.674 mo
42.2046 332.034 li
41.5166 333.413 40.4736 334.102 39.0752 334.102 cv
38.311 334.102 37.6655 333.915 37.1382 333.542 cv
36.6113 333.168 36.2202 332.698 35.9648 332.13 cv
35.7104 331.563 35.583 330.994 35.583 330.419 cv
35.583 329.816 35.71 329.233 35.9634 328.669 cv
36.2168 328.106 36.6074 327.645 37.1362 327.283 cv
37.665 326.923 38.311 326.742 39.0752 326.742 cv
39.8267 326.742 40.438 326.928 40.9097 327.296 cv
41.3804 327.666 41.7144 328.106 41.9102 328.615 cv
42.1064 329.126 42.2046 329.603 42.2046 330.046 cv
42.2046 330.5 li
36.585 330.5 li
36.585 331.013 36.687 331.486 36.8906 331.921 cv
37.0947 332.355 37.3853 332.701 37.7622 332.96 cv
38.1396 333.219 38.5762 333.35 39.0732 333.35 cv
40.1514 333.35 40.9556 332.79 41.4858 331.674 cv
cp
f
335.302 355.886 mo
173.58 355.886 li
173.58 261.775 li
335.302 261.775 li
335.302 355.886 li
cp
.886275 0 .0509804 rgb
f
253.197 348.251 mo
254.062 348.768 254.849 348.425 256.027 347.626 cv
272.894 336.191 290.188 325.387 307.863 315.243 cv
308.855 314.673 310.962 313.233 311.349 314.086 cv
311.924 315.353 312.713 317.165 313.266 318.44 cv
313.4 318.751 313.536 319.063 313.708 319.354 cv
314.099 320.015 314.766 321.755 315.554 321.9 cv
316.433 322.063 321.403 311.332 322.264 309.658 cv
325.567 303.247 327.829 297.849 330.627 292.896 cv
330.898 292.418 331.181 291.907 331.152 291.359 cv
331.122 290.812 330.725 290.27 329.381 290.035 cv
324.014 289.093 318.654 288.115 313.271 287.274 cv
308.174 286.479 302.966 286.164 297.896 285.315 cv
297.664 285.276 297.425 285.229 297.194 285.276 cv
296.157 285.491 297.657 287.699 297.891 288.262 cv
298.485 289.686 299.079 291.109 299.672 292.534 cv
299.803 292.848 299.931 293.227 299.747 293.515 cv
299.637 293.688 299.438 293.781 299.25 293.865 cv
279.604 302.67 259.242 309.798 239.567 318.537 cv
238.902 318.832 238.213 319.147 237.75 319.707 cv
236.792 320.862 238.581 323.099 239.083 324.121 cv
240.025 326.039 240.969 327.957 241.912 329.876 cv
242.527 331.125 243.142 332.377 243.827 333.591 cv
244.425 334.649 245.075 335.678 245.725 336.706 cv
246.922 338.601 248.287 340.466 249.35 342.439 cv
250.234 344.079 251.002 345.866 252.201 347.324 cv
252.558 347.761 252.882 348.063 253.197 348.251 cv
cp
1 .639216 .113725 rgb
f
275.347 323.521 mo
275.794 323.725 276.267 323.935 276.757 323.898 cv
277.247 323.861 277.75 323.489 277.749 322.997 cv
277.749 322.929 277.738 322.859 277.704 322.801 cv
277.654 322.718 277.564 322.668 277.477 322.625 cv
276.505 322.136 275.457 321.798 274.381 321.633 cv
274.042 321.579 273.698 321.543 273.375 321.425 cv
272.995 322.16 272.791 322.985 272.786 323.813 cv
272.973 323.975 273.292 323.949 273.452 323.761 cv
273.65 323.529 273.631 323.106 273.918 323.003 cv
274.068 322.947 274.232 323.015 274.377 323.08 cv
274.701 323.228 275.024 323.375 275.347 323.521 cv
cp
.290196 .466667 .388235 rgb
f
252.26 331.148 mo
252.375 331.078 252.512 331.045 252.646 331.056 cv
252.838 331.069 253.267 331.082 253.324 331.265 cv
253.382 331.45 253.38 331.655 253.485 331.817 cv
253.555 331.926 253.665 332 253.771 332.074 cv
254.247 332.404 254.697 332.771 255.117 333.172 cv
255.219 333.268 255.322 333.371 255.368 333.503 cv
255.413 333.636 255.384 333.805 255.265 333.878 cv
255.184 333.927 255.083 333.922 254.988 333.914 cv
254.299 333.85 253.625 333.622 253.039 333.254 cv
252.693 333.036 252.379 332.772 252.066 332.51 cv
251.989 332.446 251.911 332.379 251.87 332.289 cv
251.83 332.199 251.831 332.098 251.839 332 cv
251.877 331.562 252.055 331.137 252.341 330.803 cv
252.26 331.148 li
cp
.337255 .564706 .780392 rgb
f
274.647 321.329 mo
274.97 318.824 275.183 316.306 275.285 313.781 cv
275.324 312.783 273.823 312.154 272.962 311.814 cv
271.545 311.255 270.076 311.069 268.58 310.858 cv
267.076 310.647 266.568 310.53 266.027 312.132 cv
265.932 312.414 266.038 312.562 266.214 312.8 cv
266.391 313.038 266.66 313.19 266.925 313.325 cv
268.6 314.181 270.481 314.631 272.363 314.627 cv
272.782 315.66 272.042 316.794 272.047 317.909 cv
272.051 319.188 273.037 320.349 272.887 321.619 cv
272.861 321.834 272.812 322.082 272.957 322.242 cv
273.053 322.351 273.21 322.381 273.355 322.389 cv
274.018 322.426 274.562 321.987 274.647 321.329 cv
cp
1 .733333 .552941 rgb
f
267.524 316.678 mo
267.182 316.661 266.776 316.401 266.536 316.248 cv
265.839 315.805 265.268 315.124 264.729 314.535 cv
263.926 313.662 263.193 312.627 262.079 312.22 cv
261.719 312.089 261.333 312.03 260.993 311.858 cv
260.417 311.569 260.029 310.982 259.865 310.358 cv
259.7 309.735 259.735 309.074 259.833 308.437 cv
259.731 308.307 259.952 308.189 259.98 308.026 cv
261.017 307.66 261.998 307.137 262.879 306.479 cv
263.099 306.315 263.314 306.141 263.552 306.002 cv
263.792 305.861 264.042 306.114 264.312 306.052 cv
266.524 308.568 269.849 309.242 272.861 310.709 cv
272.995 310.774 273.135 310.847 273.208 310.977 cv
273.364 311.261 273.103 311.589 272.863 311.808 cv
271.391 313.15 269.919 314.493 268.447 315.836 cv
268.172 316.087 268.081 316.547 267.72 316.656 cv
267.66 316.675 267.592 316.681 267.524 316.678 cv
cp
.192157 .184314 .247059 rgb
f
283.409 311.459 mo
283.427 311.48 283.446 311.504 283.465 311.525 cv
283.299 311.621 283.073 311.791 282.907 311.887 cv
282.842 311.924 282.775 311.963 282.738 312.025 cv
282.7 312.091 282.698 312.17 282.697 312.246 cv
282.693 312.53 282.69 312.813 282.687 313.099 cv
282.685 313.229 282.685 313.365 282.747 313.481 cv
282.916 313.795 283.37 313.733 283.718 313.804 cv
284.291 313.918 284.661 314.452 285.099 314.837 cv
285.565 315.246 286.134 315.521 286.709 315.749 cv
286.941 315.842 287.134 315.604 287.108 315.431 cv
287.082 315.26 286.956 315.123 286.836 314.997 cv
286.086 314.213 285.334 313.23 284.841 312.258 cv
284.663 311.904 284.661 311.658 284.289 311.484 cv
284.129 311.409 283.479 311.541 283.409 311.459 cv
cp
.290196 .466667 .388235 rgb
f
275.01 304.95 mo
275.682 306.159 277.264 306.57 278.637 306.405 cv
280.011 306.24 281.29 305.636 282.632 305.306 cv
282.739 305.279 282.855 305.256 282.957 305.297 cv
283.099 305.355 283.163 305.52 283.197 305.669 cv
283.442 306.745 282.925 307.826 282.652 308.896 cv
282.397 309.895 282.351 310.947 282.52 311.964 cv
282.543 312.104 282.577 312.256 282.681 312.354 cv
282.8 312.463 282.976 312.477 283.136 312.483 cv
283.74 312.511 284.345 312.539 284.949 312.567 cv
285.625 310.179 286.275 307.784 286.901 305.383 cv
287.014 304.947 287.127 304.5 287.075 304.054 cv
286.941 302.926 285.749 302.806 284.83 302.733 cv
283.456 302.626 282.075 302.58 280.697 302.552 cv
279.131 302.52 277.527 302.515 276.264 303.534 cv
275.888 303.837 275.513 304.14 275.138 304.442 cv
275.049 304.514 274.956 304.595 274.941 304.707 cv
274.931 304.793 274.969 304.876 275.01 304.95 cv
cp
.192157 .184314 .247059 rgb
f
295.061 310.037 mo
296.193 310.208 297.726 310.308 298.823 310.635 cv
298.958 310.676 299.097 310.72 299.238 310.703 cv
299.377 310.688 299.52 310.594 299.544 310.456 cv
299.565 310.34 299.501 310.226 299.426 310.133 cv
298.89 309.467 297.877 309.47 297.145 309.027 cv
296.621 308.71 296.702 308.163 296.114 307.989 cv
295.682 307.863 294.899 307.742 294.462 307.845 cv
294.383 308.19 293.744 309.838 295.061 310.037 cv
cp
.290196 .466667 .388235 rgb
f
285.939 296.781 mo
285.644 297.674 285.89 298.724 286.552 299.392 cv
287.214 300.059 288.262 300.314 289.157 300.027 cv
289.347 299.966 289.535 299.882 289.733 299.859 cv
289.937 299.838 290.144 299.883 290.345 299.928 cv
291 300.073 291.653 300.22 292.306 300.366 cv
293.056 300.533 293.823 300.709 294.466 301.127 cv
294.513 301.811 294.467 302.597 294.338 303.271 cv
294.077 304.629 294.03 306.026 294.201 307.398 cv
294.241 307.725 294.319 308.09 294.6 308.262 cv
294.736 308.344 294.898 308.367 295.054 308.388 cv
295.579 308.458 296.105 308.528 296.631 308.598 cv
296.922 306.94 297.27 305.292 297.669 303.656 cv
297.828 303.008 297.998 302.352 298.335 301.777 cv
298.721 301.122 299.343 300.41 299.041 299.712 cv
298.926 299.446 298.693 299.255 298.463 299.078 cv
297.003 297.956 295.348 297.089 293.595 296.525 cv
292.69 296.234 291.711 295.996 291.042 295.323 cv
290.92 295.201 290.805 295.063 290.643 295.007 cv
290.491 294.954 290.325 294.984 290.168 295.019 cv
288.71 295.331 287.174 295.945 285.939 296.781 cv
cp
.192157 .184314 .247059 rgb
f
285.731 274.865 mo
285.491 274.674 285.3 274.434 285.286 274.104 cv
285.256 273.399 285.771 272.534 286.207 272.02 cv
286.375 271.821 286.574 271.632 286.826 271.567 cv
287.078 271.502 287.388 271.606 287.478 271.851 cv
287.517 271.956 287.511 272.072 287.502 272.185 cv
287.467 272.622 287.387 273.055 287.264 273.476 cv
287.25 273.525 287.234 273.578 287.25 273.63 cv
287.279 273.725 287.398 273.755 287.498 273.758 cv
287.609 273.764 287.721 273.756 287.833 273.738 cv
287.913 273.725 287.998 273.704 288.074 273.729 cv
288.212 273.773 288.272 273.949 288.235 274.089 cv
288.198 274.229 288.091 274.339 287.984 274.436 cv
287.791 274.61 287.581 274.763 287.372 274.917 cv
286.816 275.324 286.607 275.43 286.044 275.082 cv
285.937 275.016 285.83 274.944 285.731 274.865 cv
cp
1 .733333 .552941 rgb
f
282.224 282.768 mo
282.17 282.253 282.116 281.731 282.199 281.221 cv
282.261 280.839 282.4 280.474 282.539 280.11 cv
283.308 278.1 284.109 276.101 284.939 274.114 cv
285.005 273.956 285.156 273.855 285.328 273.871 cv
285.417 273.88 285.5 273.919 285.581 273.959 cv
286.065 274.195 286.55 274.434 287.036 274.671 cv
287.227 274.764 286.597 275.388 286.567 275.461 cv
286.039 276.78 285.623 278.14 285.192 279.493 cv
284.901 280.407 284.137 281.393 284.39 282.387 cv
284.635 283.346 285.285 284.406 285.825 285.229 cv
287.781 288.202 290.284 290.936 291.251 294.36 cv
291.314 294.583 291.369 294.829 291.266 295.036 cv
291.204 295.162 291.091 295.253 290.98 295.34 cv
289.435 296.526 287.555 297.175 285.711 297.803 cv
284.86 298.094 284.533 295.432 284.326 294.88 cv
283.909 293.769 283.687 292.574 283.442 291.416 cv
282.838 288.565 282.53 285.662 282.224 282.768 cv
cp
1 1 1 rgb
f
299.808 293.149 mo
299.696 293.199 299.665 292.996 299.711 292.884 cv
300.206 292.515 300.624 292.111 301.118 291.742 cv
301.316 291.595 301.532 291.438 301.781 291.427 cv
302.028 291.415 302.3 291.619 302.261 291.864 cv
302.209 292.186 301.7 292.321 301.73 292.646 cv
301.938 292.683 302.146 292.718 302.353 292.752 cv
302.781 292.825 303.012 292.882 303.306 293.199 cv
303.601 293.517 303.731 294.02 303.513 294.395 cv
303.35 294.675 303.024 294.832 302.7 294.855 cv
302.376 294.88 302.055 294.787 301.755 294.662 cv
301.212 294.435 300.719 294.102 300.231 293.77 cv
300.084 293.672 299.933 293.566 299.849 293.412 cv
299.766 293.257 299.666 293.253 299.808 293.149 cv
cp
1 .733333 .552941 rgb
f
284.498 284.703 mo
284.267 285.351 284.292 286.106 284.654 286.691 cv
285.066 287.355 285.851 287.716 286.629 287.792 cv
286.931 287.822 287.244 287.813 287.531 287.713 cv
288.185 287.485 288.593 286.834 288.843 286.189 cv
289.114 285.495 289.26 284.727 289.077 284.007 cv
288.796 282.909 287.7 282.571 286.679 282.676 cv
285.637 282.781 284.84 283.738 284.498 284.703 cv
cp
f
288.389 284.469 mo
288.401 284.254 288.635 284.137 288.816 284.25 cv
289.138 284.449 289.481 284.612 289.838 284.733 cv
289.89 284.752 289.945 284.77 290 284.79 cv
290.314 284.903 290.301 285.354 289.98 285.446 cv
289.535 285.572 289.101 285.746 288.691 285.963 cv
288.507 286.062 288.286 285.924 288.296 285.716 cv
288.318 285.304 288.367 284.881 288.389 284.469 cv
cp
1 .654902 .423529 rgb
f
270.86 297.071 mo
270.89 297.187 270.918 297.301 270.945 297.416 cv
271.515 299.881 272.367 302.752 274.289 304.519 cv
274.406 304.626 274.533 304.731 274.69 304.764 cv
274.965 304.818 275.412 304.679 275.668 304.564 cv
277.503 303.756 277.786 303.701 279.276 302.979 cv
279.412 302.915 279.652 302.736 279.731 302.607 cv
279.792 302.506 278.331 300.836 277.823 299.991 cv
277.495 299.445 277.301 298.832 277.133 298.219 cv
276.604 296.297 277.239 294.009 276.166 292.33 cv
275.37 291.084 272.23 290.814 270.717 291.427 cv
270.605 291.474 270.491 291.524 270.4 291.604 cv
270.225 291.761 270.16 292.005 270.121 292.235 cv
269.836 293.904 270.457 295.486 270.86 297.071 cv
cp
1 1 1 rgb
f
273.927 291.444 mo
273.951 291.627 273.861 291.806 273.704 291.904 cv
273.188 292.23 272.378 292.344 271.688 291.929 cv
271.466 291.751 271.964 291.042 271.664 290.837 cv
271.391 290.653 271.147 290.428 270.943 290.171 cv
270.679 289.841 270.479 289.446 270.447 289.025 cv
270.387 288.248 270.958 287.53 271.489 287.041 cv
272.275 286.317 273.763 286.383 274.518 287.117 cv
275.211 287.794 275.229 289.588 274.379 290.165 cv
274.267 290.24 274.142 290.293 274.037 290.376 cv
273.854 290.518 273.878 291.073 273.927 291.444 cv
cp
1 .733333 .552941 rgb
f
274.297 287.958 mo
274.464 287.801 275.918 288.932 275.777 289.158 cv
275.516 289.571 274.513 289.431 274.325 289.354 cv
274.136 289.277 274.124 288.12 274.297 287.958 cv
cp
1 .654902 .423529 rgb
f
283.067 300.312 mo
283.105 300.177 283.214 300.063 283.347 300.022 cv
284.017 299.811 284.928 300.115 285.46 300.573 cv
285.764 300.835 285.964 301.315 285.719 301.632 cv
285.642 301.73 285.531 301.798 285.423 301.862 cv
285.18 302.006 284.927 302.145 284.649 302.19 cv
284.371 302.237 284.059 302.177 283.867 301.971 cv
283.614 301.699 283.625 301.256 283.374 300.981 cv
283.266 300.864 283.119 300.79 283.006 300.677 cv
282.894 300.563 283.024 300.464 283.067 300.312 cv
cp
1 .733333 .552941 rgb
f
260.801 295.172 mo
259.694 295.875 259.363 296.406 258.958 297.654 cv
258.754 298.277 258.775 298.952 258.849 299.604 cv
258.955 300.514 258.836 301.309 258.925 302.222 cv
259.11 304.126 259.295 306.03 259.479 307.934 cv
259.494 308.078 259.513 308.233 259.616 308.335 cv
259.705 308.424 259.837 308.45 259.961 308.466 cv
260.797 308.566 261.631 308.327 262.44 308.09 cv
263.194 307.869 263.949 307.648 264.703 307.428 cv
264.821 307.393 264.941 307.357 265.04 307.285 cv
265.371 307.047 265.328 306.553 265.271 306.148 cv
265.09 304.854 265.122 303.53 265.368 302.246 cv
265.685 300.594 266.338 298.828 265.63 297.303 cv
265.198 296.373 264.332 295.73 263.479 295.162 cv
263.167 294.954 262.842 294.749 262.475 294.677 cv
262.096 294.6 261.431 294.771 260.801 295.172 cv
cp
1 1 1 rgb
f
261.264 293.661 mo
260.896 293.113 260.673 292.467 260.624 291.807 cv
260.604 291.541 260.616 291.259 260.754 291.03 cv
260.861 290.856 261.032 290.729 261.21 290.633 cv
262.08 290.162 263.253 290.346 263.937 291.059 cv
264.104 291.233 264.243 291.434 264.357 291.647 cv
264.437 291.799 264.504 291.957 264.544 292.124 cv
264.64 292.523 264.564 292.962 264.337 293.306 cv
264.237 293.459 264.11 293.593 263.999 293.741 cv
263.72 294.113 263.562 294.575 263.549 295.041 cv
263.544 295.248 263.379 295.415 263.174 295.44 cv
262.864 295.48 262.552 295.521 262.242 295.562 cv
262.04 295.588 261.811 295.605 261.655 295.478 cv
261.491 295.342 261.47 295.098 261.503 294.887 cv
261.535 294.678 261.605 294.468 261.572 294.258 cv
261.536 294.034 261.389 293.849 261.264 293.661 cv
cp
1 .733333 .552941 rgb
f
263.834 292.942 mo
263.663 292.817 263.585 291.91 263.732 291.851 cv
264.141 291.681 264.825 292.179 265.304 292.497 cv
265.384 292.551 265.475 292.648 265.421 292.729 cv
265.394 292.771 265.341 292.783 265.293 292.792 cv
264.794 292.888 264.248 293.24 263.834 292.942 cv
cp
1 .654902 .423529 rgb
f
260.987 289.76 mo
260.583 289.419 259.999 289.277 259.5 289.456 cv
259.002 289.636 258.631 290.156 258.683 290.684 cv
258.717 291.041 258.926 291.357 259.162 291.629 cv
259.283 291.769 259.417 291.904 259.59 291.975 cv
259.904 292.102 260.26 291.983 260.561 291.828 cv
260.978 291.614 261.388 291.278 261.455 290.815 cv
261.513 290.417 261.293 290.02 260.987 289.76 cv
cp
.192157 .184314 .247059 rgb
f
263.559 295.7 mo
264.064 295.476 264.646 295.697 265.153 295.918 cv
265.823 296.209 266.497 296.503 267.118 296.891 cv
267.726 297.27 268.281 297.736 268.924 298.05 cv
270.39 298.764 272.127 298.593 273.713 298.218 cv
274.08 298.13 274.457 298.033 274.83 298.093 cv
275.201 298.154 275.57 298.424 275.612 298.798 cv
275.668 299.305 275.152 299.672 274.69 299.887 cv
271.133 301.542 267.369 301.158 264.156 299.015 cv
263.593 298.638 262.717 298.148 262.649 297.401 cv
262.596 296.835 263.042 295.931 263.559 295.7 cv
cp
.611765 .784314 .866667 rgb
f
274.097 298.942 mo
274.083 298.877 274.07 298.813 274.056 298.748 cv
273.96 298.296 274.283 297.77 274.414 297.327 cv
274.466 297.146 274.587 296.929 274.774 296.958 cv
275.012 296.995 274.995 297.35 275.13 297.55 cv
275.244 297.717 275.472 297.766 275.671 297.74 cv
275.872 297.715 276.059 297.631 276.255 297.587 cv
276.529 297.526 276.813 297.545 277.092 297.577 cv
277.235 297.594 277.381 297.613 277.51 297.678 cv
277.926 297.882 277.984 298.561 277.608 298.831 cv
277.499 298.911 277.368 298.955 277.238 298.998 cv
276.764 299.157 276.291 299.317 275.815 299.476 cv
275.612 299.544 275.404 299.613 275.189 299.628 cv
274.669 299.662 274.206 299.451 274.097 298.942 cv
cp
1 .733333 .552941 rgb
f
260.195 328.467 mo
259.873 328.35 259.508 328.351 259.187 328.469 cv
258.962 328.552 258.974 328.897 258.934 329.133 cv
258.861 329.55 258.789 329.966 258.716 330.383 cv
258.692 330.522 258.671 330.68 258.752 330.796 cv
258.798 330.859 258.87 330.901 258.939 330.94 cv
259.949 331.514 260.959 332.087 261.97 332.659 cv
262.35 332.876 262.751 333.098 263.19 333.103 cv
263.461 332.696 263.573 332.148 263.351 331.713 cv
263.293 331.601 263.218 331.501 263.142 331.402 cv
262.64 330.741 262.137 330.08 261.635 329.419 cv
261.316 328.999 260.69 328.648 260.195 328.467 cv
cp
.290196 .466667 .388235 rgb
f
253.117 332.008 mo
253.307 331.904 253.43 331.711 253.445 331.495 cv
253.622 328.955 253.987 326.398 253.941 323.855 cv
253.936 323.549 253.923 323.226 253.754 322.972 cv
253.588 322.723 253.303 322.586 253.032 322.462 cv
251.87 321.926 250.71 321.663 249.578 321.065 cv
249.133 320.829 248.663 320.642 248.178 320.506 cv
248.029 320.607 248.036 320.624 247.893 320.681 cv
247.818 320.71 247.751 320.757 247.696 320.814 cv
247.173 321.355 246.639 321.911 246.334 322.6 cv
246.239 322.665 246.406 322.702 246.487 322.784 cv
247.744 324.062 249.662 324.383 251.382 324.815 cv
251.605 324.871 251.806 325.013 251.905 325.22 cv
252.109 325.642 251.76 325.957 251.524 326.272 cv
250.784 327.259 251.049 328.645 251.347 329.843 cv
251.508 330.492 251.596 331.221 251.729 331.898 cv
251.791 332.207 252.102 332.411 252.406 332.327 cv
252.648 332.26 252.882 332.137 253.117 332.008 cv
cp
1 .733333 .552941 rgb
f
240.958 301.274 mo
240.597 300.685 240.069 300.166 239.406 299.971 cv
238.743 299.773 237.94 299.968 237.552 300.539 cv
237.336 300.856 237.265 301.247 237.198 301.624 cv
237.042 302.515 236.89 303.46 237.235 304.295 cv
237.367 304.614 237.565 304.899 237.763 305.183 cv
237.95 305.451 238.137 305.721 238.325 305.99 cv
238.36 306.041 238.397 306.094 238.447 306.131 cv
238.534 306.195 238.648 306.208 238.756 306.213 cv
239.447 306.241 240.313 306.094 240.891 305.714 cv
240.557 305.265 240.111 304.728 239.901 304.208 cv
239.847 304.075 239.799 303.918 239.869 303.793 cv
239.923 303.696 240.035 303.647 240.139 303.61 cv
240.43 303.506 240.745 303.433 240.976 303.227 cv
241.242 302.992 241.351 302.615 241.322 302.263 cv
241.294 301.909 241.144 301.576 240.958 301.274 cv
cp
f
238.573 318.666 mo
238.651 318.76 238.811 318.768 238.897 318.684 cv
239.55 318.6 240.269 318.788 240.808 319.165 cv
241.296 319.508 241.766 319.996 241.768 320.593 cv
241.768 320.8 241.707 321.012 241.564 321.16 cv
241.383 321.35 241.106 321.406 240.845 321.435 cv
240.557 321.467 240.253 321.471 239.991 321.345 cv
239.683 321.197 239.483 320.895 239.299 320.605 cv
238.904 319.986 238.588 319.401 238.573 318.666 cv
cp
f
237.614 299.613 mo
238.284 299.438 239.541 299.297 240.299 299.729 cv
240.838 300.035 241.245 300.604 241.134 300.699 cv
240.718 301.055 238.941 301.26 238.799 301.484 cv
238.732 301.592 238.848 303.961 239.199 304.721 cv
237.996 305.384 236.708 305.891 235.377 306.227 cv
235.093 305.547 234.975 304.797 234.917 304.063 cv
234.749 301.95 235.864 300.073 237.614 299.613 cv
cp
.192157 .184314 .247059 rgb
f
258.005 309.554 mo
258.239 309.684 258.525 309.649 258.785 309.711 cv
259.11 309.788 259.388 310.021 259.553 310.312 cv
259.717 310.604 259.775 310.947 259.751 311.281 cv
259.747 311.343 259.74 311.407 259.711 311.463 cv
259.665 311.555 259.57 311.611 259.48 311.662 cv
259.316 311.755 259.148 311.85 258.962 311.887 cv
258.778 311.925 258.569 311.895 258.431 311.765 cv
258.258 311.602 258.24 311.329 258.089 311.146 cv
257.951 310.977 257.719 310.909 257.5 310.899 cv
257.281 310.889 257.062 310.924 256.842 310.916 cv
256.768 310.913 256.689 310.904 256.627 310.861 cv
256.52 310.787 256.497 310.637 256.502 310.506 cv
256.51 310.355 256.553 309.981 256.676 309.878 cv
257.011 309.601 257.605 309.332 258.005 309.554 cv
cp
1 .733333 .552941 rgb
f
255.191 311.762 mo
254.571 311.453 253.817 311.588 253.182 311.866 cv
252.334 312.237 251.34 312.986 251.226 313.906 cv
251.12 314.761 251.819 315.527 252.365 316.194 cv
253.78 317.924 255.711 319.227 257.845 319.892 cv
258.058 319.958 258.286 320.026 258.427 320.198 cv
258.535 320.327 258.576 320.497 258.61 320.661 cv
259.146 323.255 258.531 325.925 258.29 328.563 cv
258.257 328.92 258.263 329.348 258.56 329.549 cv
258.719 329.654 258.921 329.663 259.113 329.67 cv
259.944 329.696 260.775 329.722 261.605 329.748 cv
261.709 329.751 261.821 329.753 261.912 329.699 cv
262.039 329.621 262.083 329.459 262.112 329.313 cv
262.796 326 262.792 322.527 263.971 319.357 cv
264.057 319.126 264.151 318.891 264.161 318.643 cv
264.182 318.158 263.874 317.709 263.486 317.422 cv
263.097 317.133 262.63 316.974 262.18 316.796 cv
259.89 315.896 257.814 314.458 256.168 312.629 cv
255.875 312.304 255.584 311.956 255.191 311.762 cv
cp
.192157 .184314 .247059 rgb
f
247.704 326.742 mo
244.612 325.891 242.534 322.747 242.4 319.618 cv
242.393 319.426 242.679 316.202 242.398 316.279 cv
243.625 315.939 244.54 315.816 245.768 315.477 cv
247.595 317.425 250.146 319.026 252.397 320.463 cv
252.568 320.573 252.753 320.696 252.81 320.891 cv
252.88 321.136 252.722 321.381 252.571 321.585 cv
251.371 323.209 250.139 324.811 248.876 326.386 cv
248.761 326.528 248.64 326.676 248.475 326.753 cv
248.237 326.865 247.957 326.813 247.704 326.742 cv
cp
f
300.448 294.032 mo
298.935 293.938 297.421 293.845 295.907 293.751 cv
294.67 293.675 293.423 293.596 292.233 293.258 cv
291.519 293.056 290.834 292.763 290.153 292.47 cv
289.209 292.066 288.266 291.662 287.322 291.258 cv
286.983 291.111 286.633 290.959 286.387 290.685 cv
286.14 290.411 286.112 290.112 286.181 289.75 cv
286.284 289.213 286.446 288.597 286.945 288.376 cv
287.708 288.037 288.691 288.446 289.419 288.851 cv
290.59 289.5 291.4 290.699 292.617 291.258 cv
293.124 291.489 293.678 291.6 294.228 291.698 cv
296.026 292.019 297.84 292.249 299.662 292.385 cv
299.909 292.404 300.17 292.426 300.371 292.574 cv
300.786 292.881 300.575 293.532 300.448 294.032 cv
cp
.611765 .784314 .866667 rgb
f
277.364 297.006 mo
276.441 296.438 271.333 293.252 274.242 292.1 cv
274.733 291.904 275.27 291.871 275.778 292.018 cv
276.647 292.265 277.322 292.868 277.881 293.544 cv
278.467 294.252 280.482 297.194 281.073 297.587 cv
282.259 298.377 283.448 299.167 284.635 299.958 cv
284.775 300.05 284.784 300.249 284.655 300.355 cv
284.565 300.43 284.461 300.491 284.362 300.551 cv
284.06 300.73 283.749 300.914 283.402 300.966 cv
282.666 301.075 281.992 300.581 281.412 300.114 cv
279.184 298.322 277.546 297.118 277.364 297.006 cv
cp
f
251.464 298.37 mo
250.515 297.994 248.667 298.129 247.883 298.838 cv
247.14 299.51 246.972 300.631 246.854 301.544 cv
246.407 305.043 246.849 308.875 249.129 311.567 cv
249.581 312.102 250.107 312.597 250.369 313.245 cv
250.493 313.555 250.593 313.935 250.906 314.051 cv
251.128 314.134 251.374 314.043 251.593 313.954 cv
252.993 313.385 254.393 312.816 255.792 312.247 cv
255.521 311.663 255.249 311.078 254.977 310.493 cv
254.021 308.436 253.045 306.3 253.018 304.03 cv
253.004 302.981 253.195 301.931 253.077 300.89 cv
252.959 299.848 252.438 298.756 251.464 298.37 cv
cp
1 1 1 rgb
f
251.678 295.634 mo
251.993 294.989 251.923 294.174 251.503 293.592 cv
251.083 293.01 250.332 292.686 249.621 292.781 cv
249.363 292.816 249.115 292.9 248.876 293 cv
248.527 293.146 248.188 293.329 247.924 293.6 cv
247.449 294.088 247.235 294.86 247.445 295.513 cv
247.604 296.001 247.993 296.506 248.459 296.721 cv
248.859 296.904 249.067 297.413 249.073 297.537 cv
249.085 297.83 249.098 298.122 249.11 298.414 cv
249.113 298.478 249.117 298.547 249.156 298.599 cv
249.202 298.658 249.281 298.677 249.355 298.691 cv
249.718 298.762 250.089 298.789 250.458 298.776 cv
250.561 298.771 250.669 298.764 250.757 298.71 cv
250.838 298.66 250.894 298.576 250.929 298.487 cv
251.102 298.054 250.808 297.559 250.903 297.102 cv
250.941 296.918 251.04 296.753 251.137 296.593 cv
251.316 296.296 251.525 295.944 251.678 295.634 cv
cp
1 .733333 .552941 rgb
f
251.146 294.754 mo
251.154 294.559 251.216 294.388 251.39 294.371 cv
251.572 294.354 252.421 294.929 252.548 295.178 cv
252.591 295.264 252.188 295.332 252.091 295.336 cv
251.844 295.348 251.597 295.358 251.349 295.37 cv
251.322 295.372 251.293 295.372 251.27 295.358 cv
251.244 295.342 251.232 295.311 251.222 295.28 cv
251.183 295.166 251.138 294.948 251.146 294.754 cv
cp
1 .654902 .423529 rgb
f
241.101 305.09 mo
241.596 305.217 242.1 305.602 242.47 305.806 cv
243.188 306.201 243.871 306.63 244.339 307.325 cv
245.303 308.759 245.009 310.662 245.377 312.35 cv
245.637 313.54 246.614 315.313 246.534 316.228 cv
246.439 317.305 242.764 317.687 242.632 317.668 cv
242.282 317.616 242.172 316.417 242.113 316.067 cv
241.942 315.065 242.035 313.988 241.557 313.092 cv
241.341 312.69 241.024 312.354 240.695 312.039 cv
239.739 311.128 238.32 310.098 237.6 308.991 cv
236.88 307.885 238.125 305.715 238.212 305.746 cv
238.796 305.95 239.429 306.102 239.969 305.722 cv
240.188 305.567 240.386 305.372 240.438 305.121 cv
240.485 304.896 240.873 305.031 241.101 305.09 cv
cp
1 1 1 rgb
f
254.99 309.193 mo
254.724 308.924 254.457 308.656 254.173 308.405 cv
253.906 308.168 253.623 307.947 253.343 307.725 cv
252.286 306.884 251.252 305.996 250.412 304.938 cv
249.57 303.882 248.924 302.639 248.736 301.302 cv
248.701 301.057 248.682 300.807 248.721 300.563 cv
248.809 300.023 249.201 299.543 249.712 299.351 cv
250.151 299.186 250.59 299.226 250.978 299.499 cv
251.293 299.722 251.524 300.041 251.748 300.355 cv
252.521 301.44 253.007 302.287 253.518 303.724 cv
253.667 304.145 253.762 304.759 254.009 305.131 cv
254.178 305.384 254.422 305.574 254.654 305.771 cv
255.917 306.841 256.929 308.174 257.929 309.494 cv
257.975 309.556 258.023 309.623 258.022 309.699 cv
258.021 309.808 257.924 309.888 257.837 309.952 cv
257.562 310.152 257.289 310.355 257.011 310.553 cv
256.75 310.739 256.621 310.853 256.385 310.624 cv
255.91 310.165 255.458 309.665 254.99 309.193 cv
cp
.611765 .784314 .866667 rgb
f
239.101 310.524 mo
239.444 309.869 239.954 308.614 239.618 307.873 cv
239.256 307.073 238.111 306.765 237.424 307.263 cv
236.865 307.67 236.608 308.445 236.384 309.068 cv
235.843 310.564 235.407 312.101 235.065 313.653 cv
234.999 313.96 234.934 314.273 234.962 314.586 cv
235 315.004 235.197 315.39 235.402 315.756 cv
236.313 317.382 237.454 318.877 238.781 320.184 cv
239.121 319.926 239.46 319.668 239.799 319.41 cv
239.887 319.344 239.979 319.271 240.017 319.168 cv
240.076 318.999 239.969 318.82 239.869 318.672 cv
239.028 317.426 238.292 316.109 237.669 314.741 cv
237.504 314.377 237.342 313.989 237.374 313.59 cv
237.412 313.096 237.733 312.677 238.022 312.274 cv
238.422 311.717 238.783 311.132 239.101 310.524 cv
cp
f
186.463 283.357 mo
188.277 283.357 li
189.191 283.357 189.871 283.146 190.317 282.727 cv
190.762 282.306 190.985 281.765 190.985 281.102 cv
190.985 280.378 190.747 279.818 190.271 279.423 cv
189.795 279.028 189.115 278.831 188.231 278.831 cv
186.463 278.831 li
186.463 283.357 li
cp
186.463 277.955 mo
187.858 277.955 li
188.638 277.955 189.208 277.76 189.569 277.367 cv
189.93 276.977 190.11 276.494 190.11 275.918 cv
190.11 275.184 189.871 274.705 189.391 274.482 cv
188.912 274.259 188.406 274.147 187.874 274.147 cv
186.463 274.147 li
186.463 277.955 li
cp
185.396 273.272 mo
187.652 273.272 li
188.192 273.272 188.713 273.319 189.213 273.414 cv
189.714 273.508 190.171 273.747 190.586 274.133 cv
191 274.517 191.208 275.098 191.208 275.872 cv
191.208 276.27 191.131 276.63 190.979 276.951 cv
190.828 277.274 190.629 277.543 190.381 277.762 cv
190.134 277.979 189.862 278.147 189.563 278.265 cv
189.563 278.299 li
190.009 278.327 190.423 278.452 190.806 278.674 cv
191.188 278.896 191.497 279.215 191.731 279.632 cv
191.965 280.048 192.083 280.539 192.083 281.102 cv
192.083 281.874 191.9 282.493 191.534 282.96 cv
191.168 283.426 190.7 283.755 190.129 283.946 cv
189.558 284.138 188.941 284.232 188.279 284.232 cv
185.396 284.232 li
185.396 273.272 li
cp
.658824 .819608 .898039 rgb
f
195.435 280.162 mo
200.037 280.162 li
200.022 279.752 199.92 279.375 199.731 279.029 cv
199.543 278.685 199.287 278.412 198.961 278.21 cv
198.636 278.01 198.27 277.909 197.862 277.909 cv
197.194 277.909 196.646 278.124 196.218 278.554 cv
195.79 278.984 195.529 279.52 195.435 280.162 cv
cp
200.259 282.088 mo
200.978 282.447 li
200.29 283.826 199.247 284.516 197.848 284.516 cv
197.084 284.516 196.438 284.328 195.912 283.955 cv
195.384 283.583 194.993 283.111 194.739 282.544 cv
194.484 281.978 194.356 281.407 194.356 280.834 cv
194.356 280.23 194.483 279.646 194.737 279.083 cv
194.99 278.521 195.381 278.059 195.909 277.696 cv
196.438 277.337 197.084 277.156 197.848 277.156 cv
198.6 277.156 199.211 277.341 199.683 277.71 cv
200.154 278.08 200.488 278.521 200.684 279.029 cv
200.88 279.539 200.978 280.016 200.978 280.46 cv
200.978 280.914 li
195.358 280.914 li
195.358 281.427 195.46 281.9 195.664 282.335 cv
195.868 282.77 196.158 283.116 196.536 283.374 cv
196.913 283.634 197.35 283.762 197.847 283.762 cv
198.925 283.762 199.729 283.205 200.259 282.088 cv
cp
f
209.196 282.918 mo
209.196 283.903 li
208.511 284.312 207.812 284.516 207.099 284.516 cv
206.421 284.516 205.783 284.369 205.183 284.077 cv
204.583 283.786 204.103 283.36 203.743 282.803 cv
203.382 282.244 203.202 281.589 203.202 280.834 cv
203.202 280.175 203.356 279.563 203.667 279.001 cv
203.976 278.438 204.426 277.991 205.017 277.656 cv
205.607 277.323 206.296 277.156 207.083 277.156 cv
207.939 277.156 208.644 277.35 209.196 277.736 cv
209.196 278.663 li
208.485 278.16 207.802 277.909 207.147 277.909 cv
206.586 277.909 206.082 278.031 205.633 278.274 cv
205.185 278.518 204.834 278.861 204.582 279.306 cv
204.33 279.75 204.203 280.26 204.203 280.836 cv
204.203 281.373 204.321 281.865 204.556 282.313 cv
204.79 282.759 205.124 283.112 205.557 283.372 cv
205.99 283.633 206.488 283.762 207.052 283.762 cv
207.829 283.762 208.544 283.48 209.196 282.918 cv
cp
f
214.835 283.762 mo
215.36 283.762 215.827 283.631 216.238 283.369 cv
216.648 283.106 216.966 282.752 217.191 282.305 cv
217.417 281.858 217.53 281.369 217.53 280.836 cv
217.53 280.303 217.417 279.813 217.191 279.367 cv
216.966 278.92 216.648 278.564 216.238 278.303 cv
215.827 278.041 215.36 277.909 214.835 277.909 cv
214.317 277.909 213.853 278.04 213.441 278.301 cv
213.029 278.562 212.71 278.916 212.484 279.365 cv
212.257 279.813 212.144 280.303 212.144 280.836 cv
212.144 281.369 212.257 281.859 212.484 282.307 cv
212.71 282.755 213.029 283.11 213.441 283.37 cv
213.853 283.632 214.317 283.762 214.835 283.762 cv
cp
214.836 284.516 mo
214.174 284.516 213.561 284.366 212.997 284.07 cv
212.433 283.773 211.982 283.346 211.646 282.787 cv
211.31 282.229 211.142 281.578 211.142 280.834 cv
211.142 280.09 211.31 279.438 211.646 278.88 cv
211.982 278.322 212.433 277.896 212.997 277.6 cv
213.561 277.305 214.174 277.156 214.836 277.156 cv
215.5 277.156 216.112 277.305 216.676 277.6 cv
217.241 277.896 217.691 278.322 218.027 278.88 cv
218.363 279.438 218.532 280.09 218.532 280.834 cv
218.532 281.578 218.363 282.229 218.027 282.787 cv
217.691 283.346 217.241 283.773 216.676 284.07 cv
216.112 284.366 215.5 284.516 214.836 284.516 cv
cp
f
222.132 278.616 mo
222.69 277.644 223.457 277.156 224.433 277.156 cv
224.922 277.156 225.332 277.286 225.662 277.547 cv
225.992 277.808 226.208 278.153 226.31 278.582 cv
226.822 277.632 227.616 277.156 228.692 277.156 cv
229.527 277.156 230.084 277.425 230.361 277.963 cv
230.637 278.5 230.776 279.099 230.776 279.756 cv
230.776 284.232 li
229.835 284.232 li
229.835 279.759 li
229.835 278.525 229.387 277.909 228.489 277.909 cv
227.952 277.909 227.478 278.145 227.067 278.614 cv
226.657 279.084 226.452 279.746 226.452 280.603 cv
226.452 284.232 li
225.512 284.232 li
225.512 279.805 li
225.512 278.541 225.074 277.909 224.198 277.909 cv
223.838 277.909 223.5 278.031 223.18 278.273 cv
222.86 278.514 222.606 278.843 222.417 279.258 cv
222.227 279.674 222.132 280.122 222.132 280.603 cv
222.132 284.232 li
221.191 284.232 li
221.191 277.435 li
222.132 277.435 li
222.132 278.616 li
cp
f
234.517 280.162 mo
239.121 280.162 li
239.105 279.752 239.003 279.375 238.815 279.029 cv
238.626 278.685 238.369 278.412 238.044 278.21 cv
237.719 278.01 237.353 277.909 236.945 277.909 cv
236.277 277.909 235.729 278.124 235.301 278.554 cv
234.873 278.984 234.612 279.52 234.517 280.162 cv
cp
239.342 282.088 mo
240.061 282.447 li
239.373 283.826 238.33 284.516 236.932 284.516 cv
236.167 284.516 235.522 284.328 234.995 283.955 cv
234.467 283.583 234.076 283.111 233.821 282.544 cv
233.567 281.978 233.439 281.407 233.439 280.834 cv
233.439 280.23 233.566 279.646 233.819 279.083 cv
234.073 278.521 234.464 278.059 234.993 277.696 cv
235.521 277.337 236.167 277.156 236.932 277.156 cv
237.683 277.156 238.294 277.341 238.766 277.71 cv
239.236 278.08 239.57 278.521 239.766 279.029 cv
239.962 279.539 240.061 280.016 240.061 280.46 cv
240.061 280.914 li
234.441 280.914 li
234.441 281.427 234.543 281.9 234.747 282.335 cv
234.951 282.77 235.241 283.116 235.618 283.374 cv
235.996 283.634 236.433 283.762 236.93 283.762 cv
238.008 283.762 238.812 283.205 239.342 282.088 cv
cp
f
188.281 300.291 mo
188.719 300.291 189.131 300.18 189.515 299.959 cv
189.898 299.737 190.207 299.405 190.438 298.964 cv
190.671 298.522 190.787 297.989 190.787 297.365 cv
190.787 296.989 190.734 296.632 190.63 296.287 cv
190.525 295.943 190.368 295.63 190.159 295.35 cv
189.95 295.068 189.69 294.846 189.378 294.683 cv
189.068 294.52 188.711 294.438 188.312 294.438 cv
187.786 294.438 187.329 294.572 186.94 294.843 cv
186.551 295.114 186.254 295.473 186.05 295.922 cv
185.846 296.373 185.744 296.852 185.744 297.365 cv
185.744 297.933 185.855 298.44 186.077 298.888 cv
186.299 299.334 186.604 299.68 186.992 299.924 cv
187.379 300.169 187.809 300.291 188.281 300.291 cv
cp
190.787 295.177 mo
190.787 293.964 li
191.662 293.964 li
191.662 300.762 li
190.787 300.762 li
190.787 299.604 li
190.527 300.062 190.179 300.417 189.745 300.668 cv
189.31 300.918 188.823 301.044 188.282 301.044 cv
187.63 301.044 187.034 300.893 186.494 300.589 cv
185.953 300.287 185.526 299.854 185.213 299.293 cv
184.899 298.732 184.743 298.089 184.743 297.363 cv
184.743 296.881 184.819 296.42 184.974 295.981 cv
185.128 295.541 185.358 295.147 185.666 294.799 cv
185.973 294.451 186.348 294.179 186.792 293.98 cv
187.235 293.783 187.737 293.686 188.298 293.686 cv
189.427 293.686 190.257 294.183 190.787 295.177 cv
cp
f
201.042 300.762 mo
201.042 293.964 li
201.982 293.964 li
201.982 295.386 li
202.296 294.791 202.608 294.38 202.919 294.15 cv
203.23 293.921 203.58 293.808 203.97 293.808 cv
204.241 293.808 204.517 293.859 204.8 293.964 cv
204.517 294.84 li
204.311 294.725 204.086 294.667 203.844 294.667 cv
203.528 294.667 203.226 294.801 202.938 295.067 cv
202.65 295.334 202.418 295.669 202.245 296.073 cv
202.07 296.478 201.982 296.869 201.982 297.25 cv
201.982 300.762 li
201.042 300.762 li
cp
f
207.556 296.689 mo
212.159 296.689 li
212.144 296.281 212.042 295.903 211.853 295.559 cv
211.665 295.214 211.408 294.94 211.082 294.739 cv
210.758 294.539 210.391 294.438 209.983 294.438 cv
209.315 294.438 208.768 294.652 208.339 295.083 cv
207.911 295.514 207.65 296.049 207.556 296.689 cv
cp
212.38 298.617 mo
213.099 298.977 li
212.412 300.355 211.368 301.044 209.97 301.044 cv
209.206 301.044 208.56 300.857 208.033 300.484 cv
207.506 300.111 207.115 299.641 206.859 299.073 cv
206.605 298.507 206.478 297.937 206.478 297.363 cv
206.478 296.759 206.604 296.175 206.858 295.612 cv
207.111 295.049 207.502 294.586 208.031 294.226 cv
208.56 293.865 209.206 293.686 209.97 293.686 cv
210.721 293.686 211.333 293.869 211.804 294.239 cv
212.275 294.609 212.609 295.049 212.805 295.559 cv
213.001 296.068 213.099 296.545 213.099 296.988 cv
213.099 297.442 li
207.479 297.442 li
207.479 297.955 207.582 298.429 207.785 298.863 cv
207.989 299.298 208.28 299.646 208.657 299.903 cv
209.034 300.162 209.471 300.291 209.968 300.291 cv
211.046 300.291 211.85 299.732 212.38 298.617 cv
cp
f
218.861 300.291 mo
219.3 300.291 219.711 300.18 220.095 299.959 cv
220.479 299.737 220.787 299.405 221.019 298.964 cv
221.251 298.522 221.367 297.989 221.367 297.365 cv
221.367 296.989 221.315 296.632 221.21 296.287 cv
221.106 295.943 220.949 295.63 220.74 295.35 cv
220.531 295.068 220.271 294.846 219.959 294.683 cv
219.648 294.52 219.292 294.438 218.892 294.438 cv
218.367 294.438 217.91 294.572 217.521 294.843 cv
217.131 295.114 216.835 295.473 216.631 295.922 cv
216.427 296.373 216.325 296.852 216.325 297.365 cv
216.325 297.933 216.436 298.44 216.658 298.888 cv
216.879 299.334 217.184 299.68 217.572 299.924 cv
217.96 300.169 218.39 300.291 218.861 300.291 cv
cp
221.367 295.177 mo
221.367 293.964 li
222.243 293.964 li
222.243 300.762 li
221.367 300.762 li
221.367 299.604 li
221.107 300.062 220.76 300.417 220.326 300.668 cv
219.891 300.918 219.404 301.044 218.863 301.044 cv
218.211 301.044 217.614 300.893 217.074 300.589 cv
216.534 300.287 216.107 299.854 215.793 299.293 cv
215.48 298.732 215.324 298.089 215.324 297.363 cv
215.324 296.881 215.4 296.42 215.554 295.981 cv
215.708 295.541 215.939 295.147 216.247 294.799 cv
216.553 294.451 216.929 294.179 217.373 293.98 cv
217.816 293.783 218.318 293.686 218.878 293.686 cv
220.008 293.686 220.837 294.183 221.367 295.177 cv
cp
f
225.342 300.762 mo
225.342 289.25 li
226.283 289.25 li
226.283 300.762 li
225.342 300.762 li
cp
f
185.396 317.29 mo
185.396 311.246 li
184.303 311.246 li
184.303 310.493 li
185.396 310.493 li
185.396 307.863 li
186.337 307.863 li
186.337 310.493 li
187.652 310.493 li
187.652 311.246 li
186.337 311.246 li
186.337 317.29 li
185.396 317.29 li
cp
f
190.518 313.219 mo
195.121 313.219 li
195.105 312.81 195.003 312.433 194.815 312.088 cv
194.626 311.742 194.37 311.47 194.045 311.269 cv
193.72 311.068 193.354 310.967 192.946 310.967 cv
192.278 310.967 191.73 311.182 191.302 311.612 cv
190.874 312.042 190.612 312.577 190.518 313.219 cv
cp
195.342 315.146 mo
196.062 315.505 li
195.374 316.884 194.331 317.573 192.932 317.573 cv
192.168 317.573 191.522 317.386 190.995 317.014 cv
190.468 316.64 190.077 316.17 189.822 315.603 cv
189.567 315.035 189.44 314.465 189.44 313.893 cv
189.44 313.288 189.566 312.704 189.82 312.142 cv
190.074 311.577 190.465 311.115 190.993 310.755 cv
191.522 310.394 192.168 310.214 192.932 310.214 cv
193.684 310.214 194.295 310.398 194.766 310.769 cv
195.237 311.137 195.571 311.577 195.767 312.088 cv
195.963 312.597 196.062 313.074 196.062 313.517 cv
196.062 313.972 li
190.441 313.972 li
190.441 314.483 190.543 314.958 190.748 315.392 cv
190.951 315.827 191.242 316.174 191.619 316.433 cv
191.996 316.691 192.434 316.82 192.931 316.82 cv
194.009 316.82 194.813 316.262 195.342 315.146 cv
cp
f
201.824 316.82 mo
202.262 316.82 202.674 316.709 203.058 316.487 cv
203.442 316.267 203.75 315.934 203.981 315.492 cv
204.214 315.05 204.33 314.518 204.33 313.894 cv
204.33 313.519 204.278 313.16 204.173 312.816 cv
204.068 312.472 203.911 312.159 203.702 311.879 cv
203.493 311.598 203.233 311.375 202.921 311.212 cv
202.611 311.048 202.254 310.967 201.854 310.967 cv
201.329 310.967 200.872 311.102 200.483 311.372 cv
200.094 311.642 199.797 312.002 199.593 312.451 cv
199.389 312.901 199.288 313.381 199.288 313.894 cv
199.288 314.462 199.398 314.969 199.62 315.415 cv
199.842 315.862 200.146 316.208 200.535 316.453 cv
200.922 316.698 201.352 316.82 201.824 316.82 cv
cp
204.33 311.705 mo
204.33 310.493 li
205.205 310.493 li
205.205 317.29 li
204.33 317.29 li
204.33 316.133 li
204.07 316.591 203.722 316.946 203.288 317.196 cv
202.853 317.447 202.366 317.573 201.826 317.573 cv
201.173 317.573 200.577 317.422 200.037 317.118 cv
199.496 316.814 199.069 316.383 198.756 315.822 cv
198.442 315.262 198.286 314.618 198.286 313.893 cv
198.286 313.41 198.363 312.948 198.517 312.509 cv
198.671 312.069 198.901 311.677 199.209 311.327 cv
199.516 310.98 199.891 310.708 200.334 310.51 cv
200.778 310.313 201.28 310.214 201.841 310.214 cv
202.97 310.214 203.8 310.711 204.33 311.705 cv
cp
f
209.246 311.675 mo
209.804 310.701 210.571 310.214 211.547 310.214 cv
212.036 310.214 212.445 310.344 212.775 310.605 cv
213.105 310.865 213.322 311.211 213.423 311.64 cv
213.936 310.689 214.73 310.214 215.806 310.214 cv
216.641 310.214 217.198 310.482 217.475 311.021 cv
217.751 311.559 217.89 312.155 217.89 312.813 cv
217.89 317.29 li
216.949 317.29 li
216.949 312.816 li
216.949 311.584 216.5 310.967 215.603 310.967 cv
215.065 310.967 214.591 311.202 214.181 311.672 cv
213.771 312.142 213.565 312.805 213.565 313.661 cv
213.565 317.29 li
212.625 317.29 li
212.625 312.861 li
212.625 311.599 212.187 310.967 211.312 310.967 cv
210.952 310.967 210.613 311.088 210.294 311.33 cv
209.974 311.571 209.72 311.9 209.53 312.316 cv
209.34 312.731 209.246 313.179 209.246 313.661 cv
209.246 317.29 li
208.305 317.29 li
208.305 310.493 li
209.246 310.493 li
209.246 311.675 li
cp
f
221.176 315.101 mo
221.176 306.33 li
222.117 306.33 li
222.117 315.101 li
221.176 315.101 li
cp
220.928 316.744 mo
220.928 316.535 221 316.362 221.144 316.226 cv
221.288 316.09 221.455 316.021 221.646 316.021 cv
221.835 316.021 222.002 316.09 222.149 316.226 cv
222.296 316.362 222.369 316.535 222.369 316.744 cv
222.369 316.95 222.295 317.122 222.147 317.258 cv
222 317.394 221.833 317.463 221.646 317.463 cv
221.46 317.463 221.294 317.394 221.148 317.258 cv
221 317.122 220.928 316.95 220.928 316.744 cv
cp
f
508.447 355.886 mo
346.724 355.886 li
346.724 261.775 li
508.447 261.775 li
508.447 355.886 li
cp
.258824 .545098 .666667 rgb
f
508.447 355.886 mo
346.724 355.886 li
346.724 261.775 li
508.447 261.775 li
508.447 355.886 li
cp
f
484.826 334.842 mo
484.519 334.871 484.214 334.923 483.915 334.995 cv
483.442 336.061 482.918 336.922 482.568 338.032 cv
482.417 338.512 482.277 339.036 482.452 339.506 cv
482.568 339.818 482.809 340.065 483.044 340.303 cv
483.658 340.923 484.39 341.446 484.887 342.164 cv
486.304 344.206 487.103 345.401 487.693 345.873 cv
487.907 346.045 487.728 345.58 488.001 345.57 cv
488.275 345.559 488.624 345.703 488.685 345.438 cv
488.75 345.166 488.518 344.577 488.365 344.344 cv
487.207 342.592 487.104 342.107 485.947 340.355 cv
485.838 340.191 484.674 338.756 484.615 338.569 cv
484.547 338.36 484.545 338.136 484.563 337.917 cv
484.651 336.787 485.201 335.754 485.751 334.764 cv
485.386 334.616 485.218 334.805 484.826 334.842 cv
cp
1 .733333 .552941 rgb
f
494.879 334.383 mo
494.776 334.348 494.663 334.352 494.553 334.357 cv
494.131 334.382 493.711 334.439 493.299 334.533 cv
493.178 335.117 493.126 335.716 493.142 336.313 cv
493.149 336.597 493.176 336.891 493.329 337.127 cv
493.448 337.315 493.634 337.447 493.814 337.575 cv
496.065 339.178 498.245 340.878 500.345 342.671 cv
500.439 342.751 500.541 342.834 500.664 342.835 cv
500.763 342.836 500.852 342.78 500.936 342.727 cv
501.236 342.537 501.569 342.29 501.582 341.935 cv
501.596 341.469 501.018 341.064 500.714 340.775 cv
500.309 340.388 499.917 340.019 499.548 339.59 cv
498.966 338.913 498.297 338.313 497.59 337.766 cv
497.057 337.353 496.206 336.925 495.829 336.36 cv
495.486 335.848 495.572 335.155 495.207 334.646 cv
495.125 334.53 495.015 334.426 494.879 334.383 cv
cp
f
492.313 328.729 mo
492.027 328.3 491.741 327.869 491.409 327.475 cv
490.895 326.865 490.282 326.348 489.67 325.835 cv
489.099 325.354 488.498 324.921 487.807 324.636 cv
486.218 325.031 484.63 325.427 483.042 325.823 cv
482.772 325.89 482.487 325.965 482.299 326.17 cv
482.053 326.438 482.17 328.531 482.078 329.277 cv
481.744 331.968 481.764 334.294 482.135 336.979 cv
482.19 337.384 482.101 338.165 482.492 338.052 cv
486.763 336.823 491.613 335.862 496.04 335.462 cv
496.122 335.454 496.184 335.378 496.166 335.298 cv
495.982 334.433 493.646 330.729 492.313 328.729 cv
cp
.192157 .184314 .247059 rgb
f
487.025 344.976 mo
487.559 344.777 488.567 344.603 488.75 344.914 cv
488.968 345.285 489.23 345.721 489.117 346.142 cv
488.967 346.292 488.749 346.347 488.542 346.39 cv
487.567 346.601 486.577 346.74 485.583 346.809 cv
485.377 346.822 485.123 346.807 485.036 346.619 cv
484.95 346.438 485.098 346.228 485.267 346.117 cv
485.507 345.961 485.797 345.9 486.068 345.807 cv
486.339 345.711 486.617 345.561 486.738 345.301 cv
486.775 345.22 486.797 345.131 486.86 345.068 cv
486.905 345.023 486.965 344.998 487.025 344.976 cv
cp
f
501.128 344.521 mo
500.955 344.777 500.776 345.04 500.527 345.224 cv
500.277 345.409 499.94 345.505 499.652 345.391 cv
499.618 345.034 499.817 344.703 499.947 344.37 cv
500.06 344.075 500.076 344.046 500.081 343.729 cv
500.085 343.442 500.121 343.016 500.001 342.538 cv
499.939 342.291 500.853 341.656 501.214 341.422 cv
501.315 341.356 501.446 341.363 501.54 341.439 cv
501.872 341.711 502.281 341.948 502.423 342.341 cv
502.582 342.777 501.937 343.321 501.673 343.713 cv
501.492 343.983 501.31 344.251 501.128 344.521 cv
cp
f
468.497 320.307 mo
467.957 319.891 467.958 318.763 468.015 318.143 cv
468.098 317.207 468.185 316.192 468.609 315.339 cv
468.817 314.92 470.899 315.619 471.375 314.587 cv
471.571 314.165 471.354 310.507 471.015 310.187 cv
470.346 309.55 469.013 310.191 468.425 309.479 cv
468.248 309.263 468.194 308.972 468.148 308.695 cv
468.036 308.028 467.922 307.362 467.81 306.697 cv
467.765 306.428 467.728 306.124 467.892 305.906 cv
468.124 305.602 468.774 305.584 468.822 305.147 cv
468.86 304.778 468.493 304.152 468.381 303.805 cv
468.249 303.395 468.157 302.971 467.997 302.568 cv
467.753 301.96 467.212 300.513 466.439 300.44 cv
466.313 300.43 466.197 300.506 466.093 300.58 cv
465.713 300.849 465.333 301.117 464.954 301.387 cv
464.84 301.467 464.722 301.549 464.585 301.569 cv
464.335 301.607 464.106 301.434 463.914 301.271 cv
463.554 300.969 463.195 300.668 462.835 300.366 cv
462.609 300.175 462.377 299.979 462.224 299.724 cv
462.071 299.469 462.009 299.141 462.139 298.874 cv
462.311 298.522 462.707 298.251 462.504 297.819 cv
462.339 297.466 461.677 297.069 461.377 296.813 cv
460.391 295.977 459.208 295.9 457.958 295.876 cv
457.785 295.873 457.594 295.877 457.458 295.987 cv
457.337 296.085 457.289 296.245 457.243 296.394 cv
457.056 296.995 456.709 297.668 456.085 297.75 cv
455.85 297.781 455.616 297.719 455.386 297.655 cv
454.82 297.503 454.244 297.344 453.746 297.03 cv
453.25 296.718 452.833 296.222 452.764 295.638 cv
452.701 295.111 452.888 294.476 452.496 294.117 cv
452.311 293.947 452.046 293.902 451.797 293.873 cv
450.837 293.761 449.861 293.781 448.906 293.933 cv
448.52 293.995 448.095 294.107 447.892 294.441 cv
447.556 294.997 448.02 295.868 447.539 296.303 cv
447.403 296.422 447.225 296.475 447.051 296.524 cv
446.338 296.729 445.625 296.933 444.911 297.136 cv
444.737 297.186 444.556 297.235 444.376 297.207 cv
444.197 297.179 444.025 297.143 443.961 296.974 cv
443.769 296.46 443.518 295.97 443.212 295.515 cv
443.138 295.403 443.051 295.288 442.922 295.25 cv
442.801 295.215 442.672 295.261 442.554 295.306 cv
441.499 295.719 440.504 296.283 439.61 296.979 cv
439.483 297.078 439.349 297.191 439.31 297.348 cv
439.253 297.581 439.422 297.804 439.579 297.986 cv
439.825 298.274 440.065 298.568 440.3 298.866 cv
440.355 298.938 440.415 299.02 440.408 299.11 cv
440.4 299.213 440.314 299.288 440.233 299.352 cv
439.69 299.782 439.148 300.211 438.606 300.641 cv
438.531 300.701 438.447 300.764 438.35 300.764 cv
438.25 300.763 438.164 300.694 438.087 300.628 cv
437.81 300.39 437.531 300.151 437.253 299.912 cv
436.969 299.67 436.627 299.41 436.262 299.486 cv
435.948 299.554 435.742 299.843 435.569 300.111 cv
435.067 300.891 434.576 301.675 434.097 302.469 cv
433.898 302.798 433.484 303.315 433.59 303.731 cv
433.745 304.339 434.683 304.232 435.143 304.39 cv
435.52 304.519 435.874 304.885 435.773 305.27 cv
435.552 306.121 435.371 307.052 435.039 307.866 cv
434.823 308.395 434.532 308.934 434.033 309.21 cv
433.418 309.55 432.655 309.408 431.976 309.587 cv
431.851 309.619 431.723 309.667 431.636 309.763 cv
431.543 309.863 431.511 310.004 431.484 310.139 cv
431.253 311.268 431.205 312.434 431.342 313.577 cv
431.38 313.89 431.455 314.235 431.717 314.408 cv
431.994 314.592 432.359 314.504 432.685 314.445 cv
433.022 314.383 433.366 314.357 433.708 314.37 cv
433.875 314.376 434.05 314.396 434.183 314.496 cv
434.327 314.606 434.389 314.791 434.443 314.966 cv
434.629 315.567 434.816 316.171 435.004 316.774 cv
435.181 317.344 435.34 318.023 434.966 318.49 cv
434.664 318.872 434.126 318.947 433.65 319.051 cv
433.174 319.152 432.638 319.382 432.527 319.856 cv
432.473 320.088 432.537 320.33 432.625 320.551 cv
432.91 321.26 433.443 321.836 433.973 322.386 cv
434.472 322.901 434.978 323.41 435.493 323.911 cv
435.697 324.11 437.069 322.528 437.547 322.528 cv
438.342 322.528 440.024 324.502 439.771 324.989 cv
439.643 325.236 438.68 326.43 438.674 326.708 cv
438.667 327.206 439.124 327.573 439.548 327.834 cv
440.241 328.258 440.941 328.721 441.726 328.951 cv
442.077 329.054 442.562 329.17 442.914 329.012 cv
443.411 328.789 443.2 328.354 443.402 327.917 cv
443.579 327.534 444.075 327.435 444.496 327.436 cv
445.21 327.438 445.858 327.654 446.541 327.811 cv
447.126 327.944 447.759 328.105 448.125 328.635 cv
448.375 328.995 448.031 329.347 448.122 329.775 cv
448.176 330.039 448.381 330.253 448.623 330.37 cv
448.863 330.488 449.137 330.521 449.404 330.524 cv
450.163 330.532 450.912 330.312 451.668 330.325 cv
451.978 330.331 452.29 330.376 452.591 330.317 cv
452.894 330.26 453.199 330.07 453.278 329.772 cv
453.349 329.496 453.215 329.212 453.128 328.939 cv
453.041 328.667 453.022 328.317 453.251 328.146 cv
453.874 327.679 454.624 327.598 455.4 327.554 cv
456.221 327.506 457.182 327.52 457.681 328.174 cv
457.912 328.478 458.016 328.896 458.344 329.092 cv
458.656 329.278 459.052 329.19 459.402 329.098 cv
459.963 328.95 460.526 328.803 461.088 328.654 cv
461.395 328.572 461.71 328.488 461.963 328.296 cv
462.216 328.104 462.395 327.778 462.318 327.472 cv
462.238 327.146 461.893 326.868 461.989 326.548 cv
462.03 326.412 462.144 326.312 462.255 326.224 cv
462.91 325.711 463.64 325.306 464.378 324.929 cv
465.225 324.497 465.588 324.578 466.361 325.15 cv
466.756 325.443 467.313 325.693 467.713 325.407 cv
467.859 325.302 467.954 325.143 468.043 324.987 cv
468.495 324.216 468.946 323.445 469.396 322.675 cv
469.566 322.382 469.74 322.082 469.804 321.75 cv
469.868 321.418 469.8 321.04 469.549 320.813 cv
469.26 320.549 468.807 320.546 468.497 320.307 cv
cp
f
451.693 309.866 mo
450.648 309.537 449.74 309.774 448.978 310.525 cv
448.293 311.2 448.071 312.074 448.447 312.953 cv
448.701 313.543 449.215 314.004 449.812 314.242 cv
450.62 314.563 451.586 314.474 452.297 313.976 cv
453.009 313.478 453.429 312.577 453.313 311.717 cv
453.187 310.769 452.515 310.125 451.693 309.866 cv
cp
1 1 1 rgb
f
458.601 274.485 mo
458.931 274.065 459.413 273.791 459.901 273.568 cv
460.258 273.407 460.632 273.266 461.024 273.248 cv
462.013 273.201 462.894 273.971 463.292 274.876 cv
463.693 275.781 463.713 276.801 463.729 277.791 cv
463.745 278.807 463.761 279.821 463.777 280.836 cv
463.78 281.129 463.779 281.44 463.624 281.687 cv
463.432 281.986 463.061 282.112 462.714 282.187 cv
461.365 282.472 459.917 282.262 458.703 281.607 cv
458.582 281.542 458.46 281.47 458.375 281.36 cv
458.284 281.239 458.249 281.085 458.217 280.936 cv
457.943 279.583 457.934 278.192 457.989 276.813 cv
458.021 275.997 458.096 275.127 458.601 274.485 cv
cp
.662745 .792157 .866667 rgb
f
456.741 293.824 mo
457.161 293.65 457.333 293.091 457.721 292.823 cv
458.089 292.566 458.572 292.512 459.017 292.58 cv
459.461 292.647 459.881 292.827 460.296 293.004 cv
460.411 293.053 460.533 293.109 460.591 293.219 cv
460.663 293.349 460.62 293.507 460.587 293.651 cv
460.539 293.866 460.518 294.088 460.524 294.309 cv
460.534 294.675 460.871 294.979 461.238 294.976 cv
461.895 294.972 462.553 294.9 463.197 294.767 cv
463.377 294.729 463.565 294.682 463.702 294.558 cv
463.996 294.294 463.929 293.83 463.889 293.439 cv
463.848 293.048 463.858 292.571 464.231 292.447 cv
464.72 292.287 465.213 292.142 465.71 292.013 cv
465.828 291.981 465.947 291.953 466.066 291.968 cv
466.318 292.003 466.497 292.224 466.667 292.415 cv
466.835 292.606 467.072 292.796 467.32 292.737 cv
467.434 292.71 467.528 292.634 467.618 292.558 cv
468.267 292.003 468.829 291.345 469.276 290.617 cv
469.348 290.499 469.419 290.375 469.431 290.238 cv
469.455 289.974 469.254 289.739 469.033 289.596 cv
468.719 289.392 468.336 289.294 468.131 288.933 cv
468.015 288.727 468.001 288.364 468.089 288.144 cv
468.209 287.843 468.296 287.528 468.346 287.21 cv
468.37 287.061 468.386 286.905 468.467 286.779 cv
468.72 286.385 469.311 286.637 469.685 286.146 cv
469.857 285.922 469.83 285.608 469.789 285.327 cv
469.69 284.655 469.548 283.143 469.25 283.085 cv
468.954 283.029 468.646 283.061 468.352 283.124 cv
468.166 283.164 467.971 283.225 467.789 283.17 cv
467.606 283.116 466.915 281.834 467.045 281.395 cv
467.12 281.142 467.302 280.938 467.465 280.731 cv
467.667 280.476 467.846 280.2 468 279.912 cv
468.125 279.679 468.018 279.39 467.778 279.28 cv
467.181 279.007 466.563 278.779 465.931 278.601 cv
465.614 278.511 465.285 278.666 465.141 278.963 cv
464.99 279.275 464.802 279.565 464.515 279.778 cv
464.321 279.922 464.086 280.015 463.844 280.015 cv
463.102 280.011 462.777 279.243 462.801 278.588 cv
462.82 278.086 462.926 277.459 462.501 277.192 cv
462.342 277.095 462.148 277.081 461.962 277.077 cv
461.463 277.067 460.963 277.115 460.476 277.22 cv
460.319 277.254 460.154 277.299 460.05 277.42 cv
459.746 277.772 460.214 278.294 460.174 278.759 cv
460.146 279.085 459.853 279.339 459.539 279.429 cv
459.223 279.517 458.888 279.476 458.564 279.433 cv
458.426 279.416 458.278 279.394 458.175 279.301 cv
458.098 279.231 458.056 279.134 458.017 279.039 cv
457.852 278.643 457.687 278.247 457.522 277.851 cv
457.488 277.766 457.446 277.675 457.365 277.634 cv
457.296 277.6 457.215 277.609 457.14 277.621 cv
456.278 277.758 455.455 278.13 454.783 278.687 cv
454.543 278.714 454.531 278.986 454.617 279.211 cv
454.702 279.436 454.903 279.593 455.074 279.761 cv
455.245 279.931 455.403 280.154 455.363 280.392 cv
455.332 280.571 455.196 280.712 455.065 280.841 cv
454.658 281.238 454.127 281.671 453.582 281.505 cv
453.359 281.436 453.167 281.27 452.937 281.236 cv
452.523 281.177 452.184 281.543 451.945 281.885 cv
451.464 282.566 451.039 283.333 451.007 284.167 cv
451.564 284.563 452.253 284.729 452.825 285.104 cv
453.396 285.476 453.349 285.767 453.217 286.595 cv
453.116 287.243 452.374 287.044 451.776 287.313 cv
451.694 287.349 451.612 287.393 451.562 287.467 cv
451.502 287.556 451.502 287.672 451.507 287.778 cv
451.546 288.478 451.58 289.029 451.91 289.645 cv
452.17 290.127 452.467 290.905 453 290.778 cv
453.281 290.71 453.814 290.255 454.089 290.167 cv
454.365 290.08 454.926 290.861 454.835 291.136 cv
454.787 291.286 454.62 291.355 454.499 291.458 cv
454.179 291.725 454.185 292.241 454.398 292.598 cv
454.61 292.955 454.973 293.189 455.323 293.412 cv
455.658 293.623 456.149 293.937 456.583 293.868 cv
456.639 293.86 456.691 293.845 456.741 293.824 cv
cp
1 .639216 .113725 rgb
f
461.863 284.033 mo
461.65 283.916 461.431 283.803 461.193 283.76 cv
460.541 283.639 459.879 283.708 459.306 284.053 cv
459.012 284.229 458.728 284.436 458.535 284.717 cv
458.247 285.137 458.196 285.675 458.201 286.185 cv
458.206 286.539 458.237 286.906 458.401 287.221 cv
458.887 288.148 460.339 288.486 461.272 288.202 cv
461.932 288 462.558 287.62 462.941 287.046 cv
463.323 286.47 463.423 285.686 463.088 285.081 cv
462.825 284.604 462.34 284.296 461.863 284.033 cv
cp
1 1 1 rgb
f
408.621 336.389 mo
408.376 336.203 408.084 336.032 407.78 336.071 cv
407.663 336.234 407.451 336.291 407.261 336.357 cv
406.793 336.52 406.342 336.854 406.23 337.335 cv
406.142 337.711 406.279 338.109 406.505 338.422 cv
406.734 338.732 407.043 338.972 407.349 339.205 cv
408.599 340.162 410.907 342.341 411.1 342.076 cv
411.413 341.648 411.13 341.027 410.973 340.521 cv
410.62 339.376 410.25 338.202 409.509 337.262 cv
409.252 336.935 408.953 336.64 408.621 336.389 cv
cp
.192157 .184314 .247059 rgb
f
437.962 343.449 mo
437.695 343.132 437.303 342.951 436.913 342.813 cv
436.353 342.614 435.77 342.488 435.179 342.437 cv
435.001 342.422 434.796 342.423 434.679 342.559 cv
434.6 342.65 434.585 342.779 434.573 342.9 cv
434.508 343.494 434.398 344.081 434.242 344.656 cv
434.124 345.088 434.031 345.655 434.413 345.887 cv
434.536 345.961 434.682 345.979 434.825 345.996 cv
436.784 346.23 438.728 346.598 440.638 347.095 cv
440.938 347.174 441.254 347.256 441.551 347.168 cv
441.849 347.081 442.098 346.754 441.984 346.466 cv
441.915 346.291 441.739 346.185 441.573 346.099 cv
440.428 345.502 439.065 345.118 438.351 344.043 cv
438.22 343.847 438.115 343.631 437.962 343.449 cv
cp
f
438.667 343.744 mo
439.058 340.834 440.011 338.027 440.567 335.144 cv
440.669 334.604 440.76 334.054 440.683 333.511 cv
440.599 332.917 440.323 332.368 440.031 331.844 cv
438.309 328.731 436.003 325.987 433.714 323.265 cv
433.362 322.846 433.006 322.424 432.574 322.09 cv
432.105 321.729 431.558 321.481 431.001 321.286 cv
429.352 320.708 427.552 320.566 425.831 320.873 cv
424.958 321.028 424.473 321.21 423.847 321.865 cv
423.32 322.419 422.887 323.057 422.484 323.703 cv
421.785 324.824 421.138 326.007 420.161 326.895 cv
419.624 327.382 418.971 327.804 418.704 328.477 cv
418.468 329.063 418.551 329.793 418.126 330.262 cv
417.773 330.653 417.194 330.717 416.674 330.811 cv
414 331.298 411.839 333.178 409.563 334.664 cv
408.763 335.187 407.843 335.524 407.277 336.293 cv
407.201 336.395 407.288 336.533 407.371 336.627 cv
407.899 337.229 408.458 337.806 409.044 338.351 cv
409.316 338.603 409.599 338.852 409.935 339.005 cv
410.05 339.059 410.175 339.1 410.303 339.094 cv
410.81 339.067 411.003 338.365 411.476 338.181 cv
414.281 337.081 416.429 334.688 419.295 333.766 cv
420.23 333.465 422.267 333.131 422.625 332.051 cv
422.7 331.825 422.723 331.584 422.81 331.362 cv
422.937 331.045 423.186 330.795 423.429 330.554 cv
424.112 329.876 424.77 329.171 425.443 328.493 cv
426.411 327.519 427.379 326.542 428.348 325.567 cv
428.452 325.463 428.802 325.409 428.921 325.499 cv
429.999 328.654 431.841 331.729 434.768 333.325 cv
435.011 333.459 435.265 333.583 435.458 333.78 cv
435.792 334.118 435.899 334.617 435.928 335.09 cv
436.102 337.895 434.081 340.52 434.384 343.311 cv
434.39 343.364 434.399 343.49 434.417 343.541 cv
434.436 343.593 434.456 343.646 434.492 343.689 cv
434.553 343.763 434.652 343.793 434.744 343.816 cv
435.546 344.023 436.38 344.065 437.208 344.106 cv
437.614 344.125 438.019 344.146 438.425 344.165 cv
438.494 344.169 438.576 344.168 438.618 344.113 cv
438.644 344.081 438.65 344.038 438.655 343.998 cv
438.673 343.842 438.644 343.899 438.667 343.744 cv
cp
1 .639216 .113725 rgb
f
433.782 322.625 mo
432.587 322.791 431.391 322.957 430.185 322.998 cv
428.125 323.067 426.054 322.767 424.099 322.112 cv
423.721 322.115 423.662 321.698 423.686 321.321 cv
423.71 320.944 423.928 320.613 424.124 320.289 cv
425.173 318.539 425.699 316.479 425.613 314.44 cv
425.574 313.514 425.413 312.596 425.39 311.668 cv
425.354 310.103 425.727 308.528 426.461 307.145 cv
426.901 306.315 427.502 305.525 428.348 305.116 cv
429.193 304.707 430.32 304.775 430.952 305.471 cv
431.121 305.656 431.248 305.876 431.365 306.1 cv
432.118 307.522 432.534 309.121 432.572 310.73 cv
432.587 311.46 432.529 312.196 432.668 312.911 cv
432.764 313.408 432.955 313.88 433.126 314.356 cv
433.958 316.655 434.395 319.074 434.829 321.479 cv
434.878 321.75 434.923 322.051 434.778 322.285 cv
434.569 322.623 434.173 322.57 433.782 322.625 cv
cp
.662745 .792157 .866667 rgb
f
470.698 336.137 mo
468.576 336.248 466.442 336.128 464.346 335.779 cv
463.334 335.609 462.21 335.302 461.713 334.405 cv
461.366 333.778 461.437 332.944 461.887 332.386 cv
462.336 331.827 463.134 331.578 463.822 331.783 cv
464.024 331.843 464.218 331.94 464.368 332.09 cv
464.767 332.484 464.784 333.16 465.198 333.539 cv
465.423 333.454 465.466 333.164 465.543 332.937 cv
465.717 332.429 466.254 332.069 466.791 332.104 cv
467.326 332.139 467.813 332.564 467.919 333.091 cv
467.947 333.229 467.978 333.406 468.116 333.44 cv
468.288 333.484 468.392 333.263 468.453 333.095 cv
468.701 332.409 469.39 331.727 470.214 332.053 cv
470.88 332.315 470.556 333.176 470.863 333.696 cv
471.425 333.25 472.034 332.935 472.779 332.973 cv
473.182 332.994 473.605 333.13 473.855 333.447 cv
474.1 333.758 474.138 334.201 474.008 334.574 cv
473.876 334.948 473.595 335.255 473.269 335.479 cv
472.53 335.986 471.592 336.091 470.698 336.137 cv
cp
1 1 1 rgb
f
475.993 316.728 mo
476.286 317.43 476.872 317.979 477.53 318.364 cv
478.186 318.75 478.917 318.988 479.641 319.224 cv
479.828 318.65 479.913 317.932 479.435 317.565 cv
478.759 317.049 479.353 315.655 479.087 314.885 cv
478.801 314.054 478.32 313.406 477.57 312.948 cv
476.817 312.491 475.317 312.313 475.153 313.177 cv
474.825 314.9 475.864 316.421 475.993 316.728 cv
cp
1 .733333 .552941 rgb
f
482.978 317.149 mo
482.321 316.81 481.607 316.521 480.868 316.542 cv
480.126 316.564 479.357 316.963 479.092 317.654 cv
478.938 318.054 478.966 318.496 478.996 318.924 cv
479.044 319.637 479.094 320.351 479.144 321.065 cv
479.161 321.303 479.182 321.556 479.326 321.745 cv
479.666 322.195 480.268 322.25 480.926 322.027 cv
481.019 321.996 481.539 322.488 481.896 323.322 cv
482.769 325.358 481.726 326.152 482.214 326.657 cv
483.261 326.475 484.389 325.981 485.436 325.799 cv
486.261 325.654 487.109 325.503 487.822 325.063 cv
487.897 325.017 487.973 324.964 488.017 324.888 cv
488.17 324.619 487.852 324.338 487.598 324.159 cv
486.884 323.656 486.375 322.87 486.208 322.014 cv
486.111 321.512 484.365 317.864 482.978 317.149 cv
cp
1 1 1 rgb
f
488.866 316.42 mo
488.699 316.147 488.533 315.876 488.367 315.604 cv
488.542 315.381 488.568 315.222 488.798 315.057 cv
490.867 313.585 493.413 312.373 494.691 310.18 cv
494.989 309.67 495.078 309.038 494.858 308.49 cv
494.767 308.267 494.661 307.925 494.892 307.862 cv
495.119 307.801 495.301 308.184 495.522 308.103 cv
495.63 307.62 495.748 307.117 496.067 306.74 cv
496.385 306.362 497.315 306.488 497.58 306.905 cv
498.15 307.805 496.727 309.46 496.329 310.448 cv
495.642 312.157 495.154 312.85 493.847 314.149 cv
492.541 315.448 490.91 316.438 489.124 316.889 cv
489.062 316.705 488.966 316.584 488.866 316.42 cv
cp
1 .733333 .552941 rgb
f
462.184 272.575 mo
462.585 272.31 463.022 271.993 463.109 271.519 cv
463.149 271.295 463.832 269.405 461.51 268.879 cv
460.924 268.746 460.282 268.835 459.794 269.185 cv
459.515 269.384 459.292 269.652 459.126 269.953 cv
458.893 270.375 458.781 270.89 458.943 271.346 cv
459.077 271.727 459.378 272.011 459.969 272.416 cv
460.316 272.653 460.299 273.244 460.308 273.665 cv
460.31 273.721 460.315 273.781 460.35 273.825 cv
460.383 273.868 460.44 273.886 460.492 273.902 cv
460.746 273.98 461.006 274.059 461.27 274.041 cv
461.536 274.023 461.808 273.889 461.914 273.645 cv
462.064 273.299 461.869 272.784 462.184 272.575 cv
cp
f
461.571 271.289 mo
461.591 271.052 461.537 270.809 461.417 270.601 cv
461.347 270.48 461.192 270.361 461.083 270.45 cv
460.931 270.763 460.845 271.108 460.834 271.456 cv
461.015 271.458 461.196 271.46 461.375 271.461 cv
461.424 271.462 461.478 271.461 461.516 271.43 cv
461.556 271.397 461.566 271.341 461.571 271.289 cv
cp
1 .654902 .423529 rgb
f
476.074 315.387 mo
476.123 315.563 476.027 315.754 475.85 315.804 cv
475.423 315.927 474.999 315.896 474.527 315.896 cv
474.373 315.896 474.261 315.741 474.316 315.595 cv
474.406 315.351 474.578 315.129 474.745 314.922 cv
474.939 314.679 475.157 314.141 475.329 314.192 cv
475.619 314.281 476.074 315.387 476.074 315.387 cv
cp
f
450.864 283.468 mo
450.873 283.675 450.884 283.885 450.933 284.086 cv
451.069 284.646 451.504 285.126 452.049 285.315 cv
452.094 285.332 452.142 285.346 452.186 285.329 cv
452.224 285.316 452.251 285.283 452.276 285.251 cv
452.453 284.999 452.452 284.665 452.412 284.359 cv
452.374 284.054 452.305 283.743 452.371 283.441 cv
452.596 283.472 452.821 283.5 453.047 283.53 cv
453.156 283.544 453.281 283.553 453.361 283.477 cv
453.447 283.396 453.434 283.247 453.365 283.151 cv
453.294 283.056 453.185 282.998 453.078 282.944 cv
452.647 282.728 452.195 282.504 451.711 282.507 cv
451.419 282.508 451.102 282.614 450.958 282.867 cv
450.855 283.046 450.856 283.263 450.864 283.468 cv
cp
1 .733333 .552941 rgb
f
469.247 284.841 mo
469.253 284.9 469.265 284.962 469.303 285.009 cv
469.327 285.038 469.359 285.06 469.391 285.077 cv
469.604 285.188 469.875 285.134 470.075 284.997 cv
470.272 284.86 470.41 284.653 470.527 284.442 cv
470.798 283.956 470.988 283.423 471.076 282.873 cv
471.112 282.644 471.123 282.383 470.971 282.207 cv
470.861 282.078 470.689 282.024 470.527 281.978 cv
470.309 281.913 470.082 281.848 469.855 281.873 cv
469.712 281.888 469.576 281.938 469.44 281.987 cv
469.213 282.071 468.983 282.157 468.786 282.297 cv
468.589 282.438 468.426 282.642 468.39 282.88 cv
468.382 282.927 468.382 282.979 468.413 283.013 cv
468.449 283.053 468.509 283.053 468.563 283.05 cv
468.827 283.034 469.089 283.019 469.352 283.004 cv
469.414 283.001 469.481 283 469.524 283.043 cv
469.55 283.071 469.56 283.112 469.564 283.151 cv
469.595 283.437 469.435 283.703 469.339 283.975 cv
469.242 284.251 469.209 284.55 469.247 284.841 cv
cp
f
443.309 285.209 mo
443.367 285.401 443.488 285.652 443.68 285.599 cv
443.792 285.135 443.909 284.662 444.164 284.259 cv
444.543 283.656 445.683 283.117 446.361 283.482 cv
446.613 283.617 446.809 283.834 446.999 284.046 cv
447.48 284.579 447.646 285.136 447.562 285.855 cv
447.453 286.781 446.722 287.539 445.88 287.941 cv
445.039 288.343 444.091 288.45 443.166 288.554 cv
441.406 288.746 439.646 288.941 437.885 289.136 cv
437.462 289.182 437.024 289.227 436.62 289.096 cv
436.322 288.998 436.062 288.811 435.818 288.614 cv
435.461 288.328 435.11 287.989 435 287.547 cv
434.799 286.744 435.488 285.962 436.256 285.661 cv
437.121 285.322 438.136 285.393 438.943 285.851 cv
439.083 285.931 439.275 286.016 439.385 285.898 cv
439.433 285.85 439.446 285.776 439.458 285.709 cv
439.542 285.163 439.619 284.586 439.958 284.15 cv
440.401 283.58 441.242 283.399 441.919 283.648 cv
442.597 283.897 443.101 284.518 443.309 285.209 cv
cp
1 1 1 rgb
f
486.019 279.227 mo
486.048 279.382 486.042 279.545 486.094 279.695 cv
486.146 279.847 486.283 279.986 486.441 279.969 cv
486.553 279.956 486.641 279.87 486.726 279.797 cv
487.087 279.492 487.582 279.349 488.049 279.414 cv
488.261 279.444 488.473 279.518 488.625 279.667 cv
488.841 279.879 488.901 280.215 488.834 280.51 cv
488.767 280.804 488.588 281.063 488.383 281.285 cv
487.553 282.189 486.3 282.574 485.087 282.775 cv
482.38 283.228 479.556 282.951 476.986 281.985 cv
476.181 281.684 475.243 281.193 474.827 280.399 cv
474.477 279.731 474.848 278.928 475.471 278.575 cv
475.728 278.43 477.427 278.383 477.368 278.852 cv
477.444 278.247 477.797 277.656 478.435 277.519 cv
478.987 277.401 479.362 277.56 479.666 277.972 cv
479.734 278.065 480.48 279.118 480.503 279.064 cv
480.742 278.5 481.235 278.05 481.817 277.861 cv
482.075 277.778 482.356 277.745 482.614 277.827 cv
483.213 278.016 483.462 278.712 483.627 279.319 cv
483.917 278.928 484.245 278.508 484.718 278.39 cv
485.278 278.249 485.914 278.657 486.019 279.227 cv
cp
f
495.429 294.008 mo
495.919 293.769 496.209 293.092 496.754 293.115 cv
497.116 293.13 497.374 293.459 497.561 293.769 cv
497.922 294.368 498.214 295.012 498.427 295.68 cv
498.476 295.834 498.52 296.007 498.451 296.152 cv
498.391 296.273 498.267 296.349 498.148 296.41 cv
497.554 296.72 496.899 296.92 496.353 297.306 cv
496.266 297.367 496.18 297.436 496.132 297.53 cv
496.051 297.688 496.092 297.877 496.135 298.048 cv
496.235 298.451 496.528 299.735 496.811 299.797 cv
497.092 299.858 497.38 299.751 497.661 299.683 cv
498.438 299.496 498.662 300.1 498.624 300.785 cv
498.586 301.469 498.549 302.15 498.512 302.834 cv
498.509 302.886 498.505 302.941 498.479 302.987 cv
498.428 303.078 498.308 303.102 498.204 303.105 cv
497.884 303.114 497.54 303.018 497.255 303.167 cv
496.875 303.365 496.88 303.925 496.687 304.308 cv
496.487 304.703 496.401 305.154 496.441 305.596 cv
496.451 305.702 496.472 305.815 496.547 305.894 cv
496.612 305.96 496.706 305.987 496.792 306.018 cv
497.181 306.154 497.566 306.525 497.458 306.925 cv
497.419 307.07 497.319 307.192 497.222 307.309 cv
496.815 307.799 496.408 308.29 496 308.78 cv
495.902 308.896 495.792 309.022 495.643 309.056 cv
495.277 309.135 495.047 308.645 494.694 308.521 cv
494.437 308.433 494.131 308.681 493.927 308.859 cv
493.503 309.235 493.095 309.629 492.706 310.04 cv
492.665 310.084 492.622 310.131 492.607 310.189 cv
492.585 310.278 492.632 310.368 492.682 310.443 cv
492.937 310.828 493.338 311.194 493.28 311.652 cv
493.248 311.912 493.063 312.133 492.84 312.273 cv
492.619 312.413 492.362 312.483 492.11 312.554 cv
491.8 312.64 491.491 312.725 491.181 312.81 cv
490.786 312.918 490.324 313.016 489.996 312.769 cv
489.78 312.604 489.684 312.332 489.565 312.088 cv
489.447 311.843 489.124 311.574 488.853 311.543 cv
488.364 311.764 487.874 311.984 487.384 312.205 cv
487.151 312.31 486.883 312.463 486.868 312.718 cv
486.853 312.962 487.083 313.151 487.141 313.39 cv
487.198 313.623 487.074 313.872 486.887 314.025 cv
486.701 314.179 486.464 314.253 486.23 314.311 cv
485.402 314.518 484.536 314.566 483.689 314.455 cv
483.575 314.439 483.453 314.418 483.373 314.336 cv
483.266 314.23 483.265 314.062 483.269 313.912 cv
483.277 313.547 483.261 313.168 483.101 312.839 cv
482.94 312.511 482.644 312.269 482.279 312.263 cv
481.912 312.256 481.574 312.079 481.224 311.971 cv
480.874 311.863 480.453 311.839 480.182 312.088 cv
479.904 312.345 479.9 312.792 479.67 313.093 cv
479.625 313.152 479.564 313.209 479.489 313.213 cv
479.446 313.214 479.404 313.197 479.363 313.181 cv
478.566 312.854 477.77 312.527 476.973 312.201 cv
476.636 312.063 476.257 311.876 476.178 311.521 cv
476.117 311.239 476.273 310.961 476.423 310.715 cv
476.55 310.507 476.677 310.299 476.803 310.092 cv
476.858 310.002 476.916 309.904 476.907 309.801 cv
476.898 309.701 476.833 309.617 476.77 309.54 cv
476.432 309.124 475.985 308.665 475.457 308.758 cv
475.109 308.818 474.854 309.105 474.563 309.307 cv
474.274 309.508 473.898 309.616 473.646 309.37 cv
473.126 308.861 472.641 308.318 472.196 307.745 cv
471.98 307.469 471.764 307.153 471.788 306.805 cv
471.817 306.348 472.23 306.026 472.606 305.767 cv
472.865 305.588 473.125 305.408 473.385 305.23 cv
473.46 305.178 473.54 305.122 473.578 305.04 cv
473.617 304.956 473.606 304.856 473.591 304.767 cv
473.513 304.311 473.297 303.881 472.959 303.565 cv
472.659 303.285 472.175 303.449 471.803 303.626 cv
471.432 303.802 470.946 303.961 470.649 303.674 cv
470.509 303.537 470.458 303.335 470.416 303.144 cv
470.304 302.655 470.193 302.167 470.081 301.68 cv
470.011 301.369 469.941 301.043 470.033 300.739 cv
470.147 300.36 470.497 300.095 470.864 299.947 cv
471.231 299.798 471.628 299.743 472.007 299.629 cv
472.274 299.549 472.552 299.421 472.674 299.173 cv
472.843 298.832 472.652 298.433 472.465 298.103 cv
472.397 297.98 472.322 297.854 472.198 297.785 cv
472.019 297.685 471.795 297.745 471.594 297.789 cv
471.29 297.857 470.976 297.885 470.666 297.871 cv
470.576 297.869 470.481 297.858 470.408 297.806 cv
470.334 297.752 470.25 297.627 470.307 297.558 cv
470.263 296.647 470.242 295.736 470.244 294.824 cv
470.245 294.542 470.276 294.206 470.522 294.067 cv
470.591 294.027 470.67 294.009 470.748 293.993 cv
471.207 293.901 472.52 294.354 472.884 294.021 cv
473.242 293.693 473.917 292.552 473.996 291.917 cv
474.055 291.441 473.692 291.152 473.361 290.806 cv
473.128 290.562 472.902 290.165 473.281 289.773 cv
474.122 288.906 476.453 288.438 476.627 288.59 cv
476.802 288.741 476.877 288.974 476.962 289.188 cv
477.046 289.403 477.166 289.629 477.377 289.72 cv
477.56 289.797 477.767 289.756 477.96 289.715 cv
478.551 289.588 479.26 289.34 479.348 288.743 cv
479.421 288.253 479.019 287.685 479.332 287.298 cv
479.423 287.184 479.563 287.116 479.699 287.059 cv
480.485 286.717 481.322 286.492 482.174 286.396 cv
482.318 286.379 482.467 286.366 482.606 286.41 cv
482.884 286.502 483.042 286.796 483.122 287.078 cv
483.227 287.455 483.292 288.049 483.708 288.236 cv
484.132 288.43 484.946 288.196 485.4 288.16 cv
485.568 288.146 485.741 288.132 485.888 288.051 cv
486.356 287.792 486.154 287.2 486.645 286.948 cv
487.51 286.505 489.091 287.138 489.738 287.74 cv
490.148 288.122 490.292 288.557 490.002 289.055 cv
489.767 289.461 489.591 289.465 490.097 289.729 cv
490.449 289.915 490.872 290.206 491.285 290.204 cv
491.983 290.199 492.006 289.275 492.611 289.116 cv
493.216 288.958 494.096 289.589 494.453 290.004 cv
495.078 290.726 495.356 291.123 495.237 291.479 cv
495.151 291.739 494.435 292.378 494.35 292.428 cv
494.208 292.512 494.146 292.691 494.161 292.855 cv
494.177 293.02 494.259 293.169 494.351 293.305 cv
494.549 293.595 495.009 294.212 495.429 294.008 cv
cp
.662745 .792157 .866667 rgb
f
481.773 301.737 mo
482.368 302.558 483.434 303.011 484.437 302.87 cv
485.651 302.7 486.913 301.699 486.922 300.408 cv
486.933 298.839 485.708 297.381 484.083 297.558 cv
483.439 297.628 482.675 297.817 482.16 298.233 cv
481.202 299.004 481.068 300.765 481.773 301.737 cv
cp
1 1 1 rgb
f
476.11 310.567 mo
475.754 310.689 475.589 311.283 475.694 311.643 cv
475.798 312.004 476.162 312.271 476.538 312.268 cv
476.796 312.264 477.346 312.169 477.539 311.996 cv
477.836 311.729 477.717 311.116 477.599 310.896 cv
477.516 310.739 477.153 310.21 476.11 310.567 cv
cp
.192157 .184314 .247059 rgb
f
478.194 312.503 mo
478.791 313.068 478.809 314.001 478.701 314.111 cv
477.729 313.916 475.029 313.542 474.978 313.188 cv
474.918 312.771 475.366 311.729 476.765 311.729 cv
477.244 311.729 477.823 312.15 478.194 312.503 cv
cp
f
488.372 314.837 mo
488.558 314.797 488.764 314.774 488.924 314.876 cv
489.059 314.962 489.129 315.116 489.187 315.265 cv
489.371 315.726 489.502 316.205 489.579 316.694 cv
489.604 316.844 489.621 317.003 489.56 317.142 cv
489.476 317.33 489.269 317.429 489.078 317.507 cv
487.222 318.278 485.527 318.758 483.524 318.935 cv
483.131 318.97 482.156 319.032 481.768 318.965 cv
481.183 318.863 480.368 318.815 480.278 317.625 cv
480.259 317.367 480.31 316.872 480.994 316.582 cv
481.768 316.256 482.929 316.256 484.279 316.108 cv
485.07 316.022 485.84 315.771 486.585 315.49 cv
487.179 315.267 487.752 314.973 488.372 314.837 cv
cp
1 1 1 rgb
f
440.375 312.889 mo
440.391 312.4 440.775 312.41 441.177 312.23 cv
441.485 312.092 441.68 311.79 441.889 311.523 cv
442.097 311.258 442.376 310.995 442.714 310.999 cv
442.913 311.436 442.23 311.861 442.33 312.331 cv
442.614 312.626 443.071 312.667 443.479 312.631 cv
443.887 312.594 444.303 312.498 444.702 312.591 cv
445.101 312.684 445.481 313.049 445.406 313.452 cv
445.352 313.742 445.089 313.946 444.823 314.071 cv
443.86 314.528 442.729 314.317 441.685 314.098 cv
441.401 314.038 441.11 313.976 440.864 313.822 cv
440.603 313.661 440.368 313.201 440.375 312.897 cv
440.375 312.894 440.375 312.891 440.375 312.889 cv
cp
1 .733333 .552941 rgb
f
440.745 312.285 mo
441.111 312.484 441.614 313.447 441.509 313.866 cv
441.373 314.41 440.459 314.355 440.07 314.421 cv
438.053 314.756 436.032 315.092 433.99 315.195 cv
433.748 315.207 433.495 315.213 433.273 315.113 cv
433.054 315.013 432.895 314.821 432.744 314.635 cv
432.388 314.199 432.034 313.765 431.679 313.329 cv
430.959 312.445 430.239 311.563 429.519 310.679 cv
429.242 310.338 428.961 309.992 428.791 309.588 cv
428.623 309.182 428.461 308.87 428.571 308.445 cv
428.667 308.064 428.856 307.705 429.115 307.409 cv
429.163 307.356 429.214 307.303 429.282 307.284 cv
429.35 307.267 429.437 307.299 429.452 307.368 cv
430.571 307.236 431.355 308.021 431.932 308.99 cv
432.507 309.958 432.868 311.073 433.64 311.894 cv
433.846 312.113 434.085 312.311 434.368 312.414 cv
434.611 312.503 434.874 312.519 435.131 312.528 cv
436.652 312.587 438.178 312.488 439.677 312.236 cv
440.037 312.176 440.426 312.112 440.745 312.285 cv
cp
.572549 .733333 .839216 rgb
f
432.355 302.322 mo
432.044 302.627 431.681 302.891 431.453 303.262 cv
431.28 303.541 431.195 303.864 431.113 304.183 cv
431.04 304.463 430.965 304.743 430.892 305.024 cv
430.863 305.135 430.83 305.256 430.739 305.325 cv
430.664 305.384 430.566 305.396 430.472 305.405 cv
430.048 305.439 429.618 305.392 429.21 305.264 cv
429.069 305.219 428.913 305.146 428.87 305.003 cv
428.823 304.844 428.939 304.688 429.029 304.55 cv
429.373 304.016 429.38 303.338 429.343 302.704 cv
429.289 301.729 429.156 300.736 429.403 299.791 cv
429.648 298.848 430.398 297.947 431.372 297.894 cv
432.351 297.838 433.226 298.708 433.374 299.678 cv
433.519 300.647 433.055 301.635 432.355 302.322 cv
cp
1 .733333 .552941 rgb
f
432.955 300.739 mo
433.13 301.356 433.345 301.851 433.38 302.489 cv
433.381 302.52 433.382 302.552 433.366 302.577 cv
433.348 302.6 433.319 302.61 433.292 302.616 cv
432.872 302.704 432.565 302.094 432.138 302.136 cv
432.172 301.61 432.311 301.092 432.543 300.62 cv
432.604 300.495 432.784 300.136 432.955 300.739 cv
cp
1 .654902 .423529 rgb
f
452.146 282.622 mo
452.535 282.363 452.531 281.806 452.538 281.338 cv
452.545 280.814 452.621 280.288 452.794 279.795 cv
453.066 279.021 453.571 278.348 454.145 277.76 cv
454.914 276.974 455.886 276.296 456.985 276.231 cv
457.471 276.203 458.011 276.282 458.4 275.987 cv
458.833 275.657 459.079 274.753 459.067 274.209 cv
459.066 274.126 459.061 274.036 459.007 273.973 cv
458.934 273.887 458.803 273.888 458.69 273.897 cv
456.561 274.079 454.11 274.964 452.595 276.473 cv
451.081 277.979 450.333 280.401 450.539 282.528 cv
450.561 282.762 450.628 283.035 450.848 283.118 cv
451.11 283.217 451.361 282.97 451.613 282.846 cv
451.787 282.761 451.986 282.729 452.146 282.622 cv
cp
.662745 .792157 .866667 rgb
f
470.49 277.627 mo
469.957 276.378 468.792 275.215 467.573 274.691 cv
466.093 274.056 464.486 273.722 462.876 273.717 cv
462.627 273.717 462.418 273.914 462.406 274.162 cv
462.379 274.626 462.441 275.142 462.794 275.439 cv
463.214 275.794 463.836 275.682 464.387 275.673 cv
465.461 275.656 466.833 276.164 467.643 276.869 cv
468.454 277.574 468.891 278.351 469.073 279.41 cv
469.35 281.038 469.136 281.848 469.487 282.128 cv
469.63 282.242 470.024 282.258 470.202 282.308 cv
470.48 282.384 470.75 282.482 471.029 282.559 cv
471.123 282.584 471.215 282.515 471.222 282.418 cv
471.265 281.738 471.224 279.349 470.49 277.627 cv
cp
f
457.236 285.579 mo
457.464 285.579 457.656 285.388 457.656 285.158 cv
457.656 284.93 457.464 284.739 457.236 284.739 cv
457.006 284.739 456.816 284.93 456.816 285.158 cv
456.816 285.388 457.006 285.579 457.236 285.579 cv
457.236 285.579 li
cp
.866667 .298039 .215686 rgb
f
456.606 286.083 mo
456.7 286.098 456.686 286.096 456.565 286.078 cv
456.48 286.078 456.418 286.11 456.345 286.142 cv
456.229 286.193 456.156 286.337 456.124 286.449 cv
456.06 286.669 456.199 286.907 456.417 286.967 cv
456.621 287.022 456.902 286.9 456.936 286.673 cv
456.963 286.5 456.966 286.315 456.828 286.184 cv
456.857 286.234 456.887 286.286 456.917 286.337 cv
456.915 286.328 456.912 286.321 456.91 286.314 cv
456.869 286.18 456.749 286.081 456.606 286.083 cv
456.606 286.083 li
cp
f
455.732 288.386 mo
456.247 288.386 456.247 287.587 455.732 287.587 cv
455.217 287.587 455.217 288.386 455.732 288.386 cv
455.732 288.386 li
cp
f
455.097 289.8 mo
455.695 289.8 455.695 288.872 455.097 288.872 cv
454.5 288.872 454.5 289.8 455.097 289.8 cv
455.097 289.8 li
cp
f
454.462 291.027 mo
455.005 291.027 455.005 290.186 454.462 290.186 cv
453.918 290.186 453.918 291.027 454.462 291.027 cv
454.462 291.027 li
cp
f
453.985 292.434 mo
454.6 292.434 454.6 291.479 453.985 291.479 cv
453.369 291.479 453.369 292.434 453.985 292.434 cv
453.985 292.434 li
cp
f
453.19 293.756 mo
453.771 293.756 453.771 292.857 453.19 292.857 cv
452.612 292.857 452.612 293.756 453.19 293.756 cv
453.19 293.756 li
cp
f
452.793 295.193 mo
453.043 295.193 453.252 294.985 453.252 294.735 cv
453.252 294.486 453.043 294.278 452.793 294.278 cv
452.544 294.278 452.335 294.486 452.335 294.735 cv
452.335 294.985 452.544 295.193 452.793 295.193 cv
452.793 295.193 li
cp
f
451.709 295.875 mo
451.613 295.992 451.542 296.105 451.551 296.265 cv
451.556 296.354 451.572 296.443 451.618 296.521 cv
451.642 296.552 451.666 296.581 451.688 296.611 cv
451.792 296.692 451.808 296.705 451.738 296.648 cv
452.032 296.938 452.554 296.648 452.436 296.242 cv
452.432 296.232 452.429 296.222 452.425 296.212 cv
452.425 296.287 452.425 296.363 452.425 296.438 cv
452.455 296.356 452.46 296.261 452.435 296.177 cv
452.423 296.137 452.342 295.915 452.396 296.057 cv
452.344 295.919 452.257 295.81 452.109 295.769 cv
451.978 295.733 451.801 295.766 451.709 295.875 cv
451.709 295.875 li
cp
f
451.392 297.255 mo
451.34 297.245 451.29 297.232 451.238 297.237 cv
451.078 297.252 450.938 297.313 450.853 297.457 cv
450.773 297.595 450.773 297.77 450.853 297.907 cv
451.02 298.191 451.458 298.2 451.623 297.907 cv
451.608 297.925 451.593 297.944 451.58 297.963 cv
451.793 297.752 451.709 297.316 451.392 297.255 cv
451.392 297.255 li
cp
f
451.039 299.21 mo
451.028 299.231 451.018 299.255 451.009 299.276 cv
451.206 298.976 450.947 298.564 450.603 298.568 cv
450.208 298.573 450.008 298.994 450.185 299.323 cv
450.319 299.568 450.7 299.625 450.888 299.414 cv
450.925 299.371 450.956 299.323 450.988 299.279 cv
450.933 299.335 450.876 299.391 450.821 299.445 cv
450.824 299.444 450.826 299.443 450.83 299.442 cv
450.709 299.457 450.588 299.473 450.469 299.488 cv
450.471 299.49 450.474 299.491 450.478 299.493 cv
450.636 299.553 450.819 299.478 450.936 299.371 cv
450.936 299.371 450.937 299.371 450.937 299.37 cv
450.83 299.415 450.723 299.459 450.616 299.504 cv
450.627 299.504 450.638 299.505 450.649 299.506 cv
450.842 299.514 450.972 299.372 451.039 299.21 cv
451.039 299.21 li
cp
f
450.267 300.786 mo
450.258 300.653 450.217 300.522 450.115 300.434 cv
449.982 300.319 449.823 300.262 449.65 300.311 cv
449.445 300.367 449.299 300.559 449.299 300.771 cv
449.299 301.199 449.813 301.386 450.115 301.108 cv
450.121 301.102 450.129 301.094 450.137 301.088 cv
450.072 301.126 450.007 301.164 449.942 301.201 cv
449.946 301.199 449.951 301.198 449.955 301.197 cv
450.125 301.136 450.281 300.983 450.267 300.786 cv
450.267 300.786 li
cp
f
449.3 302.844 mo
449.927 302.844 449.927 301.873 449.3 301.873 cv
448.673 301.873 448.673 302.844 449.3 302.844 cv
449.3 302.844 li
cp
f
448.584 304.451 mo
448.816 304.451 449.01 304.258 449.01 304.025 cv
449.01 303.795 448.816 303.602 448.584 303.602 cv
448.354 303.602 448.162 303.795 448.162 304.025 cv
448.162 304.258 448.354 304.451 448.584 304.451 cv
448.584 304.451 li
cp
f
447.637 305.693 mo
447.657 305.844 447.676 305.977 447.8 306.082 cv
447.996 306.245 448.221 306.245 448.417 306.082 cv
448.542 305.977 448.56 305.844 448.582 305.693 cv
448.614 305.438 448.34 305.222 448.109 305.222 cv
447.877 305.222 447.603 305.438 447.637 305.693 cv
447.637 305.693 li
cp
f
447.233 307.516 mo
447.238 307.525 447.242 307.537 447.247 307.548 cv
447.377 307.84 447.887 307.84 448.018 307.548 cv
448.023 307.537 448.028 307.525 448.032 307.516 cv
448.103 307.36 448.123 307.202 448.032 307.048 cv
447.95 306.907 447.796 306.818 447.632 306.818 cv
447.469 306.818 447.315 306.907 447.233 307.048 cv
447.142 307.202 447.163 307.36 447.233 307.516 cv
447.233 307.516 li
cp
f
447.076 309.356 mo
447.704 309.356 447.704 308.384 447.076 308.384 cv
446.451 308.384 446.451 309.356 447.076 309.356 cv
447.076 309.356 li
cp
f
446.87 311.126 mo
447.15 311.126 447.384 310.893 447.384 310.612 cv
447.384 310.332 447.15 310.099 446.87 310.099 cv
446.588 310.099 446.356 310.332 446.356 310.612 cv
446.356 310.893 446.588 311.126 446.87 311.126 cv
446.87 311.126 li
cp
f
446.838 312.866 mo
447.112 312.866 447.34 312.638 447.34 312.364 cv
447.34 312.09 447.112 311.861 446.838 311.861 cv
446.564 311.861 446.335 312.09 446.335 312.364 cv
446.335 312.638 446.564 312.866 446.838 312.866 cv
446.838 312.866 li
cp
f
447.076 314.536 mo
447.351 314.536 447.582 314.308 447.582 314.031 cv
447.582 313.756 447.351 313.527 447.076 313.527 cv
446.801 313.527 446.571 313.756 446.571 314.031 cv
446.571 314.308 446.801 314.536 447.076 314.536 cv
447.076 314.536 li
cp
f
448.383 315.207 mo
448.357 315.161 448.323 315.12 448.288 315.079 cv
448.141 314.906 447.902 314.926 447.716 315.006 cv
447.63 315.043 447.56 315.127 447.516 315.207 cv
447.335 315.539 447.561 315.964 447.95 315.964 cv
448.331 315.964 448.577 315.537 448.383 315.207 cv
448.383 315.207 li
cp
f
449.14 316.837 mo
449.79 316.837 449.79 315.832 449.14 315.832 cv
448.494 315.832 448.494 316.837 449.14 316.837 cv
449.14 316.837 li
cp
f
450.61 317.089 mo
450.849 317.089 451.047 316.891 451.047 316.651 cv
451.047 316.413 450.849 316.215 450.61 316.215 cv
450.372 316.215 450.172 316.413 450.172 316.651 cv
450.172 316.891 450.372 317.089 450.61 317.089 cv
450.61 317.089 li
cp
f
452.574 316.377 mo
452.568 316.366 452.562 316.356 452.557 316.347 cv
452.432 316.106 452.045 316.106 451.919 316.347 cv
451.914 316.356 451.909 316.366 451.903 316.377 cv
451.769 316.635 451.933 316.961 452.238 316.961 cv
452.543 316.961 452.708 316.635 452.574 316.377 cv
452.574 316.377 li
cp
f
453.508 316.206 mo
454.059 316.206 454.059 315.352 453.508 315.352 cv
452.958 315.352 452.958 316.206 453.508 316.206 cv
453.508 316.206 li
cp
f
454.462 314.867 mo
454.701 314.867 454.9 314.668 454.9 314.429 cv
454.9 314.19 454.701 313.99 454.462 313.99 cv
454.223 313.99 454.023 314.19 454.023 314.429 cv
454.023 314.668 454.223 314.867 454.462 314.867 cv
454.462 314.867 li
cp
f
455.176 313.506 mo
455.409 313.506 455.603 313.312 455.603 313.078 cv
455.603 312.847 455.409 312.651 455.176 312.651 cv
454.943 312.651 454.749 312.847 454.749 313.078 cv
454.749 313.312 454.943 313.506 455.176 313.506 cv
455.176 313.506 li
cp
f
455.732 312.092 mo
456.016 312.092 456.254 311.854 456.254 311.57 cv
456.254 311.286 456.016 311.048 455.732 311.048 cv
455.447 311.048 455.21 311.286 455.21 311.57 cv
455.21 311.854 455.447 312.092 455.732 312.092 cv
455.732 312.092 li
cp
f
456.288 310.517 mo
456.875 310.517 456.875 309.605 456.288 309.605 cv
455.701 309.605 455.701 310.517 456.288 310.517 cv
456.288 310.517 li
cp
f
457.956 284.131 mo
458.191 284.131 458.388 283.935 458.388 283.698 cv
458.388 283.463 458.191 283.266 457.956 283.266 cv
457.72 283.266 457.522 283.463 457.522 283.698 cv
457.522 283.935 457.72 284.131 457.956 284.131 cv
457.956 284.131 li
cp
f
458.561 282.666 mo
458.556 282.721 458.568 282.774 458.578 282.828 cv
458.617 283.044 458.902 283.205 459.107 283.129 cv
459.078 283.133 459.048 283.138 459.019 283.142 cv
459.344 283.156 459.49 282.796 459.365 282.539 cv
459.363 282.533 459.36 282.527 459.358 282.523 cv
459.336 282.689 459.315 282.854 459.293 283.021 cv
459.295 283.02 459.296 283.019 459.296 283.019 cv
459.403 282.91 459.45 282.747 459.407 282.601 cv
459.409 282.621 459.412 282.644 459.415 282.666 cv
459.406 282.433 459.228 282.238 458.988 282.238 cv
458.742 282.238 458.578 282.434 458.561 282.666 cv
458.561 282.666 li
cp
f
460.338 282.959 mo
460.584 282.959 460.791 282.754 460.791 282.507 cv
460.791 282.261 460.584 282.055 460.338 282.055 cv
460.09 282.055 459.885 282.261 459.885 282.507 cv
459.885 282.754 460.09 282.959 460.338 282.959 cv
460.338 282.959 li
cp
f
461.787 283.124 mo
462 283.124 462.176 282.947 462.176 282.733 cv
462.176 282.521 462 282.342 461.787 282.342 cv
461.574 282.342 461.395 282.521 461.395 282.733 cv
461.395 282.947 461.574 283.124 461.787 283.124 cv
461.787 283.124 li
cp
f
462.598 283.637 mo
462.673 283.777 462.816 283.891 462.976 283.919 cv
463.155 283.95 463.324 283.926 463.458 283.791 cv
463.601 283.647 463.668 283.365 463.536 283.19 cv
463.461 283.092 463.397 283.016 463.293 282.942 cv
463.112 282.81 462.828 282.872 462.678 283.021 cv
462.512 283.188 462.492 283.435 462.598 283.637 cv
462.598 283.637 li
cp
f
464.41 285.018 mo
464.419 285.012 464.43 285.007 464.44 285.001 cv
464.764 284.828 464.764 284.315 464.44 284.143 cv
464.43 284.137 464.419 284.131 464.41 284.127 cv
464.068 283.942 463.632 284.17 463.632 284.571 cv
463.632 284.974 464.068 285.201 464.41 285.018 cv
464.41 285.018 li
cp
f
464.387 286.563 mo
465.01 286.563 465.01 285.598 464.387 285.598 cv
463.764 285.598 463.764 286.563 464.387 286.563 cv
464.387 286.563 li
cp
f
464.149 288.267 mo
464.819 288.267 464.819 287.229 464.149 287.229 cv
463.48 287.229 463.48 288.267 464.149 288.267 cv
464.149 288.267 li
cp
f
463.375 289.397 mo
463.383 289.406 463.39 289.415 463.398 289.425 cv
463.597 289.686 463.907 289.686 464.107 289.425 cv
464.115 289.415 464.121 289.406 464.128 289.397 cv
464.219 289.277 464.199 289.079 464.128 288.958 cv
464.05 288.825 463.905 288.742 463.751 288.742 cv
463.599 288.742 463.454 288.825 463.375 288.958 cv
463.304 289.079 463.285 289.277 463.375 289.397 cv
463.375 289.397 li
cp
f
463.275 291.021 mo
463.545 291.021 463.77 290.797 463.77 290.527 cv
463.77 290.258 463.545 290.033 463.275 290.033 cv
463.006 290.033 462.782 290.258 462.782 290.527 cv
462.782 290.797 463.006 291.021 463.275 291.021 cv
463.275 291.021 li
cp
f
462.799 292.491 mo
463.386 292.491 463.386 291.581 462.799 291.581 cv
462.212 291.581 462.212 292.491 462.799 292.491 cv
462.799 292.491 li
cp
f
462.597 293.897 mo
462.603 293.892 462.61 293.884 462.616 293.878 cv
462.794 293.685 462.794 293.404 462.616 293.213 cv
462.61 293.205 462.603 293.199 462.597 293.19 cv
462.295 292.867 461.744 293.12 461.744 293.544 cv
461.744 293.969 462.295 294.222 462.597 293.897 cv
462.597 293.897 li
cp
f
461.767 295.691 mo
462.488 295.691 462.488 294.574 461.767 294.574 cv
461.046 294.574 461.046 295.691 461.767 295.691 cv
461.767 295.691 li
cp
f
461.211 297.069 mo
461.866 297.069 461.866 296.054 461.211 296.054 cv
460.555 296.054 460.555 297.069 461.211 297.069 cv
461.211 297.069 li
cp
f
460.496 298.582 mo
460.775 298.582 461.007 298.349 461.007 298.071 cv
461.007 297.792 460.775 297.56 460.496 297.56 cv
460.218 297.56 459.986 297.792 459.986 298.071 cv
459.986 298.349 460.218 298.582 460.496 298.582 cv
460.496 298.582 li
cp
f
459.94 300.052 mo
460.548 300.052 460.548 299.107 459.94 299.107 cv
459.333 299.107 459.333 300.052 459.94 300.052 cv
459.94 300.052 li
cp
f
459.463 301.486 mo
459.724 301.486 459.941 301.269 459.941 301.009 cv
459.941 300.749 459.724 300.532 459.463 300.532 cv
459.204 300.532 458.987 300.749 458.987 301.009 cv
458.987 301.269 459.204 301.486 459.463 301.486 cv
459.463 301.486 li
cp
f
458.908 302.905 mo
459.162 302.905 459.375 302.691 459.375 302.438 cv
459.375 302.185 459.162 301.972 458.908 301.972 cv
458.654 301.972 458.441 302.185 458.441 302.438 cv
458.441 302.691 458.654 302.905 458.908 302.905 cv
458.908 302.905 li
cp
f
458.273 304.377 mo
458.507 304.377 458.703 304.182 458.703 303.947 cv
458.703 303.712 458.507 303.518 458.273 303.518 cv
458.039 303.518 457.843 303.712 457.843 303.947 cv
457.843 304.182 458.039 304.377 458.273 304.377 cv
458.273 304.377 li
cp
f
457.397 305.935 mo
457.405 305.94 457.411 305.947 457.419 305.952 cv
457.599 306.113 457.834 306.113 458.016 305.952 cv
458.023 305.947 458.03 305.94 458.037 305.935 cv
458.34 305.666 458.093 305.162 457.717 305.162 cv
457.341 305.162 457.093 305.666 457.397 305.935 cv
457.397 305.935 li
cp
f
457.32 307.504 mo
457.914 307.504 457.914 306.583 457.32 306.583 cv
456.726 306.583 456.726 307.504 457.32 307.504 cv
457.32 307.504 li
cp
f
456.843 308.982 mo
457.398 308.982 457.398 308.123 456.843 308.123 cv
456.289 308.123 456.289 308.982 456.843 308.982 cv
456.843 308.982 li
cp
f
358.514 284.232 mo
358.514 273.272 li
359.58 273.272 li
359.58 283.357 li
363.12 283.357 li
363.12 284.232 li
358.514 284.232 li
cp
1 1 1 rgb
f
365.875 280.162 mo
370.478 280.162 li
370.463 279.752 370.362 279.375 370.173 279.029 cv
369.985 278.685 369.728 278.412 369.403 278.21 cv
369.079 278.01 368.711 277.909 368.303 277.909 cv
367.635 277.909 367.087 278.124 366.66 278.554 cv
366.231 278.984 365.97 279.52 365.875 280.162 cv
cp
370.701 282.088 mo
371.418 282.447 li
370.731 283.826 369.688 284.516 368.29 284.516 cv
367.526 284.516 366.88 284.328 366.352 283.955 cv
365.826 283.583 365.434 283.111 365.179 282.544 cv
364.924 281.978 364.798 281.407 364.798 280.834 cv
364.798 280.23 364.924 279.646 365.177 279.083 cv
365.431 278.521 365.822 278.059 366.35 277.696 cv
366.879 277.337 367.526 277.156 368.29 277.156 cv
369.041 277.156 369.652 277.341 370.124 277.71 cv
370.595 278.08 370.928 278.521 371.125 279.029 cv
371.32 279.539 371.418 280.016 371.418 280.46 cv
371.418 280.914 li
365.799 280.914 li
365.799 281.427 365.902 281.9 366.106 282.335 cv
366.31 282.77 366.599 283.116 366.976 283.374 cv
367.354 283.634 367.791 283.762 368.288 283.762 cv
369.366 283.762 370.17 283.205 370.701 282.088 cv
cp
f
374.296 284.232 mo
374.296 278.188 li
373.204 278.188 li
373.204 277.435 li
374.296 277.435 li
374.296 274.805 li
375.237 274.805 li
375.237 277.435 li
376.552 277.435 li
376.552 278.188 li
375.237 278.188 li
375.237 284.232 li
374.296 284.232 li
cp
f
378.34 276.575 mo
379.983 272.943 li
380.972 273.429 li
378.891 276.827 li
378.34 276.575 li
cp
f
382.973 282.838 mo
383.742 282.432 li
383.872 282.829 384.085 283.151 384.383 283.396 cv
384.682 283.641 385.037 283.762 385.447 283.762 cv
385.901 283.762 386.252 283.636 386.5 283.382 cv
386.749 283.129 386.874 282.808 386.874 282.418 cv
386.874 281.982 386.73 281.672 386.444 281.489 cv
386.157 281.306 385.762 281.141 385.26 280.992 cv
384.845 280.862 384.502 280.729 384.234 280.595 cv
383.964 280.46 383.74 280.267 383.558 280.017 cv
383.377 279.768 383.288 279.45 383.288 279.064 cv
383.288 278.708 383.375 278.385 383.551 278.094 cv
383.727 277.803 383.978 277.573 384.306 277.407 cv
384.633 277.24 385.019 277.156 385.462 277.156 cv
386.433 277.156 387.139 277.621 387.577 278.551 cv
386.874 278.927 li
386.756 278.63 386.563 278.387 386.296 278.196 cv
386.028 278.005 385.725 277.909 385.386 277.909 cv
385.016 277.909 384.731 278.016 384.53 278.227 cv
384.329 278.438 384.228 278.692 384.228 278.991 cv
384.228 279.229 384.284 279.421 384.396 279.563 cv
384.508 279.706 384.647 279.813 384.811 279.886 cv
384.975 279.96 385.239 280.057 385.604 280.178 cv
386.047 280.321 386.417 280.463 386.714 280.603 cv
387.011 280.743 387.274 280.959 387.502 281.252 cv
387.73 281.546 387.844 281.924 387.844 282.388 cv
387.844 282.953 387.638 283.449 387.225 283.875 cv
386.812 284.302 386.189 284.516 385.355 284.516 cv
384.207 284.516 383.413 283.956 382.973 282.838 cv
cp
f
362.57 295.437 mo
360.379 301.104 li
357.248 293.964 li
358.341 293.964 li
360.425 298.9 li
362.57 293.291 li
364.714 298.9 li
366.798 293.964 li
367.895 293.964 li
364.763 301.104 li
362.57 295.437 li
cp
f
373.205 300.291 mo
373.729 300.291 374.198 300.16 374.607 299.897 cv
375.018 299.636 375.335 299.28 375.561 298.834 cv
375.787 298.387 375.899 297.897 375.899 297.365 cv
375.899 296.832 375.787 296.343 375.561 295.896 cv
375.335 295.449 375.018 295.094 374.607 294.831 cv
374.198 294.57 373.729 294.438 373.205 294.438 cv
372.687 294.438 372.222 294.569 371.81 294.829 cv
371.399 295.09 371.08 295.445 370.853 295.894 cv
370.626 296.342 370.513 296.832 370.513 297.365 cv
370.513 297.897 370.626 298.387 370.853 298.835 cv
371.08 299.283 371.399 299.639 371.81 299.899 cv
372.222 300.161 372.687 300.291 373.205 300.291 cv
cp
373.207 301.044 mo
372.543 301.044 371.931 300.896 371.367 300.6 cv
370.803 300.302 370.352 299.874 370.016 299.316 cv
369.679 298.758 369.511 298.107 369.511 297.363 cv
369.511 296.619 369.679 295.968 370.016 295.409 cv
370.352 294.851 370.803 294.424 371.367 294.129 cv
371.931 293.833 372.543 293.686 373.207 293.686 cv
373.869 293.686 374.482 293.833 375.045 294.129 cv
375.611 294.424 376.06 294.851 376.397 295.409 cv
376.733 295.968 376.901 296.619 376.901 297.363 cv
376.901 298.107 376.733 298.758 376.397 299.316 cv
376.06 299.874 375.611 300.302 375.045 300.6 cv
374.482 300.896 373.869 301.044 373.207 301.044 cv
cp
f
379.562 300.762 mo
379.562 293.964 li
380.501 293.964 li
380.501 295.386 li
380.815 294.791 381.126 294.38 381.437 294.15 cv
381.749 293.921 382.1 293.808 382.49 293.808 cv
382.759 293.808 383.037 293.859 383.319 293.964 cv
383.037 294.84 li
382.83 294.725 382.605 294.667 382.363 294.667 cv
382.047 294.667 381.746 294.801 381.458 295.067 cv
381.169 295.334 380.937 295.669 380.763 296.073 cv
380.588 296.478 380.501 296.869 380.501 297.25 cv
380.501 300.762 li
379.562 300.762 li
cp
f
385.432 300.762 mo
385.432 289.25 li
386.373 289.25 li
386.373 296.721 li
389.408 293.964 li
390.693 293.964 li
387.359 296.893 li
391.32 300.762 li
389.958 300.762 li
386.686 297.474 li
386.373 297.737 li
386.373 300.762 li
385.432 300.762 li
cp
f
358.514 317.29 mo
358.514 311.246 li
357.42 311.246 li
357.42 310.493 li
358.514 310.493 li
358.514 307.863 li
359.454 307.863 li
359.454 310.493 li
360.769 310.493 li
360.769 311.246 li
359.454 311.246 li
359.454 317.29 li
358.514 317.29 li
cp
f
366.25 316.82 mo
366.775 316.82 367.243 316.688 367.654 316.427 cv
368.063 316.164 368.382 315.809 368.607 315.362 cv
368.833 314.915 368.945 314.426 368.945 313.894 cv
368.945 313.361 368.833 312.872 368.607 312.425 cv
368.382 311.979 368.063 311.623 367.654 311.36 cv
367.243 311.098 366.775 310.967 366.25 310.967 cv
365.733 310.967 365.268 311.098 364.857 311.358 cv
364.446 311.619 364.125 311.975 363.899 312.423 cv
363.672 312.871 363.559 313.361 363.559 313.894 cv
363.559 314.426 363.672 314.916 363.899 315.364 cv
364.125 315.813 364.446 316.168 364.857 316.429 cv
365.268 316.689 365.733 316.82 366.25 316.82 cv
cp
366.252 317.573 mo
365.589 317.573 364.977 317.424 364.412 317.127 cv
363.848 316.831 363.398 316.403 363.062 315.845 cv
362.725 315.287 362.558 314.636 362.558 313.893 cv
362.558 313.147 362.725 312.495 363.062 311.938 cv
363.398 311.38 363.848 310.953 364.412 310.658 cv
364.977 310.362 365.589 310.214 366.252 310.214 cv
366.915 310.214 367.528 310.362 368.092 310.658 cv
368.657 310.953 369.107 311.38 369.444 311.938 cv
369.779 312.495 369.947 313.147 369.947 313.893 cv
369.947 314.636 369.779 315.287 369.444 315.845 cv
369.107 316.403 368.657 316.831 368.092 317.127 cv
367.528 317.424 366.915 317.573 366.252 317.573 cv
cp
f
375.708 316.82 mo
376.146 316.82 376.556 316.709 376.941 316.487 cv
377.323 316.267 377.632 315.934 377.864 315.492 cv
378.095 315.05 378.211 314.518 378.211 313.894 cv
378.211 313.401 378.116 312.932 377.926 312.481 cv
377.737 312.032 377.456 311.667 377.083 311.388 cv
376.708 311.107 376.261 310.967 375.738 310.967 cv
375.208 310.967 374.75 311.101 374.364 311.37 cv
373.978 311.64 373.683 311.998 373.479 312.447 cv
373.275 312.897 373.172 313.378 373.172 313.894 cv
373.172 314.462 373.284 314.969 373.506 315.415 cv
373.727 315.862 374.032 316.208 374.418 316.453 cv
374.806 316.698 375.236 316.82 375.708 316.82 cv
cp
372.468 318.56 mo
373.501 318.56 li
373.631 319.079 373.909 319.457 374.332 319.692 cv
374.755 319.929 375.218 320.047 375.723 320.047 cv
376.705 320.047 377.354 319.737 377.673 319.121 cv
377.991 318.505 378.15 317.821 378.15 317.072 cv
378.15 316.242 li
377.882 316.676 377.531 317.006 377.094 317.233 cv
376.657 317.46 376.195 317.573 375.709 317.573 cv
375.219 317.573 374.761 317.488 374.334 317.316 cv
373.906 317.146 373.53 316.9 373.206 316.577 cv
372.879 316.256 372.626 315.865 372.445 315.409 cv
372.262 314.953 372.171 314.447 372.171 313.893 cv
372.171 313.252 372.311 312.65 372.587 312.088 cv
372.866 311.524 373.274 311.071 373.814 310.729 cv
374.354 310.386 374.996 310.214 375.74 310.214 cv
376.886 310.214 377.71 310.711 378.211 311.705 cv
378.211 310.493 li
379.09 310.493 li
379.09 317.072 li
379.09 317.771 378.971 318.4 378.734 318.963 cv
378.495 319.524 378.123 319.971 377.618 320.303 cv
377.112 320.634 376.48 320.8 375.723 320.8 cv
374.69 320.8 373.926 320.575 373.433 320.128 cv
372.94 319.682 372.619 319.158 372.468 318.56 cv
cp
f
382.833 313.219 mo
387.436 313.219 li
387.42 312.81 387.318 312.433 387.129 312.088 cv
386.941 311.742 386.685 311.47 386.36 311.269 cv
386.035 311.068 385.668 310.967 385.261 310.967 cv
384.593 310.967 384.044 311.182 383.617 311.612 cv
383.188 312.042 382.927 312.577 382.833 313.219 cv
cp
387.657 315.146 mo
388.375 315.505 li
387.689 316.884 386.646 317.573 385.248 317.573 cv
384.483 317.573 383.837 317.386 383.31 317.014 cv
382.783 316.64 382.392 316.17 382.137 315.603 cv
381.882 315.035 381.754 314.465 381.754 313.893 cv
381.754 313.288 381.881 312.704 382.135 312.142 cv
382.388 311.577 382.78 311.115 383.308 310.755 cv
383.837 310.394 384.483 310.214 385.248 310.214 cv
385.999 310.214 386.61 310.398 387.082 310.769 cv
387.552 311.137 387.886 311.577 388.083 312.088 cv
388.279 312.597 388.375 313.074 388.375 313.517 cv
388.375 313.972 li
382.756 313.972 li
382.756 314.483 382.859 314.958 383.062 315.392 cv
383.266 315.827 383.556 316.174 383.934 316.433 cv
384.311 316.691 384.749 316.82 385.246 316.82 cv
386.324 316.82 387.126 316.262 387.657 315.146 cv
cp
f
391.254 317.29 mo
391.254 311.246 li
390.161 311.246 li
390.161 310.493 li
391.254 310.493 li
391.254 307.863 li
392.195 307.863 li
392.195 310.493 li
393.509 310.493 li
393.509 311.246 li
392.195 311.246 li
392.195 317.29 li
391.254 317.29 li
cp
f
395.735 317.29 mo
395.735 305.779 li
396.674 305.779 li
396.674 311.625 li
397.173 310.684 397.936 310.214 398.96 310.214 cv
399.758 310.214 400.351 310.464 400.741 310.965 cv
401.128 311.465 401.324 312.123 401.324 312.936 cv
401.324 317.29 li
400.382 317.29 li
400.382 313.064 li
400.382 312.496 400.29 312.005 400.104 311.589 cv
399.917 311.175 399.499 310.967 398.847 310.967 cv
398.407 310.967 398.022 311.097 397.692 311.356 cv
397.363 311.616 397.11 311.962 396.936 312.393 cv
396.761 312.822 396.674 313.275 396.674 313.753 cv
396.674 317.29 li
395.735 317.29 li
cp
f
405.064 313.219 mo
409.667 313.219 li
409.653 312.81 409.55 312.433 409.362 312.088 cv
409.173 311.742 408.917 311.47 408.592 311.269 cv
408.267 311.068 407.901 310.967 407.493 310.967 cv
406.825 310.967 406.277 311.182 405.849 311.612 cv
405.42 312.042 405.159 312.577 405.064 313.219 cv
cp
409.889 315.146 mo
410.608 315.505 li
409.92 316.884 408.877 317.573 407.479 317.573 cv
406.714 317.573 406.069 317.386 405.542 317.014 cv
405.014 316.64 404.624 316.17 404.37 315.603 cv
404.114 315.035 403.987 314.465 403.987 313.893 cv
403.987 313.288 404.113 312.704 404.368 312.142 cv
404.621 311.577 405.011 311.115 405.54 310.755 cv
406.069 310.394 406.714 310.214 407.479 310.214 cv
408.23 310.214 408.841 310.398 409.314 310.769 cv
409.784 311.137 410.118 311.577 410.314 312.088 cv
410.51 312.597 410.608 313.074 410.608 313.517 cv
410.608 313.972 li
404.988 313.972 li
404.988 314.483 405.09 314.958 405.294 315.392 cv
405.498 315.827 405.789 316.174 406.166 316.433 cv
406.543 316.691 406.98 316.82 407.478 316.82 cv
408.555 316.82 409.359 316.262 409.889 315.146 cv
cp
f
413.268 317.29 mo
413.268 310.493 li
414.208 310.493 li
414.208 311.915 li
414.522 311.32 414.834 310.908 415.145 310.68 cv
415.457 310.45 415.806 310.336 416.197 310.336 cv
416.466 310.336 416.743 310.389 417.027 310.493 cv
416.743 311.368 li
416.538 311.254 416.313 311.196 416.071 311.196 cv
415.754 311.196 415.452 311.329 415.165 311.597 cv
414.876 311.863 414.645 312.197 414.471 312.603 cv
414.296 313.007 414.208 313.398 414.208 313.779 cv
414.208 317.29 li
413.268 317.29 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.0
%%For: (ASRock) ()
%%Title: (00.eps)
%%CreationDate: 2/22/2018 12:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KCKhHFf')olca3X=gtkjMG#``fFTX+EJ>+FtGi+B%Bcn%OR*4@@q=+CWZYn=X5_+$=%Y;`io?Q8d?!".3pKE"Bp/7sKXOWdF
%9<Gtl$771F#+f0-XUfoKhu7cqp=&k=dQQ!V(^:#Ke4&\;"jM0ENg7UJ`CQBs4-j+$rc-BQD0B+5Ut]0m2-QR=>[dGTV-/%?3IkHd
%L%e06dJBoJe>Q?-TMK8Rgg.$@P1<Ur\C)mpU.7IuQTDnL68'/UrtbB5ZeFWpP"k/4eCKZ=pFcDRGNg4(8ZrB"L057oB^<c<Ftn%A
%O8^s.E@X&JGC,lQYMO#C\qa!QCPF4m:>-H^!="0ri'100A"fFZ=8ImtYGO!e"b676'l\un_F>If?0Z!/,";P%j?NPq'r:p)T36mJ
%J'dQS?hh)_pk=7]g"\.=*1@f`Y7QBVZ^)*de-$&FU.$79GEV!0UXDg!Cjd$76U-*be2f.8-i`SF^_p#@fdJJmJVjiATbeK(p/JkC
%>I8h^1c/l1+GJn&HLfZmiFu2h,oo#9;Q%!0s#6Ha(rBt+7YSYLjL;7?,O)jYepDp96a2s(j[H592#(<eN7CB$:HFCaqJU)Q;s>8I
%4eUn;UQ<GN=,>:-?M9H3/)QOcf*rScDR>Vi:?r@k<WOB?##?Ntkb=(Fb)^?^f'2E&0GU-tHH%]oNe1cNd4HEl-;`hoVg_H\cHSg4
%WmOFpp.;/g)pk\:Ko#bep/-c(rti<IPNB[DHbH6>f!"`6nr(=TSl^<ENDm#;CWihi4:8_K\!MX5RrBYlXTSBAn.5@)L?Q*X0*KpU
%fn'_,-4]t.^L$JLdI(VA%mN8B[/00tk'lX*Inc2CXhCO7e#?<?ART*;CJok50dV@d?ebO*0.Brem<]WX"Zu&r"o]7Jdm)f@p[Nb)
%oS3e^>\,Sh6W]_+-B2%f1N3]#1i%fSPtjEei4sl3PtlmZ8B5&?rs?G>!*Os%#I%IN!n"@UER]j!S=&<+#+;*(9i^Eu!Zt1+[;J#d
%s7=1g)45'XmI/)BX[^!NS.:p?Ujo"$eEYcacH919-U:k82[Y7'P>4s("ZX`C>M*h-D0\32H:Zf<._5(<D0&KYD]feXSXWj`XNAYV
%<dX_J;?JqIErj_cB.[LAfl%uVJLJ^RJo$dG[>^FY8CsC';qmp%nWTc:LiC[#IAY%\>=>;bq>5O,"`We"2>M!bEh)3]RiDC/WE9(:
%2d5#Z_#9qD:KmlSWbu_&Qe"B:o&Y>(eaMUj>[%07am5L4,PT#Il^p'1;QBm\@c#5'om\lF.LLMoVn(2cRFpbJ%gtJ$<b!7p\UjZ8
%cmUq<mP?bbUl@l=!'cM4i6.BTUOLRhZk)KQ;<*`44e:eq^:@4/.UdbTN5IlVPF_+r*qLMKpZkPd';T(J0\8@'UG\*966!bnE])<d
%0Q+B.(-u!]T:N[B(/Q(P\GbOr=RnU3nfFTV(ZsX_mp<*1"QPL@0%WZdW-#a\nC)bnlL3b&'7QGT4ETk8rE]P_l3oL#FZPeOD5rBa
%7]hk2WJ)re=9BR+r=T(1pDru<5>HL5mhHm[_iUOs%5msfdca>n^X$TA"A)*8E,&_(\8L8PN\,Xn]IbNbcR'-cqS?Sna%fmWn_VPu
%oigf<a)7^/ASn<O[TdLR%kG9Wi[r\r3VJ)b/o*6pnjI$dR2>=+T6M/4TlOseW:`iuXc+2pm.EGeIB`=Dai2ok?5K=^*W4>DFR`Bm
%8[mTu_d6TcbM%ujGV@>@nOBofq(p,[Ze<?b[ARVP]3"H$cf0_JX`^T`qOmHHD5d-(8a)lb?G*PV8iKo?,iAH;oCBug'CBirS$R:2
%cJ-1S9JY;3LhUCcIf;?d0oMthcanHj!Y/F?(9MG_qOMBlK^GBo43Ft)bM1@2$d<F]eOG$mX-7$DK;Ou_?cWfEP%g6B])8:&OKros
%!ZmSirPJKNPT,N49ME"egWieTjar=<pV1.Zm<:%Qff*6GlJ7:O2f^^@D9V+OMA'K;]SsB@Nj+?l2mMHk[bSfeS(Mc]N)F9\26c66
%D.;;f\_qeeF1J`#FmQZ8jNjX<)1Ok45^*t1*L<('jB_q6\_$&;`R1lgWRL7bb/p8u8tO7<&7h8;Z52r*ddMAFQ0-NJV`*CXF,ojk
%jUo&299d!_Y0>PUr7:jr2sHl#8_<V6fCETB[EH%@2s>Xlj=P;C!f#BU<I+iCfAYD+b7J1_hT4^rP]i8VruZ([TC-Ofc_@VDGkZ:?
%5BQdnrCSs#Y#b*jg/.B6ZR<C*)hZW+2_(A`^Y>l&d`cc;Vn63f#4q;%\^g'?.R1;T6'j*:E6O'.Q\,F\h,C#[>h^*:?cB+l[uGn#
%fZ(ZZ?,tT6eXO8FI"%?K?aku2\Z4ti2dAqNk6Lqe@ilT0XWU;:ScAPH-;feCj8_3Y_U2Mt:A-ZOd2;1Y7t.$mpuB&C4RDh+'"Mp%
%=usj[0sl_o$Llk%+:YMYS@h_f;3?rU,SVc"HLL>_l/apts(UG:'oh,nnQ,\2jh&_=I?AU]'#`jre9:D(OR%05^N:3S/>&Qs4M-%7
%?"^\\9#fY+G28=/eFcH)=`1Vc9:[@(GE+rEjP@guGdjB(3?EHi.^aRe%n9gAbI,[!93,)R4^9#6ll%RB=rlq\?;Iou7B=m$`1!bf
%'SnJ#6`q4E]+3'N3^'%Wo>kR]]I(kg(R!D&?hYQ!QE,)aY<rK!fgutG3*blepb4n`ob`%1Pt,8q1(5\RB#^ENjiH5J'I]'VNCe\Q
%*+UuW:iM9.kH#Yo/D]F4K"p+5pKS\Ur"DW(LZlrJ<`_e5k1Io1Mp>4\^u4clV:eN\gBi<`-'s%0]$"[PD_"?Mp;coO]#uBmRrZ3s
%`_Xh;LU1;dg/h25**6OX*20gA@Hli]%cbj;#9W"WSGH.nrH[pFl-DI!WbZin-^VaJEHPgA:G/DeR66MEWd#SK(iTD>lR^&H-1'`t
%[BImCaK_/<fAQ54If1pa//bqO[\#>nBtrM<jNH1iN:e(WG?W%4p-HqUCEJh]?^:(m.07=+UfZgAA0Kb!ZF6!ML%JPoeCE+rmNKW5
%eFHQIi`;DCY3+BV??2-#`_*kdg.J-s9I`&o.T@pX.Xl%la,U?u05FM2<\jtJY#MJ#j8M%f#MDg_)dh1)3XM523HeH(ea[FqH1mL]
%]rYN$cl',nF-FA79jG?GiV&UQ=]Cj_j':(lo;bo2%19FILJ3rtFim+oZ^J)-D.]P7-H[01mVA2HP3[FQ4i=j+R4*>=1\M5-:T_#r
%.Z3S09N"_7+$LZcnWQ<H\0AI3\Tlp)kFu2liH^u7;=\O8m"OUJ(M/bf1+"4.>32L>@LhGDXtN=2\Xp>[ea&HXP%QS7>a-s(MfEA9
%ea&HXP%QR\YJH2i0$71MdTjb]RTq]G"'jkAcgkfecc_Ta2E?Vp=)m9c*5jL9`FZ41>1G8WXmMFRI`LkPp(1Luq3B"\G?$-k>do=5
%P:A@%^@mW_R[NZQ*%73D[0^30n?jd_f2ap4RAam7F`!Z%>(T.'iG'%/p1%?EU9%(R[0]p(E4,#KeZod\h+NQBNuL]3T\t;L!'%MY
%5CSUYj;R,F_;lM/Y0k@,Zs!DjBl#[Whfl9Aj1iqkKK54kp_:2Xjn!';?Il8+h\O@cUeYsc3qJp?<@cpH%?$gV4Jaq_'gqu$7oE1T
%g+0*5rnAs=s38I=nA"Sa6fAr[7+[p9AA?t`q_PZJ2l`EJHKACRQt^nM>O/`&m*!B&RM:1<'Rfd7]=LP"qB)g612a,>p%hMD?EOfZ
%?^W2=I+oNcbA6*d\-b@V#Jr*'s.VX=`>NlC<c&kd>@#TM2u5PKCO]pJg6m3#i\@]LG?e44$fpf:*M)9sbT7!I\hpHF`u`Mu!ufmG
%5Mgb._gme#OoOR;V6aWX6[K(kD\#(2)3;I)r%VW#V.AV/.^W=Be9ctk8M?,Op-1,SY@8X6#DmWpdVn^)D_0n_f:eMi,lTm4_b'cM
%,\ACnhb!`i')r\aM%O._c0+/XPF1h#a*]6VqO#3K-SaNYK$cB2q2U@XBG0nW7r)lQo,V`jE(qOP[JKlO5L3D!Y0?jj]q_iF!T0)1
%U\36X)eme4%XZQ1[Ye']F):,PLJ'F-o9.pQcHce*[3"@6$&pRHRb_;HRHIVAl>^N]D%=,+n*G[5T(gTdS*-#/j!G6_*jRNpOA3Hg
%3c5uo(2rdLSKqppK0#:Af:02E6#6JGHE32#juZ.O^=B2>c\tFi>\=`%fu/"kELgYh0S^i7nXj*uZD=37d?)Mclc8t\=Wb0n3Yp?<
%ZKTTpfM9kFJ*$=PAD1@qS#0F<F(64DetqN+PhH%=QQ(B"ao7a=N4SDP$KA+-]lNC(gUth'QN)Qi5/%sLJmJ2a%GG&>GK]5'QaX^M
%ZGis>#Q./k]1a1t'?A9L\Y'VVbK5`KZK"C//F7Tn0+@Y`-B=FLj(74pR5eM"NgGU_j[qL=)X$lAY#;'Fi]p,>bcb3k[MV,.g4OM'
%T%*b$.r!u[RhV>/a*4oNRUe8K`?t-i3>hL"'7':*.5inU=eF_-'sH@n4<!nLAu0sR>P]fV`CZ2KE>FRu8ke7g*%.#=`^;`bTU@\2
%!]%MU\MCI1;M"(^:cMe#Gl&!_m%jL+V#&MNO_JNHGPeUBC]/B-5.ra$;O#pPT"N2f9:[1q!OTsip.N%\3Be-[4,`D5j_4TUmT4#e
%DglJO^ROkWOuc/d-TepqHlrrjjnL#P27hj1^Hq&T^M!`I'+2FE`k]*TbV'AF>b+6M=D1dP6CV!6m>EDMO3Va%.S%3Ij:Q(_05hNH
%pMt*00Zf[!Pr?:^m0%^Co2iVk/&tN@?.NTlIZ3Sh6@.Y3R.rD=[f'Y^IZ1O4J>7rC@pEpN[J"+kTsKRtA'?7d`/cXUCjb6_R.rD=
%L`Z^NZsG%[ZHL0M]+4PfI]$*2<>mMpofW'4h![SJUr-Q^QE!/0S*+fMOi'P,Ab=/.Ri-QrP,EItZ[]UgfBLUd73o0u05FM2eon7R
%X.JE7*-)0i]:F6mfA;6c?e4AP@ZGb,H^/KSg.B$OP@c\5NH:im'kR9oWmFSFF5HAmNq;UjRU+K>Y$oEtYF+A1+2(\rXeKr`]=921
%T-e]5-?XqfFb>.jY4?6=s+=m8I[/r+Vr-1n2ZVH2fdV/oWh8@Xn]'DMSs0KUKfA^/3D/mRjc"Jr=.V"&Ha8u^]op'LD<L10HOWC8
%mTHajYEB-0&l?Z#Uu"OTfi8D-i.eCs00Vn/a2ElfHQ*VO[Pp*^m"m=g5@Mas@sJ`'DIUjbXLX0F2mMNEkH)36$H^5T]+3EI2,"Om
%B(fJi)?^_#DS5>H*(MnAk9f?H`1.e'`l+C:QudN\)-d8r0&J"qh4tF^QV!NZ4'0IuHeW;c%Q]k;S98;e>mG`E\p]RsRMBASq,i+$
%Y@7tDB2Vf?;BKsX=5o\#Q"Z^iN8^3[[/[60)40BBDLf=@?fdj5CK.<(o*#?+g6HEdpO+Z\CTZ@ghT4`RQ?JT`E]H?JHt@OgcMdYH
%/%Ef=[#0N\-#_0qWtR;_:<pNE2,OW3OU6-/qW%.mB*As(oVFRDa,Ri>'>kse2aFRjjj3s,drE.tIi[Zt6/@X+Zd53jS$IB%g#971
%Qi$YsgXSnK?$`IB)"1'fFLfrgp*s^(P&JF945&Z"G*aF"X5!+0=/njK6Q9p7;^RKn1f/W2`)Q_A5OR\Afq^2Ql^3Mt>_d>l-:^(m
%U]LM<kon?Z]k$f8>UNRVShHs$o.(VD]P1ZIb!_`27)S1X5$E;E1qN"U#Q5HLlI_E.Etl7WGIuC!Ep5og]8X"pk8*ps]&)[(';]Ai
%PbO"01sq.4?HBS1i@D#E?+0su+4?/r]&(BY4`PZ.=*0JJC6LdjCiigEPsaaUSQ.jcBFk)emi`2\5.X-7S7`@Fj];lX+h50JjGu$S
%^Jqj`\[mcHDmN>+e'bgb6F"t<pC<7J>i3_l#fgpqB]C]bo*G,2(QNe70G0=TAscg(!L[;f9P!0O2NFnU]S[ckai=V+<U'<:9_%D<
%a"L`;Q)'4O=Ms<JI9$3^E[b'er(fMCG1?p5:$Tr_4"!7q^i2=!)I*RirZbZdlrghJGk.J(J#/6bG=mAI@2Z6,AaT7!o^8<7p%0?K
%XNS$<)Qh;CoBt=WZ\e"E*F7-lE0D1Xj*cbrY="G2?g")mPjN9lkI7_&3OJ6HObp?=Yq$A9q#PVTm+DAbhXQ,>Y#cq48VZ%\nq/#/
%[OZKEE]bSZ17(Mmq$-abTt\I'FPS4h]D\P3>45^js'shZ\6%A,F1PGi4/iTJiYSu\2gIQ06`i#0S#l=QeZC@D7]mDe'lCc;>^%rM
%1*O!I-8TfCRG$#b-AR\>K28(_3gF<$5L5Z1`fT>4pqaf!HTcgO:V.6S-Qgd?;`lG1O,<0iek[`5V++s(iV_.43(^CQ2(=j+BE^Wq
%&Z"0X2<F5.1i)?rO9cUGB_Q)=\I#$-)4Oc[0-pkrB(hSKrq3SqO8Hln>H-*+`_t>m+I)'6emD/J(K/H+7p'F.mb9,Adn<e-&^tq%
%\D9^(7UBL*ri>8!s78NP4SoZgcasO-fto?g[RPlQ;`$D^r.cAJ2M=;r+,=85Ijj4>&0XZHck&U#6!SY9_I6](be*?=Y@m@V=+L6L
%:gW*LiSu;h;#:]Ngqn,dR;9$O8o7&QB+H.TjCQ\W0g7NHNMP0!E)s0H\VIf%Tr/WB-8pu^Is>.4p`oKs$"Tl2+1Inm\(;e$+Q*tn
%na>:jlerq7qq#EprblMTRWQgs44\NkFQb,KDjd*m6Ri-EVB<:^+7HTU37RuO;YCF\=Yn-nbH5OZ(t@JaV$D*_HhW'n+Jn$]L\N\+
%1/*)6cY'RPBUgiss4/kgBpQ)MfBqC8A^Bc"WB8Amm[ob>GQ'qF"-)i+$OsXg2;R5@??oL-_&CLLV+.M3P[%<+LfWN(cA]^HpZbKN
%bgjZML!UTKAio7jUtt+aBX[`_,`;UA.HcT_gUm8X;+Jr$Y+(R:UbA8MI[hk2rL'90@,(2oGhcr>hsIh3a+4-e;A,Pd<_u.N)%-*l
%5Ge?<m`kIE=ZufPoj"]$gti!G%-[QqE:RnA?G/O=g]YSM#_KpGXeaB)n(@4Pq3Wl'ftc'*Mg!W>qmnJbO]M"#9_RS'@5.g^pVLe/
%qlhZS,kGa)bMQ^k7E$B'd=iO`or2/!aP^R;QbP\Va/)i&]RB1THD"uR-i:T::As*[2]aR5FJlB@.Yq<7kE<Q@4!%Q/#eR?Da)TP.
%e3Mjd$&aZ?j2KfTM9dF`c"1(NR%Ug`<$CqLJ>1P3(KMJ?JOqZ^'K/$E2sD&4<aL)$8o&F??"l[$DZ.*&(o4nU:lS1!S_d\Rd]!rc
%7Cl"EA`#Hgd]V)ip$B5gN[rq\PLFa1Xkq0CPt'Tc(uOpq&[ceq.)8)5Ya!E52l3oKWS_J+[OU*>d]*7.h5Toh5M_/`d;l)ZB;N4'
%B]cjj0/\ogL=c8rk+#*^qVdk+.&]H[FV\67FRKHh4m4.ob'->[B2(nMq(jJd,_,Oq/%'],Z<(toHVS=U+<C25AZSt%#Q;e2;V5fn
%qe[\bFJ,D8(Se;Ef9peFN.SMh*IRGd$a/*3P#AYn39U?^km:b0NIJ(en"ke2A6IPW\ueFd6_W?J9&/MV*&UsNUD@r9kd8e*S^FkU
%6WSL>Cb?kQbG`Cm8@jQm/`jj/Are]hUH`J"p*u'(Utos2LUNJA`@Y%(ZG\a#o1l?7p5_ilUe^jUa?o?5_sQLYO0)T+etkPR[C2:=
%dn1,V$AM,5CZR2I4BfUuD:`"B8d!bm;!VqU*Am8)lEccWNDkTgr:C!Tc?CZkV:5\2epX."@DaK^_Ih643`s)lT?.b>b[&*Ib29l5
%$U(CB14c.-=VC94q^Hjq;JXdO8YHAjEC<`hBj,6El31R7(!#:1<*8dMfo2Jsdb8HNd;YS'"02Jc^oob"dHu'[8#acGA8"jD!m^A:
%?U8:$=ASoi)A`feD:I<*`os;p)t*"mXJU?5R^,(;FB<)S"CqT$",0h?iV+cZQL3.E%'B28dV34,@:7-m!EE?p>#H;*)heMM>J9"Q
%<L3<[Ci1%I:(E[tKJ%f=fF[+\%jB7\X4beVUbe3SPEU&nZs&7&#6TDE_:R7E&JtanVA%FKCdh9&)X\"=A9=gpn9a*C#:CD*a`cL8
%H@$/4m-'%E*MAot2o1JqEj!g[`9r>;FY0p-SkgXS7KoElp=>]0X[7bR%!-YSpX@0JD%mK@ib&/XU]Cm35=pY-E="\%<&Ik^8hSV_
%FFb]!A2FTFj#(&,CUQ*Bc)*\=88@hsECT;B\i6G_d0SnaHo=)QV_$.8]\tr`1iu5Zm;hcYS$+%X9:[,CYSugIVaR0b:\B%^WRU3h
%2=/:koOP.`pVpj6;k'''k9)R=$#Y,3.S^L;RT0c7Sm1@0rBF^#m<5DKcLGuD*B'p;'\Q'h3%Xp[/b3H,XMl4aWYhA]El`GZ<DN5g
%)7@?<pHlCmOu&S)EO'5sR.3Y*?9Pi\ZWdkj@MG!('re&H17R66SK=cX.39#lUX<lBe;CBR61Ol,9-Y6a;;R_ckikc%g4^"94E(&F
%WnjV&5DNFP;75(?(T#KW#<#%P8Nojm#KK?R_:R2_Bs`X&l:$]4SQ>WXFmh89`EHdHF@J1Rp@m"Kq4f;&()n,kB]P0<(AI*=;9rHf
%\(F@a.]>\*hl>CFp*a[(?DE6ATi"D54dleP+b",ckp./6An3\s[[Ke^'I1g[qn$,rV6>knKM(2`X+qImG-uHiMsbj-TGFqa4umVW
%irsWF1^cQ=^KE^d3DcbKZe7D,D`QA76AA`.c>o&HmadSu_V3/<;6_j^\u<p,$Zp0.>5S!48^mQ),LA3/H>9Df-%h0s(6m!q,gW\3
%4Z.>jf5Pb`<1-_=)a,f3QZecA32^W*L0/.Ho<4lo]5U_5N'U*JMdC@g4KBQV*XB0(5?7X,'RecDQa3F67R^n6Dr&M@W^t1LJY.@4
%HhJss/1+S!Fl=N1H*Z6s%DA'LlNb\9o5>>2V7QSrGa6SqP?MQIpY:LgmU!SN>WIkC?s@Nu);ti>.CXlQJkFHY0B7?$`MTW?%`V;p
%)*ciH,m[]qeEeY$XT;Vn"/e7tFoFPnrJYP^`k_p&d&Dk1SW-6'LT2L,cVk<E`[4FPU7?_6=;]Mpb+.ZUD;h^Fp"nWnM`MhLpXg7!
%2JU_h1r%Fr75M@^L>PGe3gg,q$^D-BJaHGuh=FH(cro9rA_BM4ecUqpUN'pKZb<=5&AK(,Mm3/"V/t-LZ18m:#:n-J34n`$c%f=`
%;WA\LBYU$e&Pd5goBnB7K^I'6X*O-(-RJ*r=\8>h&cqq\l(-1l#(_UEMFZhDD^*AD<7?J)C^bG<k$l$Q:8cJKf`QJ]qD3Nd8*Z&7
%-Ag^;m@H*oW@@2LWucaTcZbUfg$0TTlGP)r"$>fAgN5jUn_)Is)CIRIagX;b;21W2-.b9F2B$a^YiVIogYip\?Kq/UiiZH8TCt$W
%=8km"JDO1B2j2Sq#M;8Grp.h(7^iUmh+tFA\&l&?;$"#4Zb)\VeQR;k@C*TrIM:edX`faG,/Z%/B<Aka#6-O@3jQZKUMR81">0;2
%SFiRp2cI!\@&`QP>M<Ci>Dp?RCq)rQ'lF8;2su'`??lA:mX4-PbVT:E`pD,_kK38Qgd1POZdg!N;g4SoQ"'KRH2Vj(gmhSrrT)@a
%i:5V!+*V'CG5>4N\tWP"[oF!poXo);C\_AX]<sWu\TiUD@A_jdlos#3@%,(1oc"q'l</&ii9@<8`J#Gf?EQM?<%SoEG7RHn[9e1j
%'AE$Bm5b(&8[&'bdo,[DG,BB:>49<?pC=)CR@F0*EcC@3dauLp[kLO%hg;djEjT%/hR@E0IJfkIZWqm!p8lqjF.X3aN`J@rc?5&c
%e)d"PrRIkp[=+Esn?r+(GGAO%s7Fkp2&7/"k4Y,OHcq3<K,VVJQTO</>5u%@nG)EU*XEP;?2f6@\HRK=q,Uh&Xkd*JNP=7!D9q'T
%nflpjC42Hrr]2oB?)`R^VNqaFh>)cQD?%oRd`\%3du2Cn?`u(0rVMZ44M,ku?`d@hn?;]\b5V5\:T_87(#,_FqD).Pr2d?V\Gc3j
%ChNU*IVF6-c8XOo]uBe[LH\CAk21Pi/2aJPO/F)6R"&M)s*.YTp-Eo[06O:1CAMU=V*e;,can#pF7sK\htgYrY.jh,!f*j`4Ihk2
%8X:9<o9f:AIf9!"o%Lt*[js7SLegL_CELgG7s;H9H$\FDmGj_n]D7<'IFPn=>C'iJho'%#B\o1Z9gmO,V5&BL<XA=lD;A-_DS@M`
%W%?_,]eTJZK@:\8iA6H[9jelXn+X5?r\=@bF[?"1Ge<O:gFpmSI,WKFHbBUtr6Cd\oOqf*QQI;3P_%[T>aV^CIJK:+1L2_o\$6XY
%BqX#)ZZHMG#"qck&%AcC&eHV,YuKR+FI/3Zj1p$r?`U#oo%3-sre'Ck<[sBH\!G7plW<W=m<>a,)p:mDjo+TC\&E9XjpkdfV;V<t
%/gL"@WI7n%<RYlPJp4&Neah>$]?BlNk/$upna1tZjo,&`E;8XT[9L&i@)?USg[Xm``qoYsX6"]9kDUF:CVBj@!kidIeb%l\Q#F=3
%7jb5ecL:CS0C:mfohTMo"EH;cE/3tdF2JHp%6%s1);icAI&PjbcsIP0QbCp6(4Dp0KeEh7AY>1_1Xf"!q")W!)FeW<E8=qVq)gk-
%p'FO)Rk1S2XZn9%5#Xj.$e+M=0<8%Kc\j)f@HW9WGO+i%Y@JIpVS<inX&F5rpQc?7f$VY4H?"'mYAb$/[tr^RYLJY1(ZBNXhgs&.
%]XN9-\C.eVe^n"Oqa%t[Gn-<>)fLH8s8C'^m*&cul<*&@jS:Q);qcLoRg*Kr-n[0T^HWXE?>>pCpZ0$DLWd#u4oHXNELM9$S#c9A
%)tU,ln:R<]o]-Co0H+a:p/TpU>q(PPainY8+l6-s:Z'CCXQ9[og@prJp1hW@NTQ^2C$5!A/K!ODF?2[6AZ#,uYMP\T+%oi8LNfHH
%V`RO`HMpZBkIpHch5:J.gH&l2\FSe<;od9oL?G1Pr7/c=L[U>^IjsgiLMohhDcaQgmI$4IG!7gYYDq3=ibek/JC=oF[%;ON91MqJ
%qWbp223hVC+1CT=Z=j9lP%!1hgZu%:4oG"s+F-`[M?H)mZNm_MAG]>Ykf`Vr>'D(`GP,RXV#$(3V<oq^QK?`.oOW%$l#IB)I!Ghl
%@/\B6qU"+OD>/7+_6;?*GoAr.(H^0X4+(SlMu)B1_W-X;VR=`#2n`k;O,MldWT+`gYM,06>h)IEf<b2^A,,BG,Cic0ZS6O+6p5LX
%Ct":6Hp2\Wm!=,7^[B(1ge#)h)0d8FXh>)/*cJl%?d%4m)Rj:HFFi'o3tP,->Wt/;B)-/%B1KA8/;Mi1X.rO"&MsscP_R+fh-8TF
%R#FN3U1pk/8M$]r4uqs*Jm\i'j5#*1SE^$S\$5q8?9a2EqH1mLPNJM6]]]p;n1'%n7d5]?0AS%K9*=871rH4KqL!eb0M\.V?lFIR
%M8L,\<SDqMjA7^e&T0Q&-PHrO%o.P!&SLJXc`th<pb+S%r&XIGU^]AS1W\SrgA#Vs4hIlu]q!(YrBShj_A@-WOPqmVfekZ/M,tm_
%bcV,)"/MLC3-:;idkQTDPI[g.iK'%SB#X:bep!2Mh@,E\ph1On3$bs<A;n)TE\js>hLdAYdTg/@Cp:a:UAI9O+frH=c"/:T4oIYo
%^5iNBs+hNV=Cf=.1qM-qq`V:Erh;"'7X2+\rts;nn!A4S4E%AThG&1/%bTB9q%8s^+?^7d=22Cm5IYt!IM'PfQgDsc:'6ls"o:pg
%B^tK7f*BLlcb#)ceY@&,=LMd_N3Kd:[^hUP7Aet*\V&JeYf/t&/K`3nHd"P0k1[L5#"!7L*qO8%^:?<?0-Bns5*V[(s0e0JdaE#2
%g1lp4(:QMPp/&;:/0:kNBr9"ZR!\'TFr+c*XL:n'qV_*p+2Ld%dpB$!lo\B*1O:rh>,nF4K5u!^jlo%l+pI7759A`P['MukNJr"H
%eL\Lb70>MeXL@h*D*'Vj])]Fe[N<*6qP/]O6Nmg=q=):O@_Cd+>Y'GB%ulnqQA\ZH;aR%oc*:\?A0HFd)H\[jUY'iAkOA?AOf2"C
%Sh6(Z4$_>(W,$$jOM1$4Y,?c6T.cVE0Z1T;V,rQsmk;AcrM`;eZM3^BZ6N222-#J/+.;<2o%I/L).3p`%n*!/6)j\0^1j\;PVui4
%#I9,#atu.]a]UM,U\'['pX=KYA>ruI5*Ba_dgXHQdn<Cnb"n%8-ZIC</YN!9$@g=mT!X")MrX'ti8sI<lY"j($[7<X4=P,+(8ml'
%_)GBMHG#pf?f-[YSDC`J!5=JF$_.=q_pQ`j_`r%__2<G\*=7*C_M3ui"dY0T9S9%E\K@U`AIe*^cV$e)iJkYa.F!3\[H!!s8+g]>
%Ou>t6$S-]@do#Jsk>1hjY-'VYGWk`epc)aZR^r+L@q;Y+c^%mS/oKs$muLhu;Z#p$QX7A\IY/uXqr-pD?dRT>j4U4,hPRd=/iK;C
%2j2ICWSR501&K:g)Q$(TF*4b:3IDjk]m0FAAsi<6c[S4_E7s!,Qe+!FDmYk&/d;2":X-Q?hAA;/O.T)8r:AV6LRm@-Z!LmTD.R=a
%oD>klX7u)-"MhV*JcR],CP'(M>$]stGN08/l7XdVI;U[OI5QFcmVmKa%am'19&uT&eYcXm:M7ks3qpApV4FKQ)_6uZBmPtu7a$"8
%[40oTO[q[*Mf,gbn5Gp.NAE*$CCJd'CO`nOXW):Fb^K\k@ccA8M'6qb"#AoN\cK\'?"75)=ao5#-?CZJnIiCJ^%\#0de!45`b5,:
%q9)sPFr\gf&tJe=bk]:cH26]!(/D3<)iomC0OShRgP=`mo&WUjW-Z&N@&[#Y;D@<XPB7D(L?Es[3r64hqt]qU=T6-r`G\DAVc"+M
%Qr5$q?utWl+<t2[)0E*gpY\De=L01MrK0d$&`N$\W'K%F0A>0unsl3'"b.h$q7NuA$Q@2Nnt,f,/(JA&O&@YH^B.I22IcVMk4`dH
%/j+T2Vn@1Xs0rcWGulQ1]"`Meg=hs$`Hu\'aX=]BUhZI%!lG*%iIg^Ta7]>.JS\0si7/4iUR!"hgpsi+\pO%oqslqDCoJ$&ROLIj
%\i3&-c[ZCbH?!p$#UgqsI=D4Ip>Lg1!t_M;h3I7%Aj7g7n@[Je9:m$Xh!4R\WRp*r%rRckqC3D;9ArWcG3HEI2nZPZ:DRK"<903L
%pVkb_rOMd\="chjRjkJ*h`ne=C3)c0_J,BLr_r.C+6U%XF5O^5c>T4d17rs.G=6nh\X*Qmop(rr#6ep!<2Ju$p!],bhYk(=mVBs]
%:=7M70$'=pLTK>p2Xd4g^Kc6Zp]Q.=m%\X^,H0,L[c!qt^Lbna)9OH2L>QIr+,Z\L3/8\_eE=h6>lFA<U"i`\#7@aVjQE!kb59q#
%>0HTrDhUI6_+(F"BWX.LOQ^MBp,6+)G5PhLJLYN\XZTs\?YX6(E`q/6e7*&KmN[Kn/D3h,Qf\2@bCc&j8ajq2Pf@&lGBZ:gq#%kU
%3o%6+8/inD</[K#r\7M=/F2h0L/]3W2#\mQM2t7Z4!bhaOZp<[hLF'E+jF7Zf),+%l>l.<_<UUN_:I(>&(Oi4IW/7)h5#/mlf+D)
%[E@c$\X-G/nE$.S0@%7*%Mkg_B9ukk,GnVkp[6LU!A/.0k1qQRJ&A$44DDGfSpk4B4@OPemDJl!oX'#(RO_Zcn\5,Dq0H]Dc2LI&
%1\`3dXC!SteRfW\?@G&[B^Y@s46H:fk-BYXdX1knUbNRgF:@_ZkQpT7*ZQN!^Gp<_5o(\@2u;X6T=`qMbhhX-_S'0_?NWa2s0d$^
%nL-Lo1p;?5EH^u*'W?:7"\^SZ%6E:iKC]":#OF`ps#>'7f=ITg4Lr.Oj8!0Ik3$&r^XXcnT\C=EkeTCj%_Z(PhLFl&Y*$&/:h-`n
%^1Gi1p"$aYF\dc_LZKnEDC;*$`.gFaeMeS]l+$>c;ereMBRp)5gu;U"=nmr17"9Mj,Gnlns8LN]..#0m"_Hr?f@#CWo"c5oI'gEQ
%W-pIK.@kVbJ(5TN&F"=M5+"jDK9]=oqtq27$oMK4C.1eo]W-0F$E;oaf:+;@YR+7S(@R6ufA2VGI^'7Cn:%^n.d^$&0b%OjH$%US
%;kR*8#BMPqI?:QmGAcKQZ:!+pB62W-8H&6g&$GM!ZfLAkX07&\^3D0YpRSP$ppC"E24eNUU1]j^T"JEH;#&G;*7GFjI<_&D&;[#U
%9+ALXM_#;DL`24Gf_^)-*F!Tkq[8s:Y?>5OMl6<^V+.6Yjb01sTsTb,hcne*(@Gf-HPt9$&#D`A_3i5:%/+qBXk%g%4L=R[jqObh
%I_+khGsg'9=fMC<5(TPOUU.NED*:%]JUDgU[8,lVr;Q5W4(-lo2$4S-KN@RDq"ICC%NMB,8(!]R]/%'>G8bGqH1nmoO']VMI!uI#
%?7h2+)Q$)=J%N5;=M:&$cqf\1IJ*i_]DQOAj\#H)"O-M5mY?&&.$8Z3Xr^?O]([6tR$S?K2s1rEf6+2rG8h&$0MKqt[-nK*9$ri?
%%g2(&X&I>Vh^kh[a5-Q%m`mQRHL"m\l:9`l8\HAZrOA:)Zd+"Kg1qd@,QtC0&$IHY5m_@QoDAK^F-7-Em[##+HDE9-U)`fGHrKPn
%.-''_X,@3Jm+_K0g;RT=a>,)9TU#!JB]uQ&-"Z%(BmXG(cK=&6F(cJdd?SJHpYA_(>PoLA7<=(%5X%&hV;S:Q1N-TLH5"uPb>4H8
%5Lt9R'C>J4Kie9:o(2#P^Sc)7PMK&2>HQ[`=e,Na)Dk@hC>.,mhl=Ka59,4khJ\ah)WBEoQ<\^EfY.%Ip[[og5#D:(V=l>*lB2-*
%5M2O_IM:O\gGbH@Q4H=Rqnc&,O1KW/mJ[H[8b^!%0!&*--rXH;Z73hcKVrt3k1I=&rG^0`?D_69=NRIP]3T2(TW6k_om(`=&Y5uQ
%W]P:5Edr/00roJh]_h3$$"q^k)Yj?Baii"WrREQnqM1HSEL2W^g#gLR5_kIbE/t>`nql]tR!f@?s*C]pgcO_sHu<W=cha$)@O?#'
%B\YP>f7*,i%c?.J(AFgnpf/a0D/&1@h&2k=5$Ilq%\#\3465Nl9Rh<q199eb9A[P/G/fY:pfb8@YZ&8CIo'F<H2i8k'[<`<G^&G_
%)nNGVSobbAh#WAt[fSVA;RNn%r$fWk&)JNXo['%5r=6+Wq)D`,g\QdSmXpe.[oZYj<dj*$]>N79HY2/rB`H&ahY?kGR*GKm+(l(t
%HET9b>,ds;iR3X2pZf2tp1g$)p60C\=.fr6=M5)AII"enm/-!S.<t1)Ak8ToH01d,;srL$hk!mj56M@?$EUE72*>;.b5I*?Dt`=R
%*gT%@hquY>><3=`rucrScPj]N[=#JdRk:g$QJ\91"$HPIO.31Kc^,h<S';I"XUGPk4Qn-R&TtHX_j.p+Q#OMcLSk'$b/DaIH+KP&
%j[2`0(UBibY;Ya>R9QY<q)VGh5/+;4qISrU`_5hlq:UaUDm2Jcq!R>@[>h(gB("L@4kNK7._6i9SFDMN*]f*Ss18Llr/p[DS%5#\
%Eb-hVna?%lMs2'rht.?4V4I$Hp!H\TlLg_AXn_S3a'8)M>I:27D,8QW?i40_3NVpnQ2gSlOQJKlIoiL6-H#Y'QuD`mYhhoW[/R-c
%%sH]mhVkGhcY9.pVt/F^?h3jXgXSpYa]I>sf@c*O>kDWRFdHl)@+g'BDj0(c@$]b`X&2Y7Vi?(foE2;?8*AuCFsO6K7B>+A*d1`-
%8\+LqP:Q*]I`?]r&6(:@]\Yk4rUY?AFug4X\9HeM)!B/'+66THj?(Q^s7;D]>u1GhjshpoeEQq^l5VB]Pdd3a0Yr%!,1NmKX>]pb
%g*%(HrTN/@,'->fq@*3=Fgc)\*iHBs9&K4<(n,WnIC\RQ\N2@>C8\I@l)e%$-_6I/)pY@Xbc,31l27(r24V##o+k"jqFQpYQ$G'F
%k?+'Tbo/a.=f]C/f(\LnQ6++S`o?nH5E)[B\'FmOZ8)[W"7I,`BS6.%SB@CN\egs[47Z@S$-ks>db7L/(@.BDG3?(0_&U1%35kph
%go%OaY`9cQ(^,aA!R?u]D(^rM:BkqV1<g.jlcGsW_KN-2XAq=GN=7J9PT?!t6T(k6o%"3*L7H*=1?<]2""i,GVc,g/;<](6:&aCJ
%c%.UrYi)=57XosMB6q8(kfp*m,PCrK^HDOen:7P&8LkumB2ILQN#q05q`0]A:<;YCl's9WEM?&YffAC@mklWg`d+bZ:9]nP9^T"S
%HP+h8G8%j3:::MFq/hUC3^M?^>TI[n^P<5mea./3OlfV[7OqI$h?84/?QZ;9G2BMErT?K7-8<NKTf7jAh^_dG.sKaE'CUS">Qp46
%G/<@J"XZ9<dCIkkQ/,A#LVS$?5Y$Ob@8`2Rg''H+AA$a8?\_4Zd&iru!]Qj(9_TV$F0$2.ZpLUI57ZO#\Jf>(!mhqt%0,/FIR=3e
%DtOKT0EMS(fb3H?Zj\#JTMf\Dl:p\JaRK(p!_f*od"EtcH7^,8RM>$dZDUT6<4Lh0X<q"_[t,p3"RYo`LUc9MAso5c%gM'^ANmn;
%+'.4O+"XAI/bGN&q!"+(g#ClY[;)Vr^>OEIHD<dC^J4FYe<@XfS2aS1X>c2\ZqW&Sj]DZmR&-LSZtFCm?p<t$EWM(+#SZds1H0;c
%PROdb!R(o"E[nq%^XE:nNA(<(aKS=TNsLMF@A1dTNDdsq./CU%V)/jej&Uap<]V*32)C]pcEBKUQ:9\*%^=:$X,YiiM)nZ(8i']/
%NLHDcT3%aO2rOrM8o:--ln`#+3Uu'pg\C"MSF*f0k@_ktiG\N?q=G3s[uCbf7g8`_:a&6jqVH/jR\J@:Fg&%+,VK6RU/=@k?a#_&
%Es6Hp$a&),ipB)(fBM$_>j*ehm"`;9o^8p?rmc5m?PQ3#oHQoX#,1M7pP\Mop`oG/f[0Z<5(*i2`EIujXWnPa^'`d/*EXtRjhjX"
%^M"<b>ms)1$F:Y/0Ekc^3<&;PXpk(*\=N^*VAS9iLt8og7fp$QpOE(lC];ZmIR2'iVX>2U]d6eIrao,S=]D2(IgT/V%"?#A[T[r'
%q`QA*i"Mac@>[8@6qC-.GMpHO0WVjjBQP6Pc4HuaF9?3,?]9jL#kDeB&EMkqQRm\e#_)hFis2IZ6C%F_A#Q)QZ/K4mCl0S!iOkm,
%)=2-Y[^\"1a2JUMMn;IR0e+"Or\,[LA](^V:X*]1$=QFC#5(;Jegq4JCE6eQ%BEIBO2(`l)-CQaMLe3H=,\\,XnH/>+G,6&CshjJ
%$2'574=gP^TTL(\_%L3:Tii<Lis9<&4,,5<`EUutjd"ip2S`&(.7R11TihZuJ?(D?OWkM?!)3[cafL>W=t@krF:iI#q_:rF"VFK8
%VksL2ZNb(f$j\Y?`k@`NQP))dI/";N,P$FEd)h1srB#fD*)D4qMF3!6+a8MiQmaXF1lt"*:p;i[CdcJ?[5A)D't/tW%j/lF3l9bm
%2DlGiF<TE^"mo=N+U$B`H#PMs.!boqAN!RX^_-;K@5'Yd3X,cB`$GDc.69[hCOk>*`fl#c@mqC_<J9CB@-kcn#dN*GN/lkU<2>GD
%_%T4uM.<,5_JA6.9Ptb>M&M-&%tk!o)@d$0_S\W:<IWl<^+mtEdkm&dJ.OgR%gXVVp^+A!\M)l!"sggp.Z4&]nBM"H/%J9'&%bk9
%<X]:e87qPb%_+$%$oKip8ipPI4Rp4(+J?g=K)s[0,l8"X&R7gMKfBDCUiE_3/7,Dg+V>A!S;:%)>9%G\6#\\l$FhWq@0AMk5*I?S
%5"$C3=C<r[`Ag'fF[R=Gdr:q$p=",tqn-0IJ.!SHZ4V3,b_Ue"Pub3S(jHcMU*t[PHGYJcNLU)93jOX(dTScg!/5uo\&L'<&?Z*0
%>?R]"+B4eKC',_jA3Q,f`;9Qj[5d6*+X_'q^<X`=TEt)HiZg8LN+1cL3C:AHKopO8Cik1m_j;$.*S;8%KDq!eXV2#]Tk9+DCJ+5l
%\X@"1L0GZCGJQFU4;di<MX_bHmbsm]`t1=%1h13acaX:C=2?ceXH'5h9T1Z_Mh#Sq#E$c*5YD9Ro^`1H'0uF_bWrDH2$?c)B9sL4
%2DdT,c\)\L6?\BFcrd38k0qDg&IW"]\tb'k@PYH>T82#`^U-@(a1MNo1M5XnW0H(c,^7$LYS4[@0adT@q@PeZM"1!&+K9$uKYU&>
%=suo_6^3QT(g:SY)^BkLdKUpuBHW+^IQHBr"u]F;]T#q4O>pX(!T?b7&1"7@(rd/KVIN?&kXan_N/7]^\;HC$a[/?^G^sp*<gpu^
%Y7udFj9_6YJ;61E_Qo8[_Z"Yue&;o]>):,Bqr8'FLZSmV!.n1-Z0-ZpLK8A&1f9^&;TC.Ulidtei8.WbI['BtFF;Cai\?#T=@=PZ
%.1ID=b:GrR3(i:u#o0'B0Mt8D-U9[^BV;bC)kU/gnqmqZ?n@%hddZN%"QY;&OEbajV>4Y\p0BU!fahNI%h1At*KV]NoU^j]TL_H\
%<SF]Ji8u1U4LiPP$:BH9#C1QE.MO9N<bYSMJB@:H!%Wo>88`NC$amc]BIKP;&FU5u'[\ho$*=9\d=>gtGVD`h,2\&I=Otpb^k%8u
%0/),:aQZdY#lhs>&UbehXKS&hGokfg!.fMEAe.Lfe'#+'H3G4HY=OY'24MBo&DVb&TK%`YGE$J#:(c-L&igi)6@]?"4m&n2N<PP[
%nY3rM3BZ=[.K!2`W?Vo3c<*+M?o0!]$"?$UCf-SbJY41i9M,Z\!;6eVj!#d)C-l/2i]TQLVg`SO^5pd@?t1UsEA7K/,Y5FR.-ln=
%+LmbhgL'<$HrkFNn\'`f\T;^/RGb26+bMljkr)Pb:r!/eJ;Z_RH]^Sk827fOIRH7UNnf0WZt<e@1bqJ3(850:$2f<&<uJs[(aG)\
%-\7n#`>o#fnU[qXNq+Q*Kn*/DdT],7_pnlE9,'$;a>&4;Bu@g*C1;"P%/V)QSfhLe)M+[gP8jji6?&ufcO_c9'[901Rq8I`nsYBA
%*,H-8<Il<uj1(n`!$nEZ/Q/-743#!ChWE"m!b@f:DLi*sf`d?lTKW01%\/W;4HII[nlTLeU-gI=\YX?+'Tigh=QK=(^;h3;$FK#'
%.V<D9Vh5'"f*m5<kZ%HaZGSYr)+.9sYuqo!"EXr6IH(XE_*kBlif"JKR%U)cQ\=BVU8iaP,7IW[Gt2C@7C6nPdtDE$P&prZ_$$2M
%6-(T@%"+0QW,mfS"Ee%UC1>(_</6!h'sQUa65lbj-s!p8RXJ5[6W.=MJgb1I6<&\@S9+e06:EW0rI1g^U#$G(72@Rc#"0do)N`LC
%_eBgj('pf[)9.XCNGp/iecdn3.oo/TOGt>;W.0sSMjX$3+rK633f)F]L82XA9X=rL#N\(@$OJ<$]3slq?AOpmKEDPA-7I`jCkui=
%a'&oC;hP9;?RjqW/S4gQFboBKKVLq$71dniE&sb'mYBNECl"T3Na5.L&e7qK_agdd&Pe<pG!R.6M$Me!NaO>j"H5/l?H%[l&3l*]
%Vt!Y*Krj'"p('?@9l:#3f4TZ>if,'n#=1MY0jkTd8tqLm@,6`++c$a4J`3aL"H&JsoB>Q1*>Dcjj9US2C/NlUL'pFEVH+:=>8,gs
%BkRU@]b\ES";IP*L`@9R;@8"bd2iik?bQ^mR[=\t.>W*X`)iC4)(+o*6NU6$SBD!<2FC@378Ou7_/os97W+;QbDKfkVgSZq_.[UF
%LhV,HBjlfq"'h6ZL7Lh*1qjFTMLd1(L11[Hpb>plGU[#5!YN<r&;`\=Z<I_MTB4N%D:pe*N)(RkaZX$.!c$gZ6Xod.&jMg'Ju0Y@
%!R!VWN$+(ZUVeY-TsI4P"\G*@]8](P!h2It\ZI'2A2#DgJUicFS65,7*=rT5+#lNn:[MfrN-Q%[c@BK+E;CfX'@o,uMpN.>&En)!
%G6(YY'8YI2#kH=fP.m&SS<At#asU@d<\qgOIR'JR%rg\C)Tt-e/5-og`WJ*jIEseC$-.!7QKRqn>`ug`Ve$K](ns)fBd;+'L*<?5
%0ZY.UGW6L]@5/H)4_b6@OD>[`L.&;.!:_5sC31k0,:cMWUBM;%A]ZifUECV"AJ0\s"VE\P67\]GQm7/ui5oO2?C1?p,KEi@O44)&
%8h&ES1e!BL4J6t?FjO6$V]@Qir&asJ^Fqp(7nGd<Tmg\&U:68d2q6jGMqK"X.&s$*Wq-?B)T<hNd$1eQ$W`3PM[Df;GY`k<*C.>O
%A/CnW>64t:..hC>hfUdn59O?eSd-4>PER+s]L9C=p9u2P1m)f/%O9#WiQ_SUO=`&u!\sEi`mYgh1h:A-7Bk+mU*^Q]Q\bg&MZ\,B
%8&?]O@C=1KKMBg&`TmhX<;<!g]q1ah&_]<?2[VE.!!Uqn78Rf&<$O5UdjlA.6W2/(BS)%+b!FC".U@I#VcdgRSed:Pck/[aUOa6t
%g/P=2%tMYXPeJ'G7fdf7G;tcE:_c9XnUkpi;6pf=m"WJ*UPpDHq8)PQd!F1CZDakIq%(Q,>Y,4L@)!&)"?'-kq`^,]a!N+E+>aS+
%jOH[kZjngZbYW-;7G=;A`9nM5`:Ho^(GU>a3g<3$X,IFaW+(#dm/X37L12\f+/jT)=96^_nKpV:5_h4qo;EK1#6#]2r$[.#MQ9[N
%C@8G0<Y3BDXGkp:7BWOb>Y'MPnmWQPe-#f#4Cm=_aAH@JW2,RMcA6To,\\PiTH&7;d>6'VfPiqeh5(73SS0=i,_BLO(Er'H0n'F$
%i[.(HVL7W$GQs7<qZ+ma:dAPN8md4.-36sq5R?'5"S2(&BOaLlOH!2BV_BEM,)[[iVONj<"I^:L-Unc4lbn"ET$k>,H&\>J>jnq_
%6apa-,=okKE-R)6[$W[IX9?]n,YtdB"[BT;%*&^0Ncm8V!HgE`=;n89Tl9C%e93/>K)0:c;`p!]^;kQ3(WE[7ZA)8,Vq\@B94A[.
%Jp52:7I-eJA$&L3OP5N;,ZcY238GmdI`Q9=(Bf=(0P!PKpFC>H0WGP.+8h?l1,Hjsq6>&7i=JmoAE6j'kf&Zd#``Z9%^Q9>W>dqE
%,16k41Y,,'"o)JHb!a+oI.f)-&K";s!A\>.TQm//fR_k:j"aXZPe^O5:b4^Gn"g?>(eX/%?hOacL(8Gc"S#D/!R[2oM:fgVe]"iC
%"uJ633hP5_BKmmGH%9\nZm/W\*>o#@&-VkDU'Q0f`WF2@CjMZMe@(7:]6QSjfrZ"-%ch?DYgpHa*I7.M0DgZ`nuQDX10^MISe2Xr
%#s',!mltE\Oi,C>7*eBG[B/^;njC"#5$n+WHtI2T!/L]s"H&&Z!@Wh"`jlI2r%=.pa>GEa!.nX]@Wu%pK*>l&VpJSjdDZ[iB6&*g
%#L+V-IZTE!KlBY8'%EQh^<@uNA!37>eU.CgRY8^&]C5u<QscBKaK];Y4H9hHi2Bs)nHtn.*ARZBm:50""DnK^WRUd*8PY!]46#Lp
%=CV^iJ1Lp?(f(/n6qtfn,"5*^5XR+rQI'.BG6/;-@PF)Z&GR5/(IoWf5%t;H"6Zn]>a'1MT];#62(3u5&B#)ABc,EslNXjH2FF.)
%=<B)^_PINIS-0PX:.%Dh-4Vmp1h[4o@f^]jX_JJ,biA4+Tt)d"Ln#]+6L'@oMh!Ws<K_\DUF43oCDf0$TqBsEi<,;&:h&KA^NJse
%o]D9P`C'9go?Toe8(SQpQL*m8g_"%"W5_d"K`k&)MQKcj`0ir;8;hI1+_P<,>9>%@=:TdaZ:+im._&1Th-rYTL_T#\,aK$%o.^]8
%WW4=W=>n@8?;Ub+G)C:WLe%&5#-f#)ft%^@4qnJpiCIFd^A(Fe/BAu1+A5c9$kF'Z#W,NBBTZ"8"GQrhPVi1e#o&<h>839ON)emT
%DSVbLTckm4aO&%%8UU][p\4l\\VPN>8cpBd!#@9d4-X"Q2o;J7UbL:8-Y-6^2aCU&K`X._N"!-6OAV].H94(j_WJ?pVk@W-[##Y'
%#(fJ=@k:K-6<ZYI)*p!VYmTN0kQ1r"kbX)X'k"1<)H2JT&fUfS49d/OP2SZg(\1rYaM^i*7?XF?n8"qZ,RJe`M(DWa&;kX>^lShs
%aifVDl[(BpTI>h4SL"D3Q8";@":lVcPqJLm:1OKJYW'S'*\Haf7Rn$.SiYtG*17WZQ(B\AQLL-)FqV#IlcocraW-JHDQam[;*8V2
%#',Tk2T$D,85G-6c@U/W'MV"E3V!Fi'C5=#eg*5Tk6ZqS^kKq`rpjOl&Q4FHAV9.[CdMbKnI3Q5@uufr/th]k@S-cSN.?lU5^]l)
%ntXY6?,WV:;WL=n#j?+6$#IDT1IT3WQ.j<#3(Fe"Auip][?Zm=Z%iD3WYsfS'lRPg&0BObF\i2T'#F/@7>5T*5N7ErZ&uk\G(C7j
%U7%f1-QO?E/;.+DVKD2SG)T8mSj;MTGC@U1`M=Q=on-lp306dB1<Nn"(dZ?X>Oi@\X`LcJ>#e$?0rDa6Un"iEjKH3^"r++uGQW=#
%m\ifdb=3K:D^9W@"o(P\qRZ:7<"^]Y)(u\/BoH7ohae'0;BM\ffQ0@$HfBW&Z3UJU0i&b,Tqh<0SM^]/(%<YElb[X8lnOQtF@sD&
%^)KpI*WnET#8KgS,t,*`1.`QT8rlXaamrS%;%h;bO;8DHfa4GVU&I#p&d@*UI,@eaE&4?tnKa^#iA2lFokeA9Jodn`VT;f5`ji(i
%HACu\NPemWbfS`J+JarmdS=V@6H]W[jT$GHOs1,+L(%V9IM;fshl0n1(e\64MaFk@L]iL>SsGbG@L-]7:;X=4$;fcf;J;'Q+MQpA
%7"H_<OXo,<S!qPVN@mrM=s<'gi+>,`3DrNlG64bj)<#i&N$`+0.*[QrBj]AHfQ2$D9i:C:4,8Dh"JtH1dQ5bt5p4'2?GI3XH+?q>
%B$Lk^P((Wq85u\n8&2#tp'_96=l0EM5t?Z(F4E)rr!;pH/!OFe]64n_,7qD>&X4W'J]Q?bYAsB(6cV@uB8d,#42bWY&>"ofW>_6=
%'[Rq?Js*JPlb40KEQ]2RK^$aj4:%R4a+OQ#58&d4=oAjjcD21X].QboH#<h.6W)4e.S!olQ-bnZQjLg'2rj6s?AaVG=q-qq#f$Qn
%dQoRJP8,@d8OI3fcs_b$Tu\G.OaoFG#;6ffMOqgRg(UB1+j)gi"d:Z'1/3:sKA@?kmWD&:(dK_A5]jp=74;=7Pf6#.Y:+55B/N?n
%B;h!nEHHI;0+!^RCCWV'"-[kQ&+f?Y$7j&\I*r##`c@:jp0uG'.5aIZ1;IKn=2lXXW&X4_NpsjIF@D&sYtYO:RqL_Sn;<T4J:RdD
%f<u9*%j?fj19=uPA;"QQP(XMh0jprGPZIu*'"q\uP#n1&^M1;'k&EhBn.d84TIHrdDF[8JBPG;54;b>)1<8>>[-J$#'l0:dbS4=2
%JJa0,_agE.-knJ.4PVRIAm@lbOGb7=\:C%b#J:ZcVZI!GK3/[6*TFR<1!E@#,N!d\akO\K-0_KcZp>8`]<J9or'l@f'*i]!U/?`7
%j`%+3Dp<S01$!Pr4FkeT]^'%l=TEmg;EMB`i`Q8mi3%Oq$&J..V/)ki3AY[d@$8."8T]Y7I"R5?R\MWGJV!qG5rdcdAG?AGo=,sc
%Ag/]c",t-46f(05`DPi.\<3La"/lM`8&[bO$AJ++:P9q>CjuTOZVW+\PXhN'#:QoFNg'Wu'*jBf-$To95r/c\7_uBA"+[%!ndP_I
%5!,D,KWLnnah^XnQi9ChD8T[@<5?/6ZN(%OQ@FQP,)Em-F;c=6s!6GQ%`=D!k7f(oEXA.Q3JNB9N6\JtA!Q&rB.]0l*D5>I^2l[G
%&a_Nr1X`S7BjWQ">t>*P%kbglD?Nj^`;<P,Vh+ao9kMbW$`>D5!?6KW^`\S\F)$5J"Kp4V;%P^RZ(\+0jO/R?,V;1'Ll5U#85ade
%)N?X@,WGt($h/c%W$*r?e=9!&+J1u$GXP_%ap@[mUZSh(TLh`*iaY;L"<eCK5e7[81dXJsoJ:S]fbU*+KT7h[XW[rmcGtO9*^Wld
%Q6hPa,_VJ)PVR2hZBtu$9,5=:?eM]8agQT,auNcpb.ka97OJ\]-jnCL*s^d>+jigml<$.:M7'4"9"b(LQ\`V^!DdST)=tlW%61sH
%`8;$=<M;qfq_?JT7ZapI]9'9W9._dQG;9CV%^8*?lg^F<O\_XcM4q^UrfN&n)[Ls,s.Y5f\41aTAQh\\7u@@n'=qnsEe57u=]o+5
%Ljt2ojDJ)L\6'jX""0c7q(g@2O&>mc8Cgu-?3_gtiF`sMK3^ltn@PL,\XWd0HMWc9<[bNb`4?Oe>W(^aW'FGc70k>!)N0)DLD3+r
%$!bOP1G'm;)mSo9$n*I3J5,JkaqkSps"P4jST!<'@\7,:3OC!68\`<EF;PBdkTKqX[,TKSZupTpD*fLC7'T;K40oqj^77P5.8"\k
%UkVcSakYlK+/9kc+KYad]gGa[&B"pl+Cg(T*0UjYPmB[i'*VcC0P!G@I]N`Z9do'3<"ffL`14OTYgXU9L;RVSGU'2giZKU99u$lH
%q6CJSJ.^CG["VtaFK7rs1#&WbFWdC]O"It?4<be.#te8h?\q\+KC1bJM-3!>dfu&@6\]Vb3W-eZ#-g:9iLCmE@Sp0\'+UHF7ESnU
%EC-mEG[A\"VPmf\E97uqB/$07Se,:%9B>*8J6C`_nm$!KE)e*V,RuOQ]2\F=mmr[&MMWId9/72e4;GJti[J5FE1dYI7hq5e64sQp
%ka428Kbe/KY?!'8_GR8>jF.GAQ4MuG*p2*OSgP*j)ja2135Z[!d3rlLYqlJRO*?/@UR.-MPV/A;R\:FH^mlI3%\^p'a!1lM$m,Ej
%V`>mU#GF-06+eTm5pbt(8Ie1B78FoD+=?neMO!Zn#ue,`Kiq@"4%W_9M0fN6oXmNpBXB2mK`U$,!+SRZRPed"1+^GsPmHk>blP^R
%Th#X?`WH'8hV8tTT(40q9b'HqCue-'jGUt8!!<E40sO-V!G/:8GVSE)YTZ5X,S6pS+Wh$RO($quVSk!I&qog+9_@[rZ/\Ih5pCLP
%&;P6&$bAr`Nc$ct]2<+f"QF)A_@Mlhj+TNgd0[K_:.(PL(@=al*@P?g14HS5G0!Vr)%lB6ph20\Q4Z:cS<4$88BE``$gj]7Z0A)^
%RQS+\A`&-:<&3'%;aMBT8]u(eT-@EXSBVkJ0nMMj?R12ce(".cF;nW0jAH"14\eur:h9go&[P@fW39&>LCCFUTA$*oLBJ&(MUF=j
%FTPOnJ3b>Jbn*:"ncY[(L\)$9%'"lTd";rDPO,%N0[V<p'E]r^d`R:#/-b^u+W&:Z,3uT,K0f-[%V;tYVdbH:dO=Kuf]NLh?mppc
%E7.^\RtfGr$28,V,U4RB=M"ZK85F.YToD2S3au_]JqVTgiV>72@8<n6IeQ+^%?r]V`ek=?a!g`a;G<4bQD!SB[]'K=VPVn##Z@6F
%"P0GT<t=D/$BY)%\=B&9\[,$C`>Ja3F4oL8;FND==S1'EMsHD[F:lUc`6h1h"+qG_8ED&4&B]#uCK<b6,h@qJR10f72.Y*LN3_]4
%l%/g`KFs@Kj@P:C:)gX_HAtF5*YB+*;6%UF'cVU$8gco>X@C[$=:ZI>&IJno0,8q"LX7n)gKW6dR5L^+2Nmu/;Z59SXIP^jVB06l
%Y@:'5#GGNO#[,2k`9@_/#Z)Bb*E0rT"GTH/MT#6-i%m:pOZ#]Pnmi$ln\o>Q*%rQh7S1,jl79_&ili.-!&%C'Z%YHo6<5!r4jIlm
%*[f9oTSeZ;<h9^='PSP&e=%&eK[r\0+=P:"84Z4%<IS>/Js?'ZJs87fal"Y);kNf#![Vr(_h]27(ng(M%`@r4)04g^I0UhNZoIb*
%#XPY6$-e$ZBNVP<8\kp(_+i"XiB+L[,*ffuep!,\9s7c1a"P<:+\:pLfp'l>0*P]2NAjJo`L;@<(AJN30sP?hc;T$#emUQl@=IT`
%W*79lU\DJB@54iNB&*6SB24!@MS$SBlTc)IgYk`f'Ng887p2u"+NgPp/5*8h\^ZlVV2H`piB(ZDSeJG-.I"uZ74_dXYS?Xf!)*0L
%FTI"lFW.-U1UnF3k;NPOZW7/?O_JA3'hXQ-5h>*@5faIckmCVNRR,9^JFa`;3VU4KO.9R,j).#=P*5a#N$,q36Feb)O!DrC,BAol
%&M;ST;LCbZBZ1)FdMTfmN<@`mUp,K/3)3-/TP%hja?:J2&uWe!d[-B$#t$X)V,*f[kK49Z\lo/<BI*kSS2kO6mDN#c:,cc;`5XV<
%9/*7'`"a6'$<*oj;'&'8#CsK!%A"/%F9]np:j\8M*WQpG;m@2ZU,J.m4^dU6F4H5`'QFj+:5&?:Ps)aK6D4V-^Z?l>O2n.HV^_0s
%Bujr]3p#4=cB-*"6PQWL*-i7S^dusZM'V9*!'ZuRU3Zt5^_t&^S-jlE(V_]t3#.36L0hSlD?'dGmu2F;Wm!UnPQ75*%b?!B!fHS4
%nKET5S>(,rjGBt_#'hF>WjYce'.C+sONZ(WSAHM!@s;gqkOV=RT-"n!WobGT!TOV&&mS`k=qN6M6liDOTL=:,Q-9E.@O#1Z%Yk3i
%W[>.7,Bg4fhjE;ob3L=C6sIqQnCTUXM+,,rUc>SBJl%=T@1GT!A.j?G&h.HJW%_/o"$O_sE/7=G/*,(r1'f?cKHRi"#/`/V>r'GU
%0Z"\'gfHq,80&$E&=rSI9TXVboYkZ`Zp]m:;PC%B#HM24he`LY;hG1oc<?479@X'Ajie&_ZJ`iDQMbk"/iGO!KT=R?9sT$6[<N-0
%UKpMS'3WV#Viqo;c(sUoT%*lO\/#5`W:;-(mc,7#I_2[m!\-S`I3l!aqu!OV,+F,u&3i1o34.##MpFqV*!V66&<u`<Z1*msKSZZu
%Lf6i0`XFV6h6[eb<6fGP9Gq[nSNCeXM?_2QSjPXe_,0itG%c_aM"@pS0e)Ytl.k:6`KTB*3V^s%ajm61.'Z(S+<")7hS@(\q>W2&
%_3`@sboT1cPCXEi&1%G3I,s:CJ>bF=:9XFEY[th+il[H1XAEBOOWUB%?Lh&d@C[GZnU\en<c54"4inT%RTq?#[qjJ0+)XPgD(3qg
%!i2oX&T7pl6uE"HI1eb4/GYV`%hq7rF7F?G7go*'S#;3M1=D1f=+6*\HD,]B#ck3?l)q/n#OSqXE`:K>\.!J=Dc?cj5o.J3(m:S2
%\@r&<1k7u3_+;t>=[)ZM1"2=h\aR)!InJfMGD#%fOn:J82o?09li@]TV&=YC9d:e,A\Xtb:Gf.Y4uJ3Wc=69*/UjjY;Tpk8>!bUu
%HhJc'5R/p2Q3p@6m51MIil5Ls;qeI<3"PkfQ:66,/iT+k>YZr<G#ik5Y`/Mu(512.EG6E4AO&7q'@DFi`RT-"G0tA\9!\efJEUPF
%+TXa6<`jQ>bTh.32JOR@XF]m(CM@=,S`USWrj4H?8]G!\?h-O6/6tS>/0O>8K2d-<ZDG?mOs1XTBMRW4V0it,ha/6J(?Z*<Z7pJI
%h9k^"pE4PhIOdYq)OZnIfQE1Ue&*l?JPoXF+Ej)&ig9Te'+bL1h[D9D9I^=i=\;HqgpP[;4sEVj?mq>2,$CKd+Op!/7:.Z+Jdgg<
%dITs7C%qN3o;=q4N>Q^h^LVO=k7=KEHJ3oo;7#f3Q>\$sR.MrPG;?G-&:#0*E_)D@B9_scE@/6*@!&>4SpU">Fu3.e76H1;7#;ak
%[J1I+!M/f"ZDT6Y!lZelLu&2sd$+FJ*2%Lk2QgtOau>/Dae2+qM(Bq[h!2uKPJ6$g:pDG!=IXn0,q>54)lKjcBT"<K8#Q.A>co6a
%r!BaZ)Dl*SL&;,\[/lVDB7/#3\0-u;cV+g+SWF/6m`iNN7&)Kj;=&Y(lr#:!80ksUOVOJMMq#3jVrUDj#(iR_n2s*`[m-fVj/4@C
%798V$!6=HQ[j*mB"Qc^*Pfg)B@!LOPOGKh-pc/S9DO[MA\b&<_NTJY^'>".K-S'3`*YCeK;9,%a6A*u'^XfZX]YkrbXRoLNe`kNC
%3XUAbYpg+6Ab+$c;F#^G-J\+n*X);TT]D,Fs$A.13F^[PGSO068[91-4ig\aJ]\4c&h;qAO\faFJoXtF(_ADT+%\?NoK"G;#U%:/
%'qVCaT3>mu+@t:K5+4,*KBTEC3T*1b8=pfPMC'BmH9fB)Gf5,[9PfiXMgT==Lt-)$lD;=I^h?JEUl&@bU*h/+pL9k-lK_=nBq.HN
%cpB<h>R?`j"eg_eEl8rA&UPr-aX_ht%c/n]6[?HTjiZ$s=103!_s\\J/.\^r$_`t\EKH";Yc!P.H7Wd/4uk<E1=H)bhf;&:O'*[D
%>`Ik"-P;:gaRJd\l0G"04eoQ]4N#O>_`XYY4.!Z=.B]U5SnQe#';+&;HlhB*_[s!P\SoABT/[*dJPoAXViM$k7/K;$o(W=;3i@37
%5P)i!&#ubEI1?!#oq72e$"=rIoVd]];6u"3\S0#4e2XDQMQHTe"-;8%!ckDj='l`6YG&Tu$95R$P5q^]T/BN.6GaX)7s_1uYfY!3
%G[I\L*.^(slPnu?"QGY!5NIJ=f2n(`j83Ydcq69+`E,`I<'l1DqI0FLE`lE+N\R74;[O893dOglel?(@V"KQ8(;sC<f8&QH6#hG$
%JiL[QH8aBd6BI'-PXbMS:7K%N.$4";2O7/Mm@&cj>Wa-dSMc-7`tPBV*1AeJ3&PF^>\Jas6m1<>ITf\%-#JDWWhiCtaMk#u/EM/*
%:T0Z'Q;j]>YB>L<LQ^Udaqjl&@]JW*3Mh;8l:Wm5j;pmfm1Ig`7P9;od1f5j*NM<=0LZPKY8+B$ipo8=ncNO5K\H"0'J>O>iguP*
%aD6XZ2o,ZT9r*Fqq"VFa5TK1AP%Pqd]ni)Jmg:((XAgp8pGF=n=h/c3LB62ClkadTkQo,=%AZ*6-*kKjC`-U:-Qt;PgabP!b*6)O
%<FcXTa-&sWEn^T!1+e>TRR?WM0YL2&T0Vq97nSs+i"WV_Je<)l9b7d,oc2g#A0ii("LImfEFGjf`TB*7##)QhQG%;+!m2YGW0HSX
%;&%f\is:R'bL#i#+^<PS@YY-K$h?GJG3$jBOC$$pn7ZbXIdCB-;F3+/)Sb[[\34#0"S1Bl9o?p$KB+!p`)RdMGq.!u7a_%sg$C$e
%9Si?cGEV$:,q*JiKGH2-*/LU\H*4lVW?A<d'sP6hAAq4qO9>^/,2nDU/s.11';9S4*QcLb&^$1EXJdIdpJ.:*))Uh)kJX#p6i!H<
%B_4tk\TPX%5.[NkIWC6Em909_oDq5i]<ZjMH)PZ7e0Np@bU#BRHZ\Eq)2A(_O8SJMU?i9N;2PDe*$g#r2_0sLEL*ZZcjNdt`Bb!:
%D<au]H;Rka)OI(R"[nV4W(%NB"`;Y$@oRiuPOYH)(^B:-EU82kau<=`$ScC69mWS"\G)uF-J`"2?@Wt&/;&>L$@peZWH=7-%)*>f
%#6g,6Jj^;CP.]+PnrQ-UVsq\YWoO!%T84XuQKaQl5[E%nj9HZtEC,Y;6ia&3BH4W>D0XX_'as&T;a3g$B?8O]&I`f8Lsu!!Q1>CA
%8<S"`'^eUhW4OT#-M&,>I.`G3[K4R10RZT2ff^s3Pfd&^qhZaH5BQ.!!2;4h#a,fG^-"TFBdG>3D]7c+d$<,'V&Xi>MrGD$MgD4Q
%TD;s?OOOPLY;+WP-db7L`jCYjUB%SHXmP5oJliZ@n0DHnCl_6ChuhQO0h5<!'5nA-SUJnPl(P<>gM&ZFp%3Yq6fl7^DGSb%ZJLUE
%bfe0:<#e6U&<)EeahAs)5S>bQgT#:33_<9p@`jRZj$c!7$KAA0NuY+*!ZF[LH#!IHA"?_qm3"r@prSS!DrT.IS+I%aArVfA=b`m&
%.*j3t#)^1NJ0:oG?`CT=KliS]]Rf44%Y6U8).9<A!U(so!N82Jo^n+j4Xp(o]/R"UTZ-h<+dRGloI.g;E_0`,%u*mo8"st53YVp4
%0e#+@OM5\0&NW]ZiF7!@DTs!r/`c]c5[*)bmP[q)6DqT'o@ujZO6;<t>;)")IC&8kn3apg<EDQ8MN=2)iq4`to1`mMlW3@-o/5\R
%M#9+O9/Fi3`(;4qoZbu-ImfB1Q.)(EW:VCBSi@j@nq$F!cM^3O1\,fN%cSV#9Z=_cDmk(78$gj7FE!jYX9I$P<)2/#Rl.RuAlY.0
%p"=.ORj0+=m*tFu<?Z"$KG-C('/L)X`=26@nf`ij=q\U8_5i8YA*=(g^uu-8;T:JU07WHp:ROEN6A5NoP@-Ap8E3We:8C/kN6h!l
%04qdWGD-A=5BDrLUEJW1Yr",S\e,Xp"%.U6=$aotM,_Gr*`%pR-$;hb.ctdek#@lq)hPA28ML_9@l+H8rsjTJcc2F.@JWGaI&_;K
%F=;RjAB*@%gf6u2BRUsQ_So1@Fu#U#1jFC=D`CLacS*ed`,CEB37-o7bYWS.USurU$O(&8#s6`3B17bB\#>(;KA,>uHq&)pb@bbS
%;63:F6fAPl6l^CsiB=.1jE%R>e5q9)!WjX(nUZbk`*GujL2CCb#*7Ou;)")J\SRe3bb]q\;L3s]o"9r,6\0l1fegpQnDtlZ>]h?U
%O8/4BJC7N>p`q5M>0GtN5R:GS^peTReJ``$YrbsBFjnc9>K/&(-)Hh7H2R+]ak?`0NVOD>O&^Lh@6@2J$"D(bih2r$SK_4l'VLf&
%M*Is)5kX"ZQh3O#hPgR:WsKqe6(]Yl1<B6Y(kes`+<bmF%tUOM][,1BeHu"1;pUb%7l4+`bCmld@P0:Z<Tsg#?1n,Wh]`D,F57G#
%1X`K-8gGn/#spi9b5@KB[+Nmo*%:Vb<+J!bS>5E0L/jC,J014&>+h&XcInhH85YKec3HUeLHo%+<f)%u.;jO9E'gO\;@AU[mo.5/
%/;XZIe`+<GclAo5BNLRPg]SUi0p9FF*[h)DOn>LE9lfe:(UTjZ"HT2I95.bU\d5jFKB<8)Dc7Qe0j#sGA^"%U3]_qr'$%'f>r$<0
%(p(#W=2XkFG)`=*\dO[2\P^Q=r(ij&R5"^<KU6)hpo`<nV'I`eQ.-S&SN6Un;IW<t!jp68hF<nO$!Ib[*%ir]8A7*4Fc%]'bOX'd
%/mLI\Er45=:<E>drB_]+r/iCfPmf-4aC>JI6jM^Z%UGM/Ki6".S>LcE$JEJdiYIEY^''fd(\N[0GsiQSc78GI2$JS:3Yt!a7u2iU
%1k/-9d5QjZ&>SkX#l8p?m)[RF+H4Gn1FN[[81tc_kEJRj`?1rCL??oL,7aH\K_K?!)?"B]A&YfbL(4jl,=BccIJtc:S*@rUVZKcS
%9LkLu2;].._pgd]O-iud3YS.B6VC%TUtJ[593'D-q40!1U?#%>$(MZ[$cZSs,I:o4"cB@NoB9;=PqnQq!_GBo#6n>pi?i?f#kGYc
%7@V%%7o3!&IQpo%6jT%jj?2/geUl!6oJd#8T_-`r?BM*88KSE3pFg1rStn1\I'aWF5oA(W!b:#l0[*ojO$/([(6USU=VaqCj0F\n
%T0Io3lB(naR?&62)!j&WKoiQo;(-fd8UWtH:FIcF\WS:]d2F*p4F29l"qK*l0J2qFH0I+"ltaO@AI+/QJVQp?l>)r^K<AeQ*`ti`
%SVRnnn15$_;iG!k9.]NG%$r;?S6eZjA,-ZPq1:&18ah%t%Ejks"Js'k,4-Fii27#HpR""'cf7S(,s"@E+.?252"^DJDUrkN*((Md
%EaEYI>_jX7Lbe`m!!lK*HnsPe,F1TR`O[LD3qWU(;]SQ9%O8eOPp6r1`LL>q9,sBc.ZfC\p)o/4A$BfbA]]a*Y!_?pB1loAIVs^s
%X[pN;._-d$"Z@Z=WI]YmZ9Y#J8^</G?V=l;Y`f6eDi/'A<lVGbOh@L;m+TC=SA^SEbR'/?!5"<J@A^B`9S%O^U)Y[Q_Y*!D)m7lX
%JumDPMLXslZhJ>h[j51$fXjHL@D<YT`motD`I;Q=4dkknAIN=40k)#:RG'7JZs0&Mmkl^R=603Y[3bLF.Ub^c%U[K'=IC$EQPjk)
%3Q;Vq!8BOK]Yp/RX*/H>&eOH=Y+*8C-2H]I+du4:JKT\/76R&i4]nX\>c+6NU8*o'!'h)ASq?BlXQ<b1]+Zp'Fql8rpPMT^.Bk5+
%'&7T;X/Or:c6LCnK;dQ;D5UcEGGcQE9Jp1"h'Tt=:>)sc01S&GQg?KA*4%^j%g$4p6dM.Y&VuGc_G0t,mU/GQ>%mOV)bUWGb(7>t
%)gYb(@d'O@?Ian/Gjo6a/--(E!ClhfCODK?krAL>iJMr+,Zp6\@FNLci`joQ8m=u1-bjDI,IRu?YN2_Z3]q&3%O5c"r&mH*N-Kkm
%6miEY^Vr2Cl_h8@2c*FZ;D2ao\^0nB(/!<rkI<-0g>]/@-oSb0dZe-N"Am,a`p!B$Xo!o3*Jj-gTY`aq2[fH(flCf2pk5&fk7.ki
%%]6%<%2]8pP:eE/Xjnn=CBD'4FB\gfrPSmNfA`gHPqJ:iNfk;7<F<:s<\=N(lu1"d=ELebd0jL)VQ.<+[AdJcNMpYfc2NIQ6HgEZ
%D5R&X*o\;5JCI[8m6J1SXo5*I(1-"K`A\Uuc^n5!EkPp5OjY\g1eM9`RE4PlP[_NS0SuYE@"mpNKK>M:-+k1!Jm[U6]a1JddX\+Y
%FG.A=1H>#u]kLgT@]6GN/[Ek$lC*WfC+LeM9S&rU$$rQq"Jnm0!.h#X**^9(6;,F\+"s/"^M?P#a_%U5#@ou*%4YkZU03GWr!Z2j
%;.\^pL0]>PAQIVTk6s'_>Q:!UDn7@1.Z3;I\#SoC)VZ:N0N:N=a\UpGPM;8$e0/q#h:AODc9,aa(V:;<TR<$2\_``_HC%6nf8=;5
%WpS*+3R*BWfOeo,NOq;V\u3P'ZNc*tR*Od:W)@lfYr(Unjn!"';]@7:2:1^5^spfo(mm8i<`_M_'L&-G3oRU9^uqpOh+ljj/-)Z#
%8%*=VVCI"L06?1Fknje\%MtCWMl+j[3^P0P]H8"R9)r-oJZ0rG.tcU.DZ$4O-[?bk;aj9&nK;>kVMdfea(`LHISCt=/5cpg(T:FU
%EJNU+r7LD:8i.DH^088s8!6@GA$7^@iu]o(jq\7ZAEF3dTo_gOBh!AY(M458rj&]=9)=2Ce3#X$9F$&4G1g`a7Z2iRl`9AQe_"8"
%@QDdl]pGU:]pt`G3Rk2h`=<Eqg*O?4ZdG&U`2h;O$8l5>"p<hBU*ch.aKRrR5LH(o[Tt-DViupqrf%UY5TA%Z&IAqNX:4)aH!OFH
%\`'u;B+Rd5k"p"R#bgl':&Skhi05)q.pBreChIWk+/kQea&PY^^Hemq7Fe?G/4!T*8WLc!'FVDVI+8^C!M#YqLcHsPY`R+W)ZULM
%'q%W"QDqfjY$H=ubHK^lEYu.1D!@hceJ;:hW+F=&F>m'fhY.mUe3U*&@G<Y&Y<2Flfl05(:c_ZeDAR%fI[TW=P0Y/+`r3g_0gsri
%-Q3f/k"rbrB.O5F:u?(pZajAS9@"l(BP"\?R-lj#Z!8&>3HJ*!.5mEIPeE/7mW6m>G3)G)Fh^>a0\<J+$V[U-=9-ngVud81*4#"#
%[Wa/_:8N7Qf.Caa4"%6%RTK"@6#!JiNR&qk)'nGJl(7eZaV/omii/1CPLU_*G0bh(QB8#fQC)jM.!j\Ma[G@,fq]TEaNR?"m%]]Z
%!)&i/,mfE"i^G.M:g>T2>)irh@_0*?.",r&lC=dUflE.Ho3UQJ]E4]NDi+4j`R+3.Q*=nfk3\&4ZFVms7g-e`%@8LtM7s]$)B8pT
%GX<fu'qr7rL?"mLb/Ym@$I?PEpd<rP\1X?TML@WNE*I"P=m>u6lVS7aR:cup%T0VHV;q(+eGIofqddBs[^15:Za9eC9u8fm&pC>M
%K8UHp6Jkl5.n5S^hlB5H;u8-Abk`HX[T"u(I:6]GJ3kjE*_N.2Sb1?^cCEsS\gH^?H:Cu0hP5mrl[q/Vn]]Z5%NWgbfk[tN,.GQ_
%D8k3"MZ^Q!m.C3EZ<U^]r9#QmU>`4u)^9CekTFZGDB!*oX=9)u0$E-^%:b$J9-]WU*++K?TDd]b]_&4$?F"2R+\ii&_n)k`Sl%m[
%[9I[%8s'4Q^1+JW<gY?[AZe`hau<Lr7MS?D.taTOIWEr.ck#)M[A+k!d4Lf!>fB<D[j?BX'/e)DJ$Ck2B.jDE_.&a_[tiH5qShTt
%Fq+dYNLGDR%LA@#\HL=CiNLg)Zjj.\*p"-\6Y/X"<,@G.a=PkTYjGbQ'83I;*R3O)5spM48_KO=WHOb;Pd2lk[]lVQ4@/I&f-&04
%o$'CZX$7EGiu5j712oGZp^g;J>43d>*cFcBFe]GPg=LJFl2%gb>p#[[jZc%sps7A3]a&$K2^7ueJ4aZA9P$l"nn8u>E%Vh,4"lPs
%f^X$$pO.F:RQmfN<bdY2dq^]m4%hOaXEP?*[J.,'4Wt[5>]1Fm9`DRUpO.F:RQmZJ\ch=:(^0g\qF#X'eS/$O8dgiLQIUq)--MjG
%(:3+&b01-0m>,4)gApRYpDi:K25:)HXE>F:Sg,U:R\bPJqpd%>0)AIm2SiR",B4)jK'5&,#(3eb%-^sm[>q+7JkRbB/UZfo0V%WW
%=,*8T)&88jYe8X`I>U((>65O%`u;/3>Gn!g.Wq.o>hHpAh<-o_7T5*%&T+!nDW+r49ubfRqY9]fs0*XoOsYq4F,Md)7JRqSdkoQs
%BA7Fl9et>V0+?>"F)Uf$I!hAIU/RFs(RKTq8jN<a+ten6;m9<-UgtHXV[Of\U+T@Ok,L%Z)#`GP*T\!i0.s@!'"Qi4.[ZA:KEq^/
%bK1>$0lg73Q`L=ZY!hs)L`45]8]aPdUafT3UpVV>?k(f-_W6Lc#s\jXWX:*k5`4;Oa,R5onK]Ef)eN#?!3N=='[(IglaBjLp>4&T
%O.H<+Mub'#F>PYJRK"FGPIaOln#!h"9Wtl]4TqT:rV5]qdrbQDgO1.cTB;4!PUuk\*=qAW]-P*^!nG<>ZF%-6/_@DeZYJ,)S*RqX
%l1JidRm'#!aWEB2*$>8s43ndsV"^f(U@iE0im$/BVYJM1H(>bc9\7V(h=pI0C&Y%s&t,gFaG`X2IR+hWUq)n>1==1DD,3I?KOUP&
%h_';EY+L'Qn)NHWr)"]8kW"Q40$:1V;I$(sXa27uK(//*$f[HnDAtr!f@SkV$Ips_*5TO8A<5j3'FEe-k<s*'@85JnkO'>\ZC$mX
%Y6:h`CQ+N!ckQo5E-t8?(r+YG-Lpf<O,n_Y7u^;Cr`6V]j]]XS1eaf<O*e2I`ti_\Qib%r.uOL5&')qAkaoL^d!IG-XXUfh@q<V3
%=MoE6%O/jZ%np"E2[uhh@frU*\4h29pU5J&a2]h-A%ol\pmmJNOleO$fq;#@5qZYRKt'raBG8>c[QoH']:."[^_5c5-&(+0`=,-I
%e(gjP9.ska)8uc`VVl>GWC;$))X/4Cbr%uW@kVdp2j5Y',ZJ62#:*mUf@PFum"@T<J_Gu>")qoXD=TluoePAU,/Lq"Ua``qK@5bf
%?RGa*qb80)T&bstO'm-KdQmJW*L,*_hG%TB4PO1V=+H9)%WYhL10m-=G2L?\VtgkhPlKK'o`%g0o3Y+-rdS-mo7-b's6;Vos5roh
%piD2p+OdE3K_gh2,7sWa"_U7n81]&e9/De9;t\0d)^8"m/(_.<a@\lF&/2$@2-I=dXA_:9(,(plIX[+]WMI7D:e<H'e^TZ5PBpp:
%N&dup!Nb,Rcn:H9Bl$@E1[k#o3D[Z'.*,rEN(L;5145oo.-];_EUSTDnmi8.$(.e:%?Zj;7n7rM+LN%d/-P%sdCM,#?edJ"S;FAU
%C/&J11s"9GX;X71=/Q>SOc*,b^dL=WELi9h<i54-(6YE5e6YP*3W$6qZ^,DUV[7C.[7_.H<F<*dp8i)X58]0pG*l0lM1GQZTW4^9
%$WohF:^OfZH%]bU%hT3S>eZ3<a2_'Ra2HB6$HBX/0m7/CC6s<egSrW/G9IT@M=HMb)O+&5L#DM:6ZHu^^ISAL<YNH+XI3I]PR8O@
%C6$-t+q6_=.7F?UdLrk-Psf[4]PKZuVJE>rk$D)?k+EVV0,$qC6/f(lZq\BJ@?@DTdJC4NVfmb7N%?Ef1f8@"lU@UZ\KTP;RjMq7
%["U:32=GCK?n@m"Q4kWe;(Lc8M7/8bo9eE644t7i!S^@(g#s5@D`^X>%EF"[b96$!MN*NHmJ%GH"gGiWhSg,$M+$:P$FRK9bB<1n
%<Eql'Kpgm67YCqE.--=<rimBa(YmfPhhuG'0#%JQ,g1qt7q9hqrEMW2#:k_GBWCT6.:MgZ+?r%"mltQQKrfRNNp^&Y7*q$R$EM7+
%/cH#(^_=Ss?8)ciCtP@I]Yq*6e+V<9b#)DW&Ra)No&o@dCt)_rZ;CaT_iT,7GProkKC'_]0JErGi'G)Y3ra#-<%?^]4Q0uum2;<^
%bZL?WoJ;TJ"Z/6/(]p">Q1;0&Hu$kK#1&MGHKS!Z5%\@-#tH)H`ruiUMijT1&d'@5M9!den)[%m*Qj4/G@k]glL\hHO(l5tl[ZJt
%FsGW;ke4c.F+.r<='a_OUOp@**pm0q&_>@;K1HP.)qOpq5Wq:@Zi@8Wr]_HRVf.'=s81FJrbW;GUC3k2&23tE?iLH4p>8+7qS/W1
%J,_*uDu[_as5e`)hu<A"o)+RKb)gIXeAG6((;^W,%uU)%T>t[iGQOXuB7g@`O<XL7i!^BD<nWa.KC&8_r,_7Q)?<1"//kS:+JUk^
%,%qjJ$kYZ=h?>q8!/;#Ogp)6g):7_aQe[L@j[Ko]5=*sBpnPC@)?g>$#N<f#$[tk8@>kI^TOs)2O(5\-&Y6]egbC,MnPIQ1!c,:g
%NYSC$ft_1@+s6P3I=1>Cs+Jqm+(%#mVTCYC6+Q*/N6in@YE0b<`K_Gr_fUG;.PMMb6<HtGY<A<^Jaefl5^?=C^&pb6W&8)s7>Zd1
%e#\TbZ=K5.,i+5TI>9A<MBBr*#F6KY25N&dr'qY;jR(]1?OH;]4*D9]rY0L?]O;Ep/D`&_Aj[/#,2Z4?^]P_!'k%4^fF]#Ac$Z?;
%WH5a';6V2ZK0JC8_K*2!-o%RP"0.8^,D@:(iAOIE'7KcS/KUNJclY,=,YZ&$k`B6tAe\61;?'tuk2&(I;X&SjB<)]$X.@6*jNf/i
%&o7iLji(dZ3WEf_%RqA^=L34^?u>[e!&!eO;VYe'0MX49HB'@!$Asn+9F<_U-scYE3<$0eEBh)HMW2CbiT&C&rumptLX>6-]IT[K
%gl8aqY!S]-OL7T6UNOulAr\+q?))d#8!OF$`)c/mP*LYV48IK2CT7JZ;6`[!Q08EkK2d8o.[J@q7G7\3^-u-;09fIFj^`KD(>:9"
%"\U8LV7=@BBpH1DXUO#>%5)%+b$sR9"W!^i$,Ga5s78`tD9;?ak5N=K\gCEfLhd[<:.233dBt`Q'rc:dqI+)@HD_(482-:$fZ*)`
%*ANL12qOM8e_6AfdSO("Y2Mt4]9*LEb/.^o`S2f3fP[(^[9h1anG"\$rg6!_K4?keYpW`,f1I8:q.,:"aJ'4f4SGJk;mGLpkcT?!
%5amfr@CC)'%U$2j+RGtOf.R%2!qbe)6=dPB,>0?Tl\_`Dl!>F*_h@(T^g`))*QE?gXq8_*(Qr0p-*N>SjB#4S%Vu=jH#8hd<fPlc
%R<W$`Uf9%\7T8iWi<0PbCYi&[*U0T.qU3KHO'VcUMuXL3OeA)qJCP'?gTaf#o5,-<Oan5XJG$Lq!lu9Q\9(G_4LiO5fnZsSUlr8L
%[Y]F=P45YH>E0cS2E!3IQD21G^g:=aVaV`s\Q947ro?1Okn,I<LH=4O1bkc31)UV!]'L$1Q3]]"#>)[JR+)[;>7+$]0q8!%.J//"
%@I9buN%kT'(""Y@4B9)Z#-jU?U*D(#KKo"759HLYq%*;NR55KQ,$a?+,,AILqR)'n?3OLO4Gk:kgIRts[5\&;FQ/7^T2InM;?H,%
%ZG/)r,!RD*$UJ]5k!eYsL#i)eq9OVa?OF9jP0$)u8d/GQX<t2W(9:_>OVV,&6jWK5Ph[!'#[s0bi+RFUFYb^JEari`:@^Y;b6g*.
%U:E\-%5H4A]&0#P5d6[ka,<]e<=SP#_gA:F55"Oi1UTTJ$EWJn6&t&cY_@ocf;MhiO/:Al`G-o6/bC:/>SU./_Lf(VXP#q:*\p<6
%FepbM3FeR)pAE1WG%HH6R"D]#1lgA"\\6=a3X$fDgs!_A4U_S3oBXF$'J#V2;L`^Td_W!bA'Jd,LH]8Ub%Ij4:L@r"R&Ci=b7<5s
%.W?'VH=-<-n(mj8eCX_/?i4!?rdRW'<C?GH$JU]dbG'QBFc=s[J@U1V&RQ5M@ZA#kfWCg8[H*`40I5TS#U9^<)sSU\54tL..`.pk
%8gM,M=PCi1"%R,]XP.r"A)/Y?2*aeQ+:MXiKI%hiNM<T.&uOi'`JK`tVDtMA6jFLPCheY3Bi9(5ba`<V@YI84UC_-,?E-ngP=LP.
%PU%2k%TI+[iC>Co$?Xt$ZmK/uW$4VWYdOk_E&oGni,4eXij(Bb]#Sbn-.m.IXHWUBVNdmf\04?'F_(ct.jYO110Xm]U5.#[Q%7$:
%@UG"6o>2A&`aCR#e9#-8E^pg]Wo^rCE`#[*r!f$Z..t2qaN@oI[Uk:JXC<"o&L/Dmn9gCRI+K"7ntZ8+K/07Nj)(dqnMMJoAS05a
%>4fgGR9e5Haa.,kUsU.DUDe$847WU%D&qXm.2^4J@-nV%8r_bSOXL/-E=2Wf$2@m-Du]a=rq>g[jhH6Ah7ro4J+IUXp.sTF>M/r>
%:RFW3\YT/0Du]`bqRaN@[t""!I/BiAia;W6j730IpfIL`n,<bKrb(-f)dN6siW&nYj_D1hC-g2Gg^&0\X?B.j:o)WtU-?VooV7,r
%!Ejp>?*[gj09]96hl;aa5Qd,eU3\MIiZiIOPEsQNY**p8;\B>H-nmrP!k59mBkA_kCTh3lB$NFEG+L(,Lj)l'JXNd^>Gq`DbP?D>
%s60n8?LB8+ZR.e\^bRlgbu&f\oRnmi6'CXuY'Q]2]SJMCnmPMcrAcO1Z%hEafun9mgo.o"?eWLsI)j,?1MQ3Ulk:q.>WNR0;_-k%
%0U&fPMJ;.o,S!HH3:ktIg0ohIn%_<0Z58?I(aXO@9\+`C,q<di!Pm+W&uA"%]XqgfA\?r@X>Te/FJPfbJS*BO'aeSgaaTi%5h+rJ
%"-fc/kT]89!("DK?P2lMb(*UoKh\7k.Z?]Z?m&-A-R&m`4st4g'&8UURhFkfD/6g>Sl\4k-6;*KJkK3><KZ%4=io3"\m4aMnJ<#&
%Pb%<>OCOgn-=jEhG[UZh_nl<t-;H1J;NB'l+bqOu4qHY/?rcKGo(f0J`F,t=m8c[Ylf3qmgLfm;HADW?Bia/hB!Grf0)Bch8rBg[
%7/tB;,BsOZ%O^TSc0C=V@2K&g3CH?M^*YOM"^37RUtr>UkS"!8fu*.O@;nOK$ObMS'_85E`,*R`6@>'K)VNH1%Rqbp<H;pU]Rh?&
%$,2H=pP#IM<Od(?RGA50L,PbK;f%#2\8CBZbqE#TS6oM<;O:s>C$OFl/+Q(QUs"!tXt*b&M=*3;Nu$<>?r+<kjju.<*)\:2NE4%V
%C#*K,(OGgnj^J7S,5fm(_9r<A;O*c;/Tn04']UZm!AahLfn-EX)Y82\"!1k(?63.\(34A]GR4)Y?rSfCAaieNQ2hCW+Xga*-mC(C
%:l9pd+-OkN=;da(1=G^;Q#l@A'"AWSe9aamYNiZ;4l68^BJ^5gX?:oOHc9_dD&c`i$mHP4\6\RGC1:VW3(g@mf%siJmrZne$n[jH
%9C,fW:gCl6[b"C>UHWES1mFWP$=ZZr)k*=79A'LG7M%C/.<)NYN,8g6$5a@_Z;=tn"NHdVq"o!q1&Rf1im3<%#`Q>ddc!5D@'.NG
%d'o_W(#N*8,6LdVDT!uK!lpI:Mgb_qOU,$NfE,DXV<AtU22LPUO$1h)cNdq_De3WJZE<a?J"guUF&#[K,UW45G![JKC(T>',X"8:
%h]NgMnsNf7efsmeNACh7,ui[[o-@1)_.7^UIPdm^@0JUu",4B'1pL@!NelLmXRIIDfZg$1^[&T[E>'r:r'PE'S>4lc<W'U^d#2o!
%1ng"rQ@%1M4U_aMFiqbqSe1R.Cl*/R>9Ibd$&^i8>E%f'VXtWSP%f4qjP%2*Q'cbf`#uCl2L=Y&1AGf2&rB*rQXY20l1D>YO@(^s
%j""VEn@mR&TSbFaZTtK1]2uYF=\egXKHMV?$!DTe9f3-Ma\mI#ip"(0kS0k1\+hlE@aRmVc<T6j%-5ItjK1WW)4=1uc^cF>@WH_Z
%6ZW_'?O3asE)#[pnOhCE&,Te92QZ?C#b"e!a>c+PS`aUtB<[+J.R"Y%PRO,",R,GDM)Zp!6JZmhI\mRId6(<W>qK<:PP+VUM*b4T
%X/_(^^\k`6g$3-!:RMZraq:OB#3B6ucN05,AdqG]neA=\J3C4>[k#65Qd=jXDp(c7ij81noQdO(IZLJ.So<;4cHp),m1WrZNUW`T
%#_$<t?l^cp#XnG[".,H5iNO-EV4TP!%a4r#@qhuK4H!E;Jo-q=79%?QqR4Kq()5/;\Z\UV:p:#'KoSa2\>g'pH<>c`)-'<2cnq=I
%]!"c"Ei*O];`=:2DFN$ubrcRuHFXA]90\>#=a_HaZ(0>)(D8G;K'c]I)lsBS!6E#f.8:V-VYfCO78G$Fo5`f$GIjG68D,g"S6%Y<
%Oe-J9Fo,o^d`]A[2Ai]uUYEn0-f5tjFF5jY5LDgWY(Y=L@RLTt8*>fd#'h#,3s`l=!0+W@2U\St5VDTs:_R)]$PN*KU(@rEbCh:J
%>,a@g]hj@!/']^ZrB))GR)f\i.-#-m9u4/h;7e:5ZZqn6X,,^%R?(!G*`&\*kQ=SF_U'Me=?6ZGd#E!4V<T:O>`l,Tl>(j:C_(TV
%cOq#`Mf9-)K9jK)I9SqOT@AEU-<rRT'1%Bn:u)nm&o]t8l\:V^eg(G"r]9ok0m=VR@*s(N$en10G,<"1=qk'"<FT<?7R_@qJ4]8Y
%5_YJEV2^%O/-m5>\;5[#V7u*7!uT?[A6SR+$9U,*(#[!KJEG'&_]VG!HL<<nLGA4pYfuD&RLC^`.PdW7haAa)(foDt/2s)S)2#ga
%<J<XHHRZe%0Z'B!I6&N9V[3'$Dt[7?0f@F$!]guK-">Ka\<6n5K,o6eL+$3*nMYE:>=3K7)aCX0S/cD@L1&")*uZ[L<PmsBT(^fU
%8lX^r<fpdTDrBHhJH:Hbi3nB:Z-igF%Vm$#kW%g'A/u2h`*ENa?1ob\0,Iam^?t"p<Y\njL`Ij-]V_b'YUsk.KP?>fI;;0R/Z`tN
%P#)98q4,=YX'':.T%6o`l)(;]KS+X@ial6o+:*K\kAA,a6-&$K#HQ*.KmP6=^lCrF()kuA'+*<j=Sa"a*>Em$QH4\8K]'@Bd"B40
%Hd3n#cN'Sj]S;_rY0hZ'70;1oLV5?o_I*sE5#,+1e*Dq$nRqTT5#mfZB-$uHK:8@dIEeGlDSeVG*DUu+%KVQ>%Yh[Ec&kIEn".Y4
%k\Y$[>O'9_[K(<.agOj8:Bc$eF)T%DYuE6h"\!:;*LjaL61ogL#Zof9Bs_Q!qU5KhQ)Z6\04"W['C)Z/-RQDElN<4[YU!P-*,q()
%6R,D&nE3)CJR;l#";$LtYJWVOG(:g,.]Hfc%.bk)jIXYUY<lp(&':Dc7@\&L*l.MS5,-uR!Kckn`GujUE/"u@-3Q@8lA"%V57MXi
%r,q',Gni7q32ja^FC<-LaC.XY\[HW2`Sm^Q*=d=q3$lG9<V^@n/afO@,\+4-LO\/QfJ-J`+1up1m8b<>]4,*<?F5d/6ECj;Y?4;'
%+B9[lBJYrs!q1+S"\P'98^TY4NBjlK>\6#)H*A/2_O@n$_'hJg"Bc>Y_8(J:r0^D_VHg]iib58+<U%h<.#'o&T:H"8S8=&f/c8H:
%\q9U"b=V'A(9X?=E%fQ'@?Dp++>iOgF<jua!^OUlg^uHlK\G41<DHrNdFtpTj@4kUWPZ=lH-$^D>S\>SVA"3)4$jrY-OKcsAsh).
%KQlXUbn)rg<Eim?E2p%@*EE;]R!:@22]0A\fheb?KE\$;#e\&T<.Y35/O`U4d=WS2P?Lbpar=qoIM]bpU%b(@jEYCMDY7?Lps2PC
%?o&NgVefs,=klu]lFS2Z+nCSu+c[DO=I`PP'6=(&b>.1M'&?YSZ\/f:NW/Tm,_d^:3]'B<@F&EecLN!RWa2mY5#3?u(hD**Or6-R
%pi.[U?Y(8Q69A'jN#M2a2Zf;0bP&9NjK#6Ul*p#Rg4OP#8$eL@9KgMPU6EjGs7D/&"cu_UGeuVkZXa2N/fe_16f:lPV[bjR*E;#W
%[fUFe'KitnY,")`"j!P)03cj@?[VC2K%)<Z+V'B#>a#4'Q:A;FjG%DfdBL-Pd&S:,l&'V(W$X[.FXhqKaSkdtY/:G-&.a"36lo1@
%<]*=IB8gE?>hP,%b/NIq,?9/8'pL*;S2AbA\H%BsGrFKQrc$QCZVN<NP;c&%-.0W_IjoM]j>VCFQ;+1*P^VV[fc'ZYgL/ZRH0E4m
%Rq-Z'NZo*9Ddgn>SohKrjBB3EP6Lm%NrBt&C&ZK\;XB=-#gQJ(ruk14-mk2[g>>W:QOnW!C@[o%WpHL(LnS4GM,N61o2UQTXZCn\
%JYudc7+2m?b&F5K`f;+b&oZc^%$2RK'_m6%3Uul\;miBr*mU$XEf9Pmbc6kR7Lg3MOtY*?=I[aY"_`IhS!Y+ji$F.QEm2[f^8p#^
%[[^\O#r,+QaAZsWmuNC6PX#QumsL*DWG09/8+@$q=3oLg.H*/",^55&Z?`jcDBGBTA0H2%d43N%:3pI5&*PSYQ0BmJPb^j@!i4A'
%.91J0BV<7"'l\l+k7QH4Mu&_)5hTR9oL(Y?Sem,d,hLB&A71'TXCLl^/j-U6=?NHgK%Jdf'[fB)@=,H-B8A">r(cUKc8Us_<ELe\
%_$ogHiRh=3*._mA^G)&`Rt9-CQZ:Vd(^Xnol"m5)(u1#7e"X&f:NKNBE@=7W'p#q?.G7!GHK?u_`";1Dg#S'HbT>aE3ona+QT>u_
%!eQUp.@r/V6fu=0<nH7n]=AM[K(ZYScm5W$p?gB"iGI$C`p4>s)&)>cF/MC-!XjJ)bJuY$St#Iq*$`8(+\,8$3c*JSV_Ef4,CS7!
%Ys2dTOp/[ZKa;ZGB6%O,8biaXG;Oh)M@*?k[<)p0,LI:!6\Mb5>^TIUQ*6:BPHS*a=E^k=QNe1B;Ht*-&Ji?+f#rlL8o'd2]f!cV
%M++SW\-")#5%*c`_@NdfZ#+A[-b5UCS"p.n>^,R6R3VpN@8g!AK@PjAXkh&+Pq'W0^)/t9f,[OmD-o7/=25\8Ghk4u$*0es8)1N5
%\Y>pQ)C4od5]0$!$uGJ7(@&Sr.CHA+'Dsg?.jh*'@:Fqipp1R!U-I!+3n@an#VKjI1`#H^qDp;2!R(.V9TsY/hQ@%-_,uR"nB9g<
%.aq_:.)4?._D'Sa`dIK\J!!1"4M+89e4bmma_R=&4o!*DfPZ-k7]8>-h4MtmJ!^>Ql*Pm<mk;HpoBfm7d.(?r'[>:2,@f$0Mo5ZX
%C,aCLkW?]&aDs2+&#sjh/6/OX"J&rDa?^RIPMs;)CaIlA;?.bi'3LPLWXAH3.l&rS[Q"bm$'&tJWBpKs]3J-RV3ZC!B\@1?(K(,B
%c77&T?lVcJ#^%Od@l8;VF)!rVY,cp\TKF#YUYHLk>_)6&68]\R)ULB4.J_&BS?Qi;>'lM3-$[Tu"%tqCARY)88RGspG%_e%<$eH(
%N%@L2_LE=A%nsd1<#fB2ru_?r8)QLqdS%oAj5F2:7cqV.'NGFdQeFBrSZ%;dPV.MR'Rpd$0gbjSERuY<7VdDKQ*+@':cM(l#oAm6
%\Y7a<:S\[)UFm-6FSI0"@D%<dbC:^8*i7A:6S\H:r;KW0!-Ls;LC:o'1HTe"-cprK=XW:M@\kod!Yumhjksf%H,g$QA5=]V?/Q?'
%19iYD]E3_]BMF%/?S2PLFJ".E\@4MQ)KJVH(]G(2a,&0me9"#t(FpAT)3BBsW"`UYmSG;=N6LaJb)90G`SF$\.V!n21*;R\bt=(1
%n)<nkhS\lSZ(jXR%\5AI*g`47PQM>-JQ/e[r#/gDE5GB#fg(prY."m<+=lEU(&+OkDp+9EiI.D`doa(dMe?mC#!'CM*9bE.WfuLt
%?IEmu_Be[pF:&$YCg%!\AHrij$'WX8k]g"N2JgQbCLHco;o9(&&H\Sa7u50/lo$_?hdWie4FsB+i9'VK"bi_:N"W6\r.#Rb<nkFM
%8fX#^d!MikJj@/pX8j"lV6MbRGbW2-8F:6$D$$,G`?_#T<f3;'lHZQ/QX_'/LNW:9],r<"r/ATk25H)m'gmLcJY*;F[gIl9OojB6
%<"/j\WIbt@==!-oLqjcn06?_4/ONuOPdVdB+IWtF8;M_:H8&l(#qY(4iAh\dc4ZL4d=M<%LCCY'XG5Ip);0PL),'OAR:PM"O/u2O
%)A7"Y?kSQR6=?-pF<:QG&dfk`*8XI`JY3&U'oAQL*Y&jraX_QM`?Uir;VN%q,\.>b04m*cN3^#:j;PE?7U\uCp]BO&=CabE&RC,b
%&jAaMWWi0Yb^ff\o+NZtT-?6G1TB["%fb\j=oZ.pjtH_sh_tB&I_>HrAn&!s&#QiE;@cE8-rjBHBe)eb@%,%"_B]6t9[k);aZ-J(
%[/iH]PL2Xr\f@LG[8_s1/V;Qj;G:!sUQEk,"oa&L@rkOiU>UF4\76o2MPmFh^Np1J86k6)g-?.pGTe:SV*e31die-X!O=3\C_g4\
%\!Z;S38q:!9TT[R/@B/#W\5cnE7kf=WFUN0&<Uc!&rP:-k+UH<:)0+pd700U<B0+)(Pm.@P!3`/rFTXV>I^m\=>@A4dS3j'O*Op8
%aST?X*YKf.L(U`BZA^SfC)>/sZ1gRj9)(f)SfrDLP84r/4PC;hE+_A1Q[==]r&?)=V^$qC:hq*E1kN?W<1<@3bJg]1%q.L")=QBE
%`QU2iUk8mgoEgp#+$ut<m7^7B)(\D&@ui0t(q4+&eT(_/JP9A.:c#t@gQ'NQj1.Gf4r^GBDTao!lH;br;OjDZj:dqaV?Y[I,rl;q
%M.4jFGE]mLZm)(NP6AL+U6li\P>s%c"dr8b1+.F&,$f<N&<tYE@4<IL\&tt/8^0!n[-bVii.NNWai?i?&--h1!*RJr:WhMJGIUB:
%<K]V(iT##G,)FaFa?4d=/:)+nV(b53D\:tgL#\FsK&^ER>#P>)BXtD\K996r=9krP9MDtdlVmO!\3dH7ncil9AL%tCdkM.Z3D>hI
%P*bVBO9ARA$MfemUMb'l`Q<tG7CA9u=OcU;N!X0scCS"l)Gs#Q'ZHo5(IETddq*bGR?0c@N-7%(iS5[6`=TtXSCkYg<hUM%fIJYL
%,dUOTGl5)b*Wu%T=fN],\@TB\K%mlL%1:pbXZ3gm<gZkG?E*t('*\\"mn,2Q<\G*mhC*kPe4oR+^8n(a(@4.;%+hPS%jh>FWCBV&
%fD[jMlD,B$QuTMq/AOU?N]N^L81RZnZKL#+aW('J.*)Fr=@HScL4#$Kg'u9uOn7,BMK/0>JO<:'5oe41F<WY.(["/$$M*te8oVC!
%$Z>"j$YkCOJ7TW!da4IR`jqtIXJh4M%%E//`5&!$pPF<4!02hc.9J<JYAV'i%X!)$h#)C-d+?>t*bKo`RO2)TZof\&@EFI'9q[qX
%>]MRrZVAZO<as`A^Mm3I(5W\JI4\Qh1r\<!e0lu'RuXUbZ0LN:H!fNVCuIFjirL%RJZ3G6!F62Lf2kc-5PGQt$6#q7$!(k6_]$3^
%K`BL^V8@KD@;Cc"L.?5Q5>'iP+0'A@2ZL-BVVto[(;<1S)U#IMFp6_r/8a1q0[chV5I"m__B).aJ85DJ+:Qg;<5/nJ3tPG,]WN[9
%9aamR0U3p)\5->e3f9j<+lbpZ]$km4@GD68TIL$U9h9Ap\E?*3H#ap%=Gm5u\.5Th<SPNFg(6q1@pd:pqJ1-<_!7.e,*`TP.-Q.?
%Y:s\@*U=nXU[pkf%%:d)#]S-'dL-`3V_ArJTg2N+U+WK.qHAF<_#Aj<K_M&%3X=6^->igVjP4pLaJ$l_FW!M4'@/Hg4m1%^8M17\
%i9Rh-fl4g3VG`T=ja\+!,^^0j-`b>sn@RDn_AGWe".gO<XrN;"TRf%q!tGR@G:\,lZ)=\!M1g^92,2;MJ!^5NnXKbd"ilehp5TP#
%OEGD[VWMOc2[!(f./8%AH$78ZjluSn^f:C3+>#(NWlXadXJ4K$OQ?L<(DYVfMh)8c0A(hNgT4e`4.m]Y4jkg93:!]0*AJ1p^r/&o
%2^=KC5(qHdi#hiY68N.ol&O`L5pQ`lRo.ei79dQ)'ZoZ]#%>V7S(?Og`_rtQ4`YEN_iflBjnSrILdnfKE1_itR9ln=#8U:F/Q]aL
%SjM)-@6`\'015$2%849-,7N'@#Dji^l&lGGb]l"b<el+,gA#G@<[`Wi>^P@)VS_V'p,up8_m"8h83Go\ilRN;B3>;OBbSl[GX+.2
%0jCZ5Gp@MQQN`[#)>i0tCB3=.1/(*bH6#KeN:%0Rkp03meQ1c7E#K(@G8c?[W*iJ!.l!"LbrS)^.uW'\1\1p9cpOL:3DeX*18r_W
%Nja?K(B'q<1RYnW=<nga@&4i:'bq="@Z$c/-t5*:@bg&WNW)>`lOZJ-;]CkSO>833)=L0=XRBms)FGNVYt2sCIA)0KPX25=%?kK9
%>4e5anCV+]WPN]jR]+iW4(P,IgZ?*k&H_kF9VS]PR07?W]LiD5`'V`2K3r^Q+&E_PD6^-tpr$(FeB,]KK<QmSURm7ed&:hlko5`9
%c3K@U1a'$7k0P/Ri(ngU)5(E>Yj8je2\oA07Dr<JNG6e(dP'8FSCAM?b[Fb7LN:U.`s9Cfb\@rtC-P9@HcLe@!Ya`26,'QG&\1X+
%)(p3QB,@Ht8>YoSX[e]V),@9K7KAh:#6DCG:*Cd16E\N`[L[!a>u4">`$lPF&/.7K2K5s1%X2aH2qHMSWE_pPJ>gAemQ*I)je)AR
%TG)].P,j:0@$im'O\P32n2qB=p7T)h.L,2g9J1oa7_iRHaC5q$U_3D*L(L3s7ljNYoX)R=5fTd3\3p[WGTlu6B4?":'.d8tEOI.P
%:jb]_%GAOa3&L[?=]g'3/4Bt,8<YQ2c#%#`N>0sb"XXGR3]#o'B6btAh14(4n<A'hN@:sN.@&lHacnnT#Kit>CIMkXPR@+*D)42Z
%@-&m?bi3h`/CBs([qO=SC9Un6E)*Yl&poZO71rIdLo1A4IE.J.6inEg]2Zh:(cE`CYptWs75_n)]-Hmc?2WY:.ooY(R"2OX9LYWi
%Ls@\!o@6)#NBNa1o[ms>iK8Qn]^MOt6'NqafGi3pRQ)qYBVRHmQ:ZlA4Ph-%-\ujW[tO@CG,HO\A00o5P_!nW;L&Q%mc$QeA.3k%
%:(;t!jUiOE4ETLcTt%>mlj?RL[V)8@$&L7i(&+e>+W(b;`occ,!bE.eM<k?Gqa@Y/:<f:5gn+n3.QtS_I9E$Y#PC3,gLYL6m'1ZI
%q.lG7-sE.rmADIX0F[b<Cc`iIb.:$-D[_nsW\(mr6H&*C1t*#?D0%EQXOO3,G-;Sk5ZK?K_g\=?N,f^B::":5ZGF0C,S(QB7i5VV
%Bd,T[.(E(fH]J\*oGQ]B8OYFpEgO!Y5mLj>V$ahu/bUX)U*e^T6u;:#g0e"bk:^YLcI4\'[UXe&fS:U_qHaH0.(7d.;XF09<GQ"t
%8^5<o/.V@hXC@#6d@PlFN?u.*6ObE>PN+0,.PN=#c(3rb21.7C!0^Xp0.(i+biVDB?N>`JpnA4kYc;,_'m>D-ar,Flm1`*.&->d$
%Zan-f"B=An`+S/XLT/sVgon['$;^4ifqG@aXDk5jl!3/fMkr[Rn&j..=%gs&^oFD7gf7u'i#Z#`=M`%oB-T3kL2h'm\4*MVlKh[`
%_@r=3SR<*!'$&J,[oehkfm#<U6HIjfn6S(`i5dX,bqXqb@gs&)E)d\1ET;n_E]B[oq/7BF,Rhmj7<,;1Ie@At`G8MMKGG/Z!Khcs
%:@pX#ZjB,lrt`3Uo%Qhdfir?'R5-l/0-Rp)N$/#eLF#M(1?ajbBIYi+MOlMI%I??+kOb,2rWobcO>F%Vf+r6Gnr"_o>=_EM,j)2e
%!Yb?e7&`s^c..n4BcT]LF<K$u8h/^!+_s&+"NR2-K:e(Dn08a/fOG>!W`:J9jcX5+'SIIDfZ@AI1G]WdK.^at!'NbDmgq92\[WKV
%7OXm8-B\d0R.YaHh-rp:T,%eui$!U]E'uIN#IgR-[Ys%(K[Ci5.hWiC:p<7rKI2A'+9ID('#s`@g5.Kk]8>^*=Z`i>d_Wk,Eg?e1
%'j;5U^d-A+\nb,K9XS^]S`B63gE!>$VG7Yr)+%PRT+@2Ng=Ll\N3sU_\:D`3O>3W9Hi%aHL@f4E$D+F-hZcOal>]ub=De9b*DANo
%PEN?#,/+O4#'r0=\#q]#-KS$C*W9k:etg"FLf4]`]2/YeVOMaUS.tZA*Z\c59,o!AA6ps0rQ-V-<Qtl1ip8r[pAc0R-C$3V6j`BS
%R&o:%-3!>08c]%&7U0DXC8ZlTGZMr][1Z^lW+9YGbc2JK%X?]YOJE5j%4ji$`UjDa1'c\;?G%\+PeHqu$e(8$8[@3L([J:&7+QcB
%P]d'&aGD^anG'[*T>J]qcH<H@UEUF`[k?kph-4hF/$:L'l(#92V^urpfPM(a&@R\NRKi5)!jZr:7`9eU/TJ"NM.Ri.b/Ft%^`/0+
%&9O;YXbXf-,MX.+.$;)kPl(8j^8nA&i367D^>KbN`m:H*dW6hC7:@WQahR.AX'&o;lE'IbMBq[*M10uS#lfr?@Lr"n2E9NPO%<7c
%QkXV9,R$TY=]Hp4S1u[@$e?SJi_VOg0NI,+?t.WHQt_;4Bo:W!C_7[kdh:f56Y$Tk-t"a:![Rr-emH7L`&,dQd+sMLiHc$%<1hDo
%0^0hN.0^a,'>\?IUq`_Vn0piT/!0+Ze!401&)hG,e4JUUnBeDAWa!7^!cJ><Fh&(J"h'.MXB"1J9Y]-2[]gN!#K7`Y,/5;?M+AK:
%#sqbrjtg.&i>NRti+T4*61$+plDQru;.p''/.RT/<!uE*\rc!Gg;4[/=g8[Y&au<l?fu9k#p>>&MO.m@!`9O=LDqG#K]o`P^+BKT
%==ugD#t9oE9lj@kc5*Z(ir!Y!<E/ji2Bi@;32]AG?p."76B%q3c0GLo<#geV.mhnmb"X_q=K".mW3Fbd^=\6.g_>EQHRS7($<i/8
%=II'IOqp:r'&&Z8iBaQRo&**3U+;F]XeRa2'uh9<fe^=Q=LF/8[*6m>O]5("_.HOViODDo5M,-?+X\bg.5V,`0.YS;b.oq?LHE]9
%3qmQQ"E-C.=32]&N.\cjVcqn7&q[nR7Y?r$JuQbGaq65OAgh;O<tkG[iX)]maiY%-Rn.FTPgM>KF2L)h$to#&1_Hladkub[N$Sa!
%;\Tm\*g;#`YYOR.#0`0.cXF,J9Oiqb,\dBB)5.j'OcL!a+MRqe;o`c9I#k)`0"5[`L0:%^^%[FdnXk/#\+:G0-Q@_m(p6)6I6!&#
%8p=aQPTe9Q/^pLmKo#1qfToPYGd1*j*(H,%:WTQ1!Y+<,Kl'\`eJ.GG[4WQ_=_H'*\:XNT6*<u0<d'!G)^>Q&\hZLG39iI2Dab#>
%o'pbi3<-5'QL0_@5.bXl"GoEQH;8#2HH>"Rk=p(B0_#Fe[\c;(l@PjInFDa3.[!qiC7&Ri]11ES2[(Ki4Ij?W/Y4T`/3X1O(W&$!
%7%OO%k[5^\WO%OO0IQAqPO(Q.!^M6i7%H`'+OlMsijacD0G+A^U(m<La(L7=$P0="poNBUSDho?B-9;V]"M>c5'[(]lP+kRo]Z]3
%%JXg%RJX'R?dNa%@6Ik%^jD/l"rKq/IsI__`LpL*"V\S92N?]=4fKOVfm/B*!""A2APe!]fqj#J"bJkH/3=1%^qql\4P8%M+JGN@
%*-rGJi)P@=P1t&fRu<YG$Ror$]g"qc5jp`.(+W;GJ0[1_.-I&b&,]#W)7\0%'L;1"Y!1$]$r*c]+_9dNIKD$!d:<je(m#$k7NZ7?
%DnJX>UFZ2^O"2t^W*@)jrunGr8U=c08bgnC&k_&?Ldc<-0o@u'i(eB_l?5p2ELe/2pc*s.G=$sSB)G4kN7$bZP&u`C$"At6l3;.@
%9)M>)NXr!hh?YQ-]jWiL'2U$Bq]Z*!:hXDp/);n6T(`BiFSTQFU?r!@YF3*DPtgq@GaQH7%^'l>kC@qM9gN+h?4`d5P,jOsBEs(]
%'<;jA`//jHEiXs3O'$*?rFHWYJt@W@dB,I6`jZ5HjV8rSla"`s-951e_4n!W<n0aS$=;i&6WlAKPT'TjaPEj7WuHj!;ih&=d2P5:
%D(:no`^S#1fPW#T)HjI"`/o,5lp__;a^7U%alZn1os;_"U$P46@/`)s1e1Q?fAf2r'f&Gm@ZPgL5S%M`57HWA^ZF5Q+JrtX-'EX[
%6EB:jEY(7f";?jpGUpYLqBrCfbj68q9T;!6T"lRYCIX()\ZaL9X9,]A_GlHrHOLih$nL7:#ET\YXW^?m!3?'V2:I"'4r<3m"M@Wc
%'8[UXOH\1bl0C[-h3$a+3^"6"p6V3(R54oh&977okUk^Y]c+:?!qA3:J,gH"_(__k:)0[l[t*I1=>5qrBVS*/!W8U*f9M@@.k/"0
%d;JC\rll1L7aa5Y^0>k$"ANk!BAK*IT0uKpmg,"`D12f-mQf0nMCXQCJmEW/!8^&g_$._AH\k]3]gV%OJGieZM*PdQ%g2)Uh)q&P
%&<Ilc#?H.<.!,"ufKZH5N,Efb*HNWEcEoi6.'ng?b?54Hob"bZSR.9oHC.7D5Z!/pDU`0[n&3-UakU<9%(e6lOc9tf:o,*l$_bX"
%Y9[68JK&-7%&R(B%H0]aW_<XGi!`l6"C-W^:9Y?<gdpK;0>X;Bp8esh(>=;C$4r$'T2L;IiAl&p5:JVE"EXf;O.l!KP/&/F9Vdck
%fp3WlmQ<04pZ@(ihMem;dr:JC9l3=]8/(25n[?hf9?X)/IR_n=Ko+pND;.jV%dK.FO6'*KBK38S4[TLF\V%ih3q7bbFY`"KAOQKo
%95rK+IRr^_60;pnHX\8oA-eE2KIX94#hbprcj+`[fj'QAOA3\tU5ZAa*=c,+Z$GD*=p%TQNXbTl#W8Cd$gSj$<+KFScIt\++Z]Un
%8Qb`Oj*D;BQ3#S\rX=,>4Df&#0cW^[+W`T-*YG3+Zam>K4R/:"65-G/A=c`d^[)>jfa3GodA"ST)HjE'?+Ek%#k(0dc),Ph_,k&i
%E!tffiDk5Vi0;32qMO6jph_oEKol,kZQMm\@&gnH=@U61:uXLP1ed>pS*=I*6>Yj_R$>T\3X6"+1q?kg$(gV_)N\(6:@l3"jrrEr
%P1*4F'#hDi]mcau[()3<+m\pge1A<hUuq.+n2FX[h`7C8^Je>PiM8O]FD(@];7DFBL<_tF6i,rgCXiq7l%bDt9g%F*iZs:H5b+21
%gdJ!#R\`\U?#tbDW0m]oFB#NfND4m"W\oIP8in"&5k;@n=]^r.D5e*<&b1VJqb\a`g.0s#,[`'"aV[bighmqfEr:,i<"ZKrSK%KZ
%%!F3E%UidcW1L"]dR9pZdf$>8:K>mR,ue]Ff7ANF6ST?7&F@p5:`"T/TqW/#6aKu0.Uqq1L$ch@bBCS"6^u8.<d.P;\&KhalKl;D
%r<se"XV?>_Pa"8c8hZ8iF)To!qr?.-puOFR\6fJ\AVDAJgSTYTJ&j$\*N4,R.2<mFAS;,4L(,$97mif.^8mqfJPf3P#p'8DJ\4?r
%RJJuJb91A`%QtntYq\F<6RMJq28NZ4a9"fW1Q?('g`5G3$El09.q+<]9S%Vj'Gl3K`?1n\#nI6j2)sg)!_^,"'\i^-RNh7NerB-`
%"0n4A<n)BQ#&+lrA9SjG^#J3'"]'P89?&cr?C"T+<dZDIQV1)8D[R\:="AJO2AON?UeCd1m,1F]_@/X[+T;5@1U3%`pd3Hu.*<i8
%UQ6n<,uMqF].R%OpETqh?.RQQ!mae_&%da&6[i_QY%aELno2iT0gc'GO2A,;&"ATdY1kDYJo^NNSW7RL0@0aFk4*U6W/j`LpNN/i
%b8=X7:i/drb*l#YVGa,"Bqr*O-7,4F.1!>9]+o#hRb"WMb#2tQ<TTRUQ^,\@2\T3\<Zq1?B>3)+eo!dcj5kUAn#!GYh>7"tKI&R>
%A5"O\pu0pHJHk$c86TY[^`0R3:m/\jX!SOX0eTFP+U1N:#KS`%qc9)-VoVYSd%3sEaSY(\#DNK)RWF^e>SL]oIXoPq2rGWJUIABe
%E)=E.dgd'=68Ofj;5/Y7<)LEp;Ma$m[fDXJqLE=36-r.Jp4nZSI-eT)qs0*!Se=RrFZkFXcp[2u)NI.)+OAHHB7]h2.Ms]0V<&uL
%)6>qGn5G0'$[@YmG>d*-9MX:298U=eW,!"cm)T0)(kUI\83)T=""sJ.gD1T^;R?JO=)*GKD1]\lc,G+YABdd$QS6N5/Jrma.7=&(
%VK^3/GnGbH#]#)>+=blj*4fk2#iTj%ljKY]ZFmSC3s((lhu24sp,*S<jH#.;]U1C4Z=lCMN-p-df</7-E/?gjVReCf$c\H/]I'lp
%S:H3V8:I0-ZPRZ`WUa2LK\L?$"$u0\l=*f80ic'Y/[C3J&/U:h`(0VYTH521g$^rD?\KBMAas>]W)/G+;kt7co*b7p8`[/7H\pS0
%e;&\]=K2I2(codC1,VNA%8j5/;ud!D7c%jYP,A]6MK8ksPk7q*"Jh+5jb<&(A@WZi7X)SI,Ym8g8gtO\2Db;!JQt&GQNjGX*+E?p
%c#U<5<Sr1Kim1.^_m5P>!?1L\[!5(Uk&&["o."HRU(9&YMo"Dsd%Vq@h)El85>i`,$^m[K<=gPVqDB=d51/g\5e7-#Vb8:afLX.u
%A,si;X[=dbfFVDA7:Nd0_u$U>,K]O&O+d@r],V7KB1\lB+:BdkL%-&=]GWuT0/]5KLE55WnAnG\Nc?5a66lphX"=-Tl4QQO1b?f?
%,E?o+-DL6C"M,D/W-1a"d5+CoB_o(RmDpR],8.)^<-mS@\Fc"j'_)=/\)e`.AhPM8,V@3Q98ubM<9B2@pG12U%[c$"@&-=,&44=R
%,@RT"`LP*I/:ha"AY$Mi;;+ua.M*`nYF$`t]]Rr_8^?gcb%eej?llK14pOa_en+DJ1Dqo!TlcdW#^GqMRnM=01X\Rl733MZlVSjN
%(%%3lIH`M$Hm/"%E%e5_(Y.\S\ed/W6u3.]Q_f:97<&@/<A.E@qUk6Hp0umY\&N5&B7`$;T:iqoLW?;QnpAYY!.V@'Fmf9&][53o
%>W;^],m#W6bIRf2-)j;JAcC0sTZeh$p;m0j/.2i@0`i5L'joM`1>S(LLMj&`0M.(uj:F^\_N5/YV*T\jARS(,@GM.1T-.#faFcQ*
%E6;.!=(IOL""H=lFKlN9%YMeLi4>,H"("Y[.J26+H$nn]htM2C]*uLmLf\BnITYQ'?&BY![6U1AUneX>Mr_H8I8egc(l68caX(Y%
%?)a1=6F:U<m)j;#\IfH*T]bbO+d(#Hf=,:KH_BGnSsS":pa$#Q59Wh:PF.Jt.u"4QatI].q!ckLCR6Ee-DUF%dD$d?7iEZRp<2:q
%<O<^XR%UV#h`2`Fp<>!%?)f0D[0A+e#EEiU-%QOph_X*.ibD>gGmMS=<ZJS+6T0+DC*]Hef4[cR\CnfS6*!8LXLi>hIWEtO/ZY\e
%i-R%cEDfJH4AEu2D_X<gX)].*7)!cnj'r>n^>CT%`KLo+M>?[/<Y[oq[["ZX.ZKNZ]oX#<&BVJQmTJQFI]-^W^iEOS:P)@bffg%;
%[P_mTY,7349NkSVP+/c0r%TMjZ:bmW=629F/"E=M<K@Z6CF#("ZW2`!Mit<B3V'%,+6QT)/@oFqH-2mR3Pm<JlOWsdpt0r.pNfn4
%2$EPrL3*(+&9*348J56d]@J-8/C`U8m(HG(Y&5L\4AdZFPU#?VPNM9)q3\-1i^7.3VWE\="H\3H^T%Y2XL!frGm$m[@;0f%MJ3:d
%5lr;<-s;BF]J*/;K?5lDG_s):[QYt3e5ZMI'(HfhTpFYS!\qT'=\Lr`F]X-LC'O5>j6VOO^V=s_j($^@Y$[cS'E[A)L4"H'1"eOb
%Es7cK2do$&;PrU5R1Ki&m^D-I`t+n$!NAOi8.bA:UgK8F+aOB/jEFU9=K.h'"rM:"4%b2@AIV4Jol'0LdEudVAh,0YBNcoUY"Z`<
%d+B)m]8[C$)GA*]5-29H`tG'W9j5o;>[5F-[OPJ@\B<#PNsHd1OV(:9o*#65BQh=*UfG71cs4pr<&9^PPjT.ZnB]dC/#5,R_`[[m
%b1nsB0WNW*/'<KhGfQ_=%1rW-e3.uce*BT&l[q7D[s2HL<-'b6[i#CGdlQ/^1Sf@f(XiS<:.d>s@BKOsf<%'7Km`7&]nQ\#@M^2q
%It(V#U0+:G<iM]#$_=P6mHXEB&:T!Ff>$XQU36^4)[Ii#q&b3jWjWU1Ait=U,`]@X,AC'p?5O,lDDZ,SJGMcr&F5IiE;?N4R4\i@
%Pe2e(\Oa9)P-UM.(#GWi`9U'[(%>A"R;is_U(<OF&^5kLCuh7f=-X1"6s:A#h^S\XBUJuC<h1U@:e)7T)CI5QIWlB2BRNr2j#g:4
%TMfg]h,V0mPnKB"j;W8mYC6?Df^ljn5T1As,!@''UF78mAp$sE,*;q^"=DTI;Dc=VLspU%Md3n5m9sbID/r,.io,o>/3I_tTR:p6
%g;A-*6(Q)^"HU#@,m.(=>:-39A24W2^bFBC'Q\]QDSfQk3oc/jMon;XWb5'S>.;X?]>,@>N@a4n0$XKbm%T'fc?,MV;Qk95=On"H
%lF5tB6<Ah&Ob>6kO)ssC$qrg"j/2#]=cb!EF@JKBT?#!UpA62aZe5(AXgqD=6E<rSBo%c`-<G^F.C$]53c.ud06jG[Y#/oP'I$Wn
%`:4%plUh)uM_#7-E&G':d!%LO#o$C\A$[XJR6QLP=-6pk^piN[qR0iScO/6T7alm:,fL/?pD*cR=nW[eaN\gg=ST*X4TpKAEIKdc
%BbF>MAKBpI-A^q"n@Zu+Ol1d%s2:S6k)A-^e>+>eh/.L@`QARP(h$6Ien$Qj-V212'/fh3ED'6nkrRq+fu&o^Kuou>I"i@FI@*83
%*'beMi,'77P?&[ECToT&70ti,<ntC1)A8]Z'#Pl+0SK-d!?^tI^(.$\a!(/gNc=bkQ0\l,/$#u[/#F_N@"d;mGr!A4>[3O[abgrS
%%OkDh'YMeC4*!fkD&6n0I.Tl4kTqc69l6>YQ50ELBR<L*P!rPf,4DFd-VKhYhRHfg7?rXfD@S#'E*u<jY+mdfOT=kl^UCV8=7`.:
%_qBa>b-QsS5imN3Mg:F^F')=;AJ")Cq[RlYl<)8XE==Ub.7S$Hd8>GW[/M36SS_$u.9&MX-cVB#8.uX_%Pg--X.*.6dn.i*INB)/
%,C^0&A:0s`2eDn15*'B3@0ON25IX!hKAqEoY:=Hu>*nf9'YjGtW\=]i-%4J5VY:,apc-KHhe[BBO=H,IRMZ\<&N;!k8d8.-&KimY
%fT<1U`#?h\+>U=A=uD!69.UM\+B:4'1VHhWBOPc3'Q3[hS3)#N7:&O=fN!O<&l""F5%rucY]p\D6jU!3LLEUV61#m6<VSjolG6J-
%Jqc.M6cl:D$nZk:D/M!^>(5\6a2dWF?'AsO519=%Q"p;[e[-YKks/i;D.tPa_5NQPANQ8Lii&l>bT@fj#U;6i[)1L2-Eh0Kr[m8'
%iu!#CFMbe++qQ/,R/<:V6G8Mu`>-Ck;6%f#)&LOX)4$BH9&8aR6Hs[!8a%$+Q]3a?oA+7`7YeFnZ/NQKoaAfrUm@20(GAc+\gbNt
%QJ05ehYSX7MT11;q#%%GF4bRQ7KP32"C`Bli2!<6A6=A!7D4PdNfp/S*o%m,oD/;EZYu9X*i>#P=K89ELtX1t%[IBV)TBFGBt!7$
%IM`r`O5o>G*NkVLWb*A_KU=N&aXi+DqZ>3KOeEpX4;U9:1eAGh6Z-sHUeuAZbW_O4pg[e37bn&L.[gLDDGoS8doa8Q^XB;3o/S\u
%,K3DGT@LTBLaR'nHX%4',m$T<4THj[_L_Q@1g/94LSQY./=<2rVb%R9U]Np65"sNl^p<&G.oI)c0e!HI@;t$X?F3TiWN4=rN.gFa
%B9X[,@6R2Kf'[.+A$KU?R-"`N=*S<?V*(Ns#hCUdWuS00_:]/BF):HgEf67*`*1/]1`dQZQqC@;("8k"eP\W]G5Bs8`FdK7/7,[i
%T8UilXi@\)-0Ij3OQ.-)l*6P4G"HJ165.0$`VoiNYe"^%h.^%a9Z:[cC:B6"156km8+rR'@f:e5i-`nfq2Y^DPNYaj#On'':\[:X
%C++tV$p8&S$*6`4Fo$?GMK,-@V_)RnGTA:()?j?B4UL[[U7TC1%$Fs]^B*)di8I!9jO?b2V/ebeL.[#%DM4m+]%tjb(7mEhqc/5S
%9a,#$_b5%dIt4/Y]ZIJ1Gd4sAJ[#5b3S:r4O6l1D$1RKrJl%bMUHb118(/&tE86tuMoF;uiF`s"\sF3[5I%mFd`]$<\!?i=ER*Op
%<!h80XoOZb%bYo#qGsa..uVnGFFqI^(CTXrHFdV&)p(_?W#)>42r$*]gKCMPc*V6.23PZ_HZX%0e:]kkP+nE,Ft%TR\:^`\Ar2jd
%/W\FsQir!SNA^-[PGuXd_0lUG)j^HePfm"0WMh8J7X@AMp^e%U5I);0ihgto*Tgq7h89e)eN/gOZ1-F?keMbkU;S'/"\i)5\$U_u
%e<SCd?Mb&;.:@j;l$ceOMT7;kU??Yjf*r==o>cSl+I;@>+GAY%l?UWN)0W3?.5U;M5Kr`>a4^L)H3Ykm(MtO"7tu7r=&<D5XC@*:
%grDsMKS+W>9uRE*ekRm@Cg2L>PTkT?W\m<i82AeFd60*:FgC6AC(Ig\R?pp=-,XfhC=j7%K!SOkgHpluX;c,cHX*MZ&8>0:>l179
%"YS'-R8\-/1m5LS'qme!gDkUrG/oBJ5p!&N*9!UVUSCA%qZRh;D.GH0h\^VK(fS0T0Gf']&lJ"XiaPeeAi>j5I+M)p6I\]o,Lc;2
%OoA+Qi.-g"Z`MhBX/r.5"Rh08ESD:"Tsc/E+EoA&B0VAV+Fe4q_2YL57hTrmq`:/eT8)"e1VhlPqd8,Ol$i:9rI^(IK!nUGM5_K6
%F)F7,3UbGl1QB_5q`9\a1b>ppQ\l*mlB+'*7c=A')[Yg:r-nMI'7'Ff@LY+DKp8c,fof6>"Q6^Zc4I#cR',`[:pgZIlS,##(HW_n
%T%8I@L;;\@J3ML[T'NU'^4O"*O]%bVf&ot+=k=Xa(\U7uqD'#"TZ&,=K:]#:\pQHeSNr8@EB/W*'.GW.I0Z8o9[AR<T*+e*?!VST
%Z((YBlP-T0^k6%JkH1$>#>bsTX=PqsPIcMN!..":Al'/2cbh#Zc:U7%->GT/<atn6!('&G176J1#XjQ^Z>a4e?s"+[^_E:cbd4UL
%D-3\W'fXh#(,Ak\8S0_WanPm#0b6EMV$lR%o&\<<(m0-Tg(Y70m(XU+oc%f%Na3#dFpujgA\P=jni5eu(k;?<3I^+lVJPo0(guQk
%;JTJMVi3_K,::^42',4\PLcmVo<d`!:QN`5?E^-kRPN@MVr`7Q@S)lBp?j9qi%YXOSRsViG!28HOTaL.6uOTs.$IK(RmPCY&tmOm
%]9n@"5DKYR<M^XCGoV5F[U25jPPXc[[_/'?D]4aMUUndqHXYENA7O:>jpOXLDPeU/,K;pR.OG=p7\HWj-ifgB5>C>9I9FDEgU'9V
%DRX0'ltb(7G4N9P<!$hQ)9'I_A$*d@NMOW$XW`J]F9f?hW62e7`O9,;FHlV46E"/W0buQQJ?!HGQLUKBO6u-*4flGg6\bTb3Y8jB
%bKXgiRZo9(+P;V`,gMd\]Ahu:r3eYi'1A-[MniHWZk^EM.2Ece(GXI>Fe1muBWrY-0Wb&;qD@:fTe-NRPG!HXKig?'EOl=pKh7Yt
%AaXq("mq8./DPbEA9AqXRAM9*eL=Zm[KPPk[5BOP+J<Dl,F6*5qp"1CG$A1sY5s*k0n8"OPl>a?Ha<bqJh;d]jf>.B-Hg&gfs?K'
%Y't"u=)*:R7"O0*4l`>iFEM^FLP]kH&.W%`6@P]KHHB,B^:DDiEJJ?0=bpefRh.K5E>>uYe-r3L;r5^$dEJ,<;(^L7c<m(EO+E=3
%r;(#G?TgTuM#4hN+dl<)YZMJkJ13ih?ZFe;;=1+<6&Ed,3j45><LQq9\4"2`bb\XI^:AQ)O9)Q^lYZue_.6`L3JG#f8:d%p%hm^W
%8@A<]6Ce$.X9sJ20Vq00X19jrhHWs/qPMsD@8]E#Dar[<h*g=`gY0g;"KQ=C5d"@kPmU7.^LD!<o^js&E19C3!K3*j0F`1j<kr%+
%_n5]H`H(P'!&5mP9GF90Gnd(.d!7`;Ms#CSgE75aFTK=D8VYMCV,A>B8Q(c]YIJSPKf*Ik<?r>,,Eq%-@K4T:YK^DMT<!OXmP&I2
%rXhcA=e<.?4[P\<Y`()SH5NQsO8Q*mHJU%pi]U3J`4"c^n8RI3eV](p5"mR$n;\'fd"!-C"'1sSqC/mU".nA;7\`h,f@39E\+eA4
%0?a=]]F`^p3kC^JaCXK"]BN2$f)Pq8fC4C8pb5<dB*rZc/c88[X6]gYB"2QQhDMm*>NsJ>cJ?/EotE;rKl\@l*--4m"FUO2DlN[R
%U3;@%cjuQ?d<=q'(j]]c[k.jOet_'0S5KHqKsclB#Y(TFl[;?_El"^RQn3^J2]BYrf4NKu9NGq4b,>#u5EFm1(#a$aR26>8.!+I_
%9Ro^5&Gg8j3sSJo"o!&j1'NlJ.BD6iTd24kP>=jrFW/>-cZp:)jgcCtf=S'WRTSl8oQp+_N*rCG=P0E`Ag'\T8;Ye_bn3sE>VWo%
%`"<4CA:LoFXE3W<nFYd1O2F>V2@g;Y`_j2I(o2Cf-:E3*q#U,JK@VPD*$8N7XHs,9hQ<l#aTR>+gLu-gh4T,Z%RhOCV/=$PS^Tb-
%)`*e.(;k3fmH2mg[C'NP@1eMjIL@d0N@<+eO_9a8_rAue!:&l*0`Mr-5RhO*+1B51g\uKG*5m]ua3AqA1Guf$oN/-7RHqcZ^2;Yi
%C?bEY`\/ir+.q^ignM&]dN/N-]"@W_*+Y&\5@=X.3j>9)FOn4VA*:L/cPQHS]PfG+D@nH;k6nu)kMq*k32cMB4KL_kd@+PYphWBU
%1r@Q;"le9ceV]>FO8!#VCjd='N[O^?4ZhqE5J2+Q&D`edVoo8geihnr[P<BR+^?ol[<k,D2Te;G#WfrK)D;\XE8!S1W]fnC`?<F9
%@T$N-gSbaN3%lhW$TX`c_)1Yndfss?Q2BgQNGO0fQd^+6>u'.tH9#ge1qI$h)_12,[>2q>"1dQW2\KF9Sp@M_G\nST'R'NKg4kjr
%%^1kTV)b/S)lQSSH#q[>YqK[\:)aIb"j+NL[LofR2lCM[QhGCP`^QA93Gmf!Uck5+aE;<Yl#>@r&k;E\g()Tj[N3rggP4C8?@Ei2
%46E$eL<$pOaE$%./McDVK\OL4]@NJ+7^W3PVqZqI*G_8'(g'f0m?$IKq`MjcgP%Ug>RN+=2UHU7d*oY_[ZR_;8%<DtV40L)/G.[>
%mQ1&do@p42h=d>q7_7AX:VR>Ya#OX6o%QDDX"`)g[o'5Ro[@`rR'[eLrn+a%L/5i!Wp6GTgP%dm9.n6oX+BPH:<+s9@h-foT;dK"
%-dN6[d-0f?F/'l"3ZU/,FOb\BNn[u'*4MD;NZ3FA,Uf#>L@V)\1,#!SL.NVIA34\%&aoPY\7)P*h;17Q^2-p5\RG-l0i-+)SCT42
%>RSkp0F,!\c]'uf\Y#JJo:$>nFSFRFMtUML)ceW_,J6,t<!0aOo^LX*$4='-gkM$7LZe@dSY"T\.aMr7q:Ef2isfJr^-"=_nC_8N
%f>Q!)LqGi/cF)'gSf:`1Pu#_CY_Z\W/f=obg2F,5=JM^@o=@a27>L4&Fdmc"h6=$+1>he&4O(MO/$Y/\@>;=.+,+a"\=]pPFC'Z8
%k<:r=C(ZMTFM>UBYrtj^cCJAR[LGE`j$HQeh"O[-/77Y8CEK,&A^5-Lp`GN5oOb\Cd?jO[7e(9i^5W3,]\bVE#bjo8ptA.+_"5!k
%U'`8tfgJsCFPfJ68O`KdM38RaoXA*?eP8:_`\%VXIOc5T/kUiiQ/?a^$lF9Df.Ms+p0o)T.)+pCZAYHlj!:QtFIK>qfL-8!Z&'OQ
%fL57Fj0jg(Y3gWN`R?g^&=_lom;kHM;3'9^RjcIsp,Y.[fu4YTm#=;dESj/54Z;'^_@e5nCD-m7a%H#A'*VOFk4,j9c=Gd`f-WQ-
%V<`8?U,)ouDO]k6'!4/P;./`2g58T=llmmnDk^(C:(`uB-9A[mh_n>*an0-X"V#a']C7;#]/EM;"_3>*+.F\0N-X;KnX3:uk9c'$
%W!.7Y[>FIIZhh4jiiB!@0(#Bgl.AFC<pcX&<T!LHr4^L5`u^*ePM<?t:+JFIHRMXXm\aP*jh'CD:^k(?-qs!$Z^XhS[YJ>6/9.BW
%:t-)[gs/%sUJu&Hk8qcC)OkU7Z=f<%fKs3di;(*@Jj!?RgTcH-aKs]Gd*$HITVkZa-\hM'o@uS+la+7kT,?=rhtBi.>e][!S7_B,
%I:CSGm#Z#_U`uN+OOt=+L>1J^#nli9g[2kW_0g'l?h_UM%<P+*dd>!PZCY]Md,)0[^j;T&^]*ZU$$[D9F2)W1O2qP5Wk+Pp=6/DG
%*Y6//WAV`">0k7pR(q@cD;L5\Q[+)3qn''BZe'2HRDX=R/YI199E%rOn^N42kOn/lis3A-OhTW:ANeo4_pc?5%Ofo3,MD`N0C/En
%=*aOQj7+gi9[g1IO(\uZb'U/'DLFrhc<p?_I77pX&,+CqG1+u+GjD.TArD!X?,gs`!dQc^L[Se:q[Ft(r2[hIlkUuqNU%;:_0];1
%=8DE_Df5]Vn_*N=7c793j2@sgdt`[caR-;E%<r`k">:k.O>Am:mI6g#-6l%GbD1i:3JUBP>*uWPV9#OWCfAAs1Cf]/6E=^0^:DUE
%i]bW57irYB^br0"NB[!j'L).t%3M$'QZXFY%kXn:Hc"`0_q:kT;!g[BO]C%P-X%fHah(P4dF&Pdck`0cir<%@SS2L-*&2[udHLFE
%b^l<uHnn<I^78jDO1.%iRc7j^X@MuX.7GW<L[^uFFdD$#*'Q3\c^k#VU*2#cFA5OYqD>mUkgO8oRQm]Ub>'m4gU=eun=o`+Q4LD?
%NON"bX4iKoQn@"=WUQY8;Z^E^(JXg<^S(p*46''7Y,eCF]4Q^D&e6`lAX*OWfn!09=gh7"#FZqP=0@So1lER[.1lJ7ISccqVuOuq
%[,g![rF[<hpC:@U36RNs$uOI4T39;_V]so/NlDs7%6>,lNObQ+cfC5>ku8=,3W^6dpR/(tN,B1#RENR\q>fq>^J>3P"MABM4Y8?%
%iB>)Y15<u!k1:A[Ed5p.l/b(cXn82n$Ab#HBAPpWO2HJ0Cro:QdXR#1l2.%N1JH1n0E50.>C>A)s/]WFa&;c[0U:$qQJ$cME`plU
%5Ju"%"hfNf/C=+]U^d?lK=&))J*+%Z*NnWlA#)M-oAr5I5V@g$j?UW2`O[$1oO0dcke!*D1e7JdG"_$dlNVq'#ToMq]<>>^3T]dY
%\XbpkB%ju>TXa>M"(<RG!,S44_Dh0ZY(t+@8G+sG$SbPVG:EC8+83aqgBK^/&3jHObBWI:V!7bVj1/lRq9?BCS,&ZF:ZrSPVB^rb
%oR;FTj'6u<?G?K3Agikl\jKZt]G;gWp&*KM5!Hj<1ZF3C\EMU#0C*n="n^r+^[GSoI)ad3n[%o\))4BJ\GC!l_e6V&7R(#dVt'Fj
%T<7:cr7V\UNnU@\+\r:m1O]ld)715='&+8fpg:?;dH&YX*/a\PlP>s$XXfWO5?fRUSEJW[I'sY'QArkr`7b^el[?\GbGS*[4#!B;
%1hAHU'L5K7@a%hM2C9V!=[5PU';DK>\F,][-nRs)65WSh>DTMberXEt4Vnlc&dQ5oi%#,VLWhPVnQ0+d"lU>_ebZ3V^kK^eC_j7.
%acHZ69nek:]Of%YX#WRg$($(r"<t75A\dKXOG2lsfLXntEPC1=3P43\N1P@o(6tm3EIHXWrGFp2j66QL8fc9:lQ#sO)WTTBY->".
%"5GKTX[RJu=G_.U`R]DbBGXOqIi&9K(Q=pK,*e1"QZsGSalek1$iu<!]hHPX+mRjOX4#(1YbTI$V$MigdblcU/KnMkQX;kEiean1
%LX7,(glP17'$@[X,>5I;BQBZ@j22j;oJpAVr&O;tJ?ZJ^_oHB^,Oir()='+H:+HdM<r!X`o`RpHY^G("JoV.0N5eH"A!1VgfR5cJ
%M245PqcQlbE1CNh6*-6!E!!VscS#ScOr3k.0]VMT.>C6^DqBjCmeF1.PuP6I<ma@.O&r1.Y*X[B%$O5jd/b]:f.F#qdDXEdaJ#&h
%/1;k''s$ZIb:DN"gJkr_*".0!;f1Od8h)SZ:$9[jZ<#p?Nh8[Q]C:'sI5.bEQkqGM&"'9Mp#@p43W",0'SW001j)Ju@^B_AH"fZp
%">Q[m=)fC<Bt9%MW41h:6VRT5Y<3HuS*r,C0K;b2jJboIF^^>7?N/^q&FaQ15!G29YXDZ)rj>g>Q;FLRc*C7KrdD,+caWIj/HA#]
%kA)t=IEkONVB2$T)H'-(.d7+P_)Ug^X0n>!OMIW+00tFKc"Wh7V(BBD=,R/blH:*U7GS%Zq,A!KhD@\FYc=G2`6A6?./W-=,[eqU
%.Gmg*1YMD3727AZS+sBB,.9&04f+iN2'Z@0U?]YVXtAHl:d6'3"8Zpg/)[/VI.`b,'q*;p`eI<E%74BeVUNKT2bhQQ`n8CkHIm#U
%$7P3W]!1W8D8FCEq;c/:o7Wn^4>^1Sl`*bT!u7fIk'(T!D=c#0'62ukLA?R%TtC!b>*>2c=g,)Upba-_m*E_DKo4]f;4k&W+fJSV
%fK6/SbWAjlamHK+2$k(hk;c4!J_[s$!l\k#0-$<CTNj0G^KqMWH\lh*DImqQc%O10h:.e?9Qr"I")fO"`bAn0k"FG5SW^UA[;0]X
%;Tm\#fG<<p:p7F!Z?Zc00D;:T%N2ip'l-+(.c*\ADt+X;MShM%50*/Q9&<^"1Id+*oCDQo_t:GJWNa)G5C`624q<WL2,acj(,H<G
%dJonF]O:.dp]%H=CEb#>6tgc]EN3Nml.<#Wc`W1,jg4WM-Ih1>0^<)[hVjtd?XE(^M:=kUq:lF&F+!8#E%[.@JNauZ2h29"a5n+b
%Y\oS4p]m%(r=s+L;>4Gm($e6r@c&9oU[dP-(u&;6^%pr\ZTGpFf6\]W`?'F!-Wr>F6,%I^)10t[ZW9U1Q++ebof6^BX`-p%,C-V=
%&Z&/#GK]c-K[VnL<ISkY,>3-f-IcT#H\Zunhd^LUUbVU66kGMaYU3,PbK*1Cq,pNWEZ=l:6h:gE[nqpjoX>;8>@i0Mfgb82qJP+A
%RM+AgdmJ(R`+O0u$anU\#ln]F9!R0Q_ids-/fZP@_o#)2B"`Zs-sX)n$gSQo[*B`S3o1)qU86noOD07p]j%O>B^WWn'H([Cn(0nO
%-GNc)_Nd=S3=roRL\Fo:fu:HSOCXEWX=8bfQh=uoj+pLHa#@+&"=o@*E9G(`I92l#[Ztk6R<\_P8JbEZp3<0]"uArl0'j.$L2B3_
%^*3me?_0mQ[G++7G6l(3>eDF]rg%Eu`K/`LRZ+c.W,],CJ:5>"g(%&D.KdOl,5+5RX?j"AT0m<Oe`9jX";?V"fsV$u&<:\](!;FK
%'3cu#4CQD*[_'&O8bYJ?LU%i>`:%A#Q4;hG7d!c9E'P;oa\X=\WV(CMqfbtqk<4f7Cd"t5gW;Lc(JQIlRk,An%_-m0W5c-0`81_@
%%!>E[?Wq$h4Zm>]Q)[&&/TIo.KIZljlT"2$;#%>`>8XC2=^P5*=dV`I%9)`K=0]E[D9Z%s#ihp)4qs3XM,hnVq5C[nn/dN$WTN/,
%?Z@L!7DCZ<NGOGq-fo"`RV6h8^H2`X7SWaohJ`M7"p1o0]KWl^C&amrWtYZ?(inUrM8;':i9\AP*&MDQ=dZ+Ur:N7L^CJhkJj*Bk
%,9VX+<YBorZ,S[pjUcT3%MPQi%0+o2[N,OhB^hELia"dl.b$R6h+3u0#ZJZMAU%VF&M_h==9]uA5!._fO!,$4cETMfS;l`]OL:g8
%FN,liHHdY3/P9TkPfbg)/dl:7TT2d0l$<'OG6V5U6QLsj6o^8Ed)!.99tg\U3X[C^&0cQW[Sdf9%.0l9E`_^1d_s&E*%ISBG9MMu
%s.*]SiZ^$:%)M4mI3u:DkCo^:jTm!V&PNgIV:pln+IELM_;%5A,*i!qQ<VB#1K,NpRKL:U5%:)(,1/\M#%J:C[Aq+jX<#+>*d%ZO
%\O.rR-uoGu-st3GP%pAiQ^tNb"BCINAh+G0:^bn(CFtS1b:t3%0Fb,074-&.2Q[\(a"oM<k&cDRjF["r608gUX#oXa=.keP\6MgQ
%\@OtIKGd,lD2#>$=%732fTc!S^6Q%A%7=]\Z#>Kj&:BI&eC+!cCd>en:#1ajV\N<U0;2#[AOOHEK`I=m3/[&l?TE_n'UNAqf,C=i
%DujonfY`;0l2!`WpB^ccI;U0LiMo(Z$D24U>'"OlN#J"Z/Lneea,1%\1@e8gAASOQHWD>Grd!$DU9Fd[3J<Vj9%1rRr*ClhQ7?p[
%b^.jZ=Wm*GQn$Coa23FnGEs#NO34"uV.W4,HX+4K#WEpgM^;o#bGR,sHsm3/oKH+0j'Z:5HTMAUnC20@>4!BR9STrjro<2,O:+p^
%4]5B]`F)dt@d8bP0BuYaJsA+t*2[c!S=JP%>tCr>jE?P\ETD:&JkB4UjsC;/M;W"4N[F(H[T&+?T.XBcdf>bkNG+[@A&*VR'=Ot)
%LN[d%F=l>X-1je[*KI%sAjnJ4R#>Zn`F6j%h1;dCp]RYlc#a+YY\FW8,R-\9O/_Zg;gu:*s"MRHF()seJmG.eot>Ed4r::/g[g[r
%?ieD'(7oTNm:Q7jTeNt(Xd@QU[U:gJXnC#c4=m`HSlX(ZBnBULc$i^)?sc%I05FRlg@UZZGGAVoq._e?@?EP!c_'(QQa\0t/QqZA
%97dLJ!Et$6,)B3N@>IU"^ct#rUgS#XkmJFddXEI<J!lfr,R`1K@5DF)B=*Vrgrfb:_!JT+@J'p,pJC69BnrChLPMXfpri<V,PsTD
%>mLp5\[u7m`2A9F15P5mUtGe7gqca3eO5&]0jdn]7BmN_7p-H9=,mR>(3050132-:Ud%BS4P&p[]"=f\JBl4hlRG"2itsk)h!=?k
%rGmX?_<`Jrd`1h8mj['KZ5pAXDpe(K\-ScL/js^,0G4]4AQ#7o-D2LUQ0AbD(:,r`^N5i&OA5n,^F4mZ-FUlbA@D*HQ9lr%&2YXP
%rqb*%rUMCg"2A]f%qc=&1kK0,MM\Ko/2i5=\]W)U8=L-kpX)[+Cc6]ILg4"%`s4_#kAWVd+IGE[jS?i;7#p"MSX/$E%;5[cWj`AF
%K.3p[j8Vo4nBW,5$)smKA(AVEZN;I(.*+CiOiL@3kT#XH"Y9U-*l%FED*3DTEjY^gCt(1#`oHU#f6D*V;Yb<0GPtTOLEU#RR#hDh
%3pa(S5*4YVYM1Hm/RDe&_i`$o0lIj\84)G4iV<CYT8"S0<ihuA1(Sj)&#I$Uk/k92'Es?irqqbu%u(3oB<InrU@0it8_A,?IpIjd
%S47>t+F8#50Fc!g$\#$S',?b)f#On6;$'JM^!$'Bb*K<"pUIA[/4qRYFG<A@-q#e5f@L"CX7I0S#2B9oF)Df94?D'EU8&Nh+5hat
%g-XTW2LPBjhN!+UcX@:Zl)h^LG%.e).3gY8ch\Qs&DWjbr2%\5[g0_Jp[nR\[;qm(YekI!9eP>L+2@a.`]I'$m5Vg*^Wn=teGE\Q
%q/5kur5I7"a#R*jAM@U1WDf[(?)l?WqDd5NDgPdB`31cp=-Qs\-3,S+CcJMH:)9,;kF/NX5_/`Gnmm14RD[`H<R3.%Bp2e;)Jbu"
%H<^;<2j)k^6<&+$I5jrgRW-VdDTAl/<c]TG^KAOV*gQmKnVaJkN`_<^;<dWB'XnS$hl@iOM#+]eKXqf#eg`h3RCZqrpc^@sODqGb
%'Lbt`"=??-*YAprU926*2O0A*75h;#l#hW"mi#?fg[dc,/AlSD9Y:>his:(VO5];rE-_?o1P7+P*W,b_*#f:!%3i>a4&$F5QrbGD
%=F4$,<TSCbYE%&Q4PiO4c8&te7L(*PeK8EhZg0FW`>mS)A_iLdA^r)@4--lGo"$22%)>c3]OR<'EOU,1]NB?I;QL\fe_Xf+QA9cF
%eWFe%Tu;Oe!o_=)Je->hO<%Bgmd<SlZhO_Wr1h';%;[t*o6FX4H@#VdLY)HWUET*(5*6@(kR=I!c,3(S3@dmmA0FJ5Wdi\SIA"[\
%UUF^9pJmY=L3\6UVW]r)b<N&@1l6-?e2'f\ET*I`<+[_#OK%f-O;mB-Y:UQYj':I8AcT?!k1b#%UjKK+2OtfeU^JJmKWTNf6\s8Z
%N.@MNFU>=+'rG<J\Y3mEJ1-d)3Q+Aqa8Y%ARB=09FTMTaHWM=bn:((93J=_Wh-1<H`Wr5uJuuGH[ndrKDT95.<2A,l`;59ED\inK
%#gl&?#kT%XHKt2ARo(D[DMcsDRe8W`IiXhnS+<`9k-Snk$'lHYPVdEN?#.8/EJP#:G(YcXT\G&+5f:d+mMd,4b67:`,Q).!2)e7A
%g(tmZ,##$@Vu-h=hhI(ZH2GkeK<OdC%jT8JmN3?)[O0os54jS[Gt_<)A,iVO,',NA9XObGl_3&d1`*[8>E,I?+7-OPX>[g10;X1W
%`lhJ9#[`;Mq[.=tp;#K`K.Q%p>t?*SA0F.?H+O2FrG,QkeSH5W7Fh#SQ`p&5+%OY*GVMNdhTt>WN#q.57@!A#l^tbW)#el^Id%nu
%g-a*FDq:mKa'3HpM7^OY]iVR:qocGR4tGB6q7h8^64H1mGZ)Ah6am>Dcl#7.l#q5]Hr3c9A'ZL%1#4rQU)McM4mtW"6C$o0^>%>3
%T<4^qB#r+udGY?C0NYm/>DRfD?)u1/7)8`+`,fCJ,NcVX]42tCe!gRC;nA"84B*E",=ZWU*@%3[WC=D$^&g91^\90T8$1RLS"Y,u
%$5!iKp)XT<!k<W_:)!;m&H\hM>CMK40b'ZM4[SY3bDuo0+\"'PgT1rO+oHAVBjWM4!<S.Wb&*,RWl[`5!HFQ7!J8ec!!-N55)K+m
%7=A5<+cZhZ@!0lJ(JaRmSe6RXn+@hjT[Z]jYPo^kM@97u[3`nmI,2?$Z^03^b\I--[?b.*>+(pehS(TLp;_E97oGgZM!XoJ^O1?2
%SHtUqaVm*u4o`%lZE8g;it3Z:kf@JDnC'aA_[?6h<5K\@k85^J8O^p\9b0JM:q5u*&AJ#M"XTDuSL,j?\a@S_d.-pQf5#bZhn'[U
%-../ML`\O8Lo2R6GF)\^jFDY2(3^/bKnil=<qrDRIT7ElVZVad'b^4Ha,&t"-HZAcm5ecYfBC8>plg5FP=<Ib0aG:uGME&\DW!i3
%Gb2g7Vj.0E%'ed1M=*50QU5+F8X7`V2s.'JcYFErpirJ<k/IIHFN1QuQ?%7tf7d#hAU$["qJ]PuP1Ai:g6g9B6,L"\\l)jt>l'c#
%UKDVV;[F"o<[,kP?WPcF*=F1'C3qUP*WBV(^$TJ:OItk6mPP+n3;_N;+=M8kEW:3Tb0KJ5Y.U(2j4iNnD]c,Udu*!hHFYs.[XNUL
%;Qh/GS.,hE+7$u;b;&Mo'F\V7f8mgkX<33TerSkS@TbtM:0QN;qLPR"/&,B"4d'=R3)%BhEO0EY3.C:?NOSY1><e3H)1<R`r.hCL
%bBX,>d!`Gk?!'@0Q>6N3=h0&^1ApK[@/tOlLYI&*+Mcb>+o&Y<W`1u[OG[,=rGBL''W?t[Q#mT!4q9k);BfFg%E/*@&j-A-XX51&
%NPu5FlnmQ7OUBmkhWH(\>6rnfCW"OCa!+EZBoS/]JWnr'%.c<hQB@Z!lNf'5[Z&""mu'`-.[7Ki-]0S/F$I+`+Hp:IWBDN:Da")2
%7(o]HGbu&pMV,N_Z4cAr6i[NqTT-Cko*l/l;TcEDCgn(7KSSo?]+@;Yg,Msfe">eSN#\YeR\D&rC9p.*\\O:=q;>cq![:<W"#0dT
%(A>>DWNM@J8B#*LW>^54X5tPM&?!dtm;Jd5qf[5_(j]]L]RHB.oBd[id&S_n&$HA)J>TMPqdDP!rkfX\Ik,N#Mp[;]CZQPHIZLCN
%I+o?T)KYKFE;LOHXD]JudcS1#b@!:mFps7V`n5aMdrmr<p>\^tQ^uirW>uddSWkuZ`'*]I/[5G(0SNM('8?q!I><82`lFo_G<,"$
%&9##d1M:FHm?e<3rTU^R3UG"B$tn:KW@'4TrkHsr>H9)ROra<]T`5QV!i_S]mJCJWW>0^f&Bpg15o^`hO@KpXCLI/?pq#+$s3<XP
%lCP(.ZE'WJ_SZ7mpO0;`QY"A.;#+%9Vemi)TK6D7;2*ku.g28@#FOqdNM:bQq&M#*Z#H71`)CcUD4XY'D&=mF:<mRCVs$n14JebB
%5ep:gbDKfPnKjCZkC13]5TQeMc80<9m]sO(4-*hQH`sX$aSO_,)`%,gp<:pGLLl1U'58C8`Y("N?\l4*oR8W"a"=mO2G^=$2FVbA
%2?oSXH&D$sbsUd'%:<8g\jp,_%sUr&k/hp!Q=WP"BA2M>!r_X85jEFf:BWqtrU#(>BI`b1oDsKbKJ'PV@U\deke8ZrC&q1cEaSpI
%-G&RE1^+7c[;[]4"f8C3K%/V0qE2V:%q,WRIHM=\Wp]mjqYYpEqkm_f5KTW]1I(=qO(JBlM>_1[]nKgD@C+rX(l;R,:(nHKXc+rC
%72K4I;r8lH>KACmLfs?dOd>2C^$/k^.UF`tXJUTJ-H+FGE3JeQ9IomEQ8W!rWDu1q%4R+S1rQ"2RK0(NlAU)?*i'FcZh4lqEa5?A
%'/?hsZ_#q$rg<G3XK=-I)qu(D&1.Q76nGrf6%L9&?up!Pa4)UuVj_%j0>1^o9fX:lX$s+%nRL<'Q>V/?"4@#Pp3G1-=%P*Tn\/RM
%!"tr\I,.aa-@$JTZn`>dL+.io2F#R8OC#PA#Vsuj?FEJ&M#IQ*@_/NdW;&p5^e$n6Sj0]JkE/#I5.AOp,3tQ`h2M,J%?R8$n%@]D
%a:H*qMKQs=WP=b0&dXaI_>u],GnsBSZ8HeV0kQ;jVs)5G>pX85Y%NK&C5'@hJFB``T1T9Li6KX#PrVNNM"ar]PJVtU3Nam:8hOD*
%N1_KnH^fW#;l9AB)*sW-qZS0&#8&*uM#XJ,-:AMJi1$IXlJ;q`CVXchJP2S@LtG(ZETX\)goM\/LT+9r?J1Ee-q_a+7>4$crj]U`
%C?;[hgkg!NUTfJt1qm<i>"hTIIXVHo$/4^b+)Y2V1Nkj#\7fm'Q;"q+%OC*/Uopb7]00,>]K8)tS)0O61UrNXE;23]KA-B@C64@b
%WkU!*^tt(iAF`qIo>(,SB4EYT2%;:[*4"%\n%H/$QF)j,"<p2,.8p-QbU.XR'0h0=D('e*PTXk"`->#hQg>2k7Z'Hh&gP@"a8AB%
%VjUO.FTP!.%ppm-\$$Qa3Bd(Nn#AZuQ]rMO.mQl:oOE]MF#EZoq-eP/8IcnYWAkKobWQ*nW*L3WFq]LAUQr:QVi^MOSRlr\\>(g:
%6Zi],_oOU3b4?4d,ugq-h\?8PQY;6X_7-EY&Q7UR-t8#d7!,8JY?lLS8%J(gTbsS3hqMt,[4cMil/an6&8a/NY`PK6?V"tq4&9KE
%Gp1`BLU6c@q7GNInoO\>GT\aD6QQNI+/8_X-31i`?Ych26LEXVpatV#`Odm_7>m3IY1TF]g+5m0'A_P(S9O-%+F-6b]--TCMM">G
%IGB/:Uu=baN9MJ"KJ':TF0T1pLGL??MOP79f$!RL@QIV?\E?usleFS8qM&DP'(N=o96"o4;T,Xlef!44qqgF7"]T#0.VTRY$;ghQ
%ieq[Cj`X3T3BBm1$#>d6&sHCRI@t:`j]qlX:EVI/=U!i0!k:[_0``WBj/!t_hujV:L+6>[?A#&5jB3,YB0qBVjln%_[^/&2H5t#)
%c$U$p%C(7A@Wb5HD:oNj0\XX\9id$M&G6(PXJ,sEAl:oT6oAa'gl7F>/_]?+`!Z5qC4rS<)sK,'lZIA_8Q*`OVdda^!k,ldl^X#J
%NloC@+c:LhZAblPj<O.7r7D]J8"rE@H'&WIP3[;eL#IUW->D(ARq$<#c3$Kla-JoI-DH]3STQJ#![`8^(hL&49%%$`_!Z*nQ!>04
%T*-&GZl"(;\98hAH?ZIr73">kF_\O4b`_OtC'`')4h(*]eaRN4#t="k#8-S$ZCoBr]I%^6g)XGji*^BX0WYtr9&$Z<8@/I`R2=9u
%+A'oUG*l%s`_eQ"-`4nMAWSgVC)7%Y*#0gMod619%VIkA]]^;Dk^0Yi<#$E#8C^s-QtW$(Uh)1oaiC+*#];@[KA=#%%.%Wpq@jb%
%gLl=MjcVsh`7u]m'8W]lmA2Rd<BbI3cl0;8_GA@u0f*08,H)lVU/iRLXR_`]*.(3g<JIWOI]AZQ<LuQ#Iat$)lK`<Y:3<)7$hi/b
%._F2MceLZ_;R*1ngGHRuBq#tDA_\!EC?pFVB_c^Q/Bs`2ijhY3'"ToCflsMAVJ+*p<Bun&k3hUjJltuEB`Wc(E"`Z>n]0k8D6i"u
%?f_oA68%I(n-N$*(@<0"T^lfB($UXVdeu,b4W%_WbJ5-l*E[-=Z+VGOlG=iW/7'4K\J<AD3i.H;KoNfcU!YjMPq9Ep2ZnO_l0-#`
%?5QVne]ArY[r/m>_H8;NZ,O+.Pna>SkT6/e?FN0MooVSGg4.h\^7."8K(:2'$n7gQVq<es8?"lsQ2K2S.'P]B*KomuiKILjIfhWI
%V*q-;O@7lnFO=Vcj.7V`H7bDs;7&.UCQO^IlOst5iUVP$R@Z-BA14l2(lk.kBI0;YS3=:/Yg#K*R^\a5=[iVOUG^;Y7t[hXQsYL\
%NA1-$r3jJoTX=kP*H0_;(dLKUKAjA[7G\(3/Dk2I7nbDCQ]KD270+!GghA(f6tN:^dV\BUc;!o*,GU0IJabSrRe&b8g;R)KOHOsW
%:p)A8(0(iX?F5VP-1X0*mD-LO;M:8tK7I<u29mi6XoWX.LXXZ$gYFinN7l+UZI0%&%aa(:@5o#?Mr=qh><S3h1XL+dWur;W*+D.o
%/4XAg\O.W7%:5;>o@Vl!_Na?Y3`7,M!aH%(1d,]I\mFh!gge$="b?Jmam9./42BkfOo>rf=ks/_J?]u)+jU1HZ6trTKqK'i%'V>;
%rU5&Gf-rD:K)0TX82so&gQ"+-nCgFl:!keR(1%p>r/d'G9aY'UUf.iT-6/)/K\E[[1_phP80XX<2(imR&/A]$?>[rj!uL/kjqGLc
%"uE88A.-dI4<4I'&+cToC+?+$\fk&D9j%88'AAlZ&nkmk;3.PQ8O8(4PMlWD&1_pW@@"#d11$ZeV%;g6\rDtKHSdcp#*`u9[Xl0'
%2@mdBL^G>[L(M+k>L[:G05F\,$$l"4K&rNCn8VQH<gIm?i9\YfGFnl:,%(sr-jIO:!p_.01O#BVr&CSN1(3/<,UDJl@Zp;R&A-^-
%2O./[cD9H.@:YDF'tq;:e*REp[F>m[[6]E>81OJHRNe7hPFD5HZR%;g`3Y%c=plh\/OK8=q%tpBdG%).FDYM1.55k13nn)?Of^7g
%(o0rjkI/ITUQd3GQ;@1`E8^Xn.9K^,KSK&(S<h`CCdGl&f[3>RH\b0Hgs`@=9Y<7+DW!7e+9Lg,g9>cio2Q3Lc$QlhRjgt9V2RB2
%V!oC.;YD8S5#i_)Z9@%)J])n%aSlI>cD1)$Tb;,taGrim'V`:`q-&47-mjuY%Figq<*:,Amto[;LsBa'6q&VO\=T/^=ZW>2M0=fX
%EbH8JW_te5/,BlLb@DpS#h+!Z^68B@-3RX-\H*A(@Ffrp8lAS-O^q8KLhZoj`7p%F9AUT3SM;'?jAF1^L_dXHmb?&kl6e31\bu3@
%9MN\Y*C)M1JHGG*#+:ZSR>>fK4nE73$^;M>Z=n2YU5f?gH]nFjhF6-3*.8AI/rittlJRAH=c_L]n0(IP)u4>>:j//@XQ;g/Q52oj
%-"J^=S'Vc7eE1_;f$?c1j2=5294QnTL5q'Po&CNdn#R:7e-o"e9NEfs]n;;@O_%pTo"2W&Q9$ZMYZt9E<#,*I-@&!P7Y4:$I9>NO
%j!pf`S4fIZc0VSj@#[]XH8Nq/g?+aL!U&\Zh$,kH+P]FBbM;J`8?Ijm-5IRG#9R)*=/=PiS@bdSm4]4[3+-+</4XZ9d)h3Mojk*'
%L)3urIGE-k9EggiebX5s/ee`!0AMurJoP#<m76[iU*cu@Cp>Yf#VoV.S@PGgP(L:.oC[0!\2"])dV3,OeMo%06DU=YEtCHKHj"_o
%\45."6nM=TPTO++a;?Acj"$T-%eVot[LG\$DI2P%EZ0Jja_ca'qCHjHRL7-?A#)%IDk\nE%ic*#m+DXJ>U+fU>+1e'et1XhdV[)(
%_Z"OkD2eSqEJ;o("A'Y;k/Z@D8A@=fB&(='PSJ1fHat^0MmS*Oen5/)Tdqri`0bcRfI(ZDO\KV1kV"&2Zq?IX5uEZHfN?qbiEUOM
%R^t5A9cEC0'L]'%Uh&hd_+'7)?Nt-nCA/!IA;ZHV#`T!&L-[FHH]*eXJ>-h,[Dg6$mCXJPAo9"HbsKL(FI,c#XJHOJ9j(QadT+id
%Q*Eu9(.s^p+ef5=0g]>S)'sk`X0V\51SYu8H%7m,lr6K^qcLO'-XE>X:+7*`;ZSn7$n#XX1_hs]5%_1N#gp1NPi\d:DO=la_$4@r
%P\gO<49R+_h&eHCjZjjlK97I8SKBa-'2XCV\2#3O'\>!#Pb5ip-]O:s&"=.`<CD_8+/71gof?5\OL601B"WX-?f&tA'NL3"B5I:%
%8%clk.ZXa^g"=L\AJ5L%d9TKRB9%[/<&@IH"t+.:9/ClMW9U55/@]NAr9]D*pQP"CHNWDHIoqk6C$DOp@U4!C_FS=I(I;ili+o=c
%m+T3I+u0b`&)TsEO8Ds4r%Z*o@uq<IeK$-g&HRe10ECn;#\,#%&.Ui!\hFJRZE;@cAUiomf&CM^Zuo<<<I-(kV<5K^&=q[BkWRK3
%I]lN$Y@uOE-T#cpZ;*,+B/EB>1o049JXIt"6kObe6MXGg5Aq*6l!&j]P_%&Z7&PSZlBA'40_/]rG9,jAon(WAA3Eng.p,X^DBM?%
%_k8SAZ;of\Z&4!<g#f/YG=o-')^A9t`8l:6=Aj:P)l+T:?la+9WeCRF#b'-lg(r(-S[Teb(VeS4Vjo7Y?$$<dPt!'U2Wo@Vf[j)S
%%?9Bu(&eEPV@RUF!A:3B_\LpBfV-.@P\Gk]G.\NUYY[%*8scmSEUggB'F==q%b<"7fCo2+5!T&J)m*Sm?-e.(3ejhO:[?eh4M9F'
%gg$j-q-@n$3sn7_dntADT<be""ha0+Hc>5Vd84R^s#%@"YXF&LObhs/Scej0'<URDf0](CEiE4]/WJ!r87bk>n3k-J-]HKsTJ@eG
%%7HU".I>6W$?sAl5bs_#3FR<u'YPNjoC;l3@FD:/lKG6sN8EiG+\5`jaB#f\`!HN%p%##C^9=g4NFBUqmHk:l#[m=gZ&jlZ+_scP
%:!#$On=C+ss1Q)[Vh"$3dhuI<WRm91PF[6qDZrmL$)jZX&k<gpZJ[?C8mmj*+ET\6GZO,XFto4k!@nGh8sh7V@V56:5_MQ!H`<@m
%c7/iSU6IoJO=5tb#pLuhLq8lnHqpS78AM%*7!IJmU'OF1LX(6^Eb7KR]$TOVcDD9:KK%#m3WQ'c;8ed0g-"r_j^KZ-s,)W/Efmt-
%-rm0Y[0S#4n?MhWhD)5F^qR1EXluiu!79`tF4dTXjmWh]'%gT?,p8%i6QQtM.)<quVh(oZ&@G$XUhfp[2RtFl%F..+Mg>VU4A/-S
%]S:;g/=T`Eb!<0LO:VciZBAJ!BcQ^jEP(H'Z:X;.n2d%/0M^Z[oG+"*btn95%ROA:%[Z@5;CV[e]*Rb@^:VQ,RWK*kd\MUZ.P5:N
%B[AnMAQYje4e!Z*Am?f%eoKbCaO0Rta)RSEfk?U*iQ@r49;1i$'o<W9m^S#6I[%sk*pOf#Uo8,gr==%MZFnkD4IdTccW&OH/X^^&
%Z_9pJ!"aK#U0p[^>I]U"90h/DB?%4&kE[BJAVs*CUaTi3Q6fI&#h$oA$U>5YQ-0K!7bS]o0A&(u2)W"Y0MCSCqkDO?b:8\o`DV$8
%qa(Rfo+3]:6eU`]9)r3@)Rg%LE;2u2-d*8WF5Wi5Oo?Z'Z-S$PQ?BSZYqX!c%1EiDmdrE%SqBL.2_.JmAi;,t*f*PLWH([gS;Ip;
%DVTQ+@7+[r4dAf9nc/E2_>b"LDBC6`.rtZ6$,s_S=,KZ\I70qRfEZ;*X;;!=(1E&[lEMk;6L"\(+q(lK,JZtu6$*Q2PDD1LheQ^0
%\dies+JJDL;me$4ma(<?4<;Q4H=_5tOt0hgd\f,5'OL/Il9r;`KO_gT(V+L:6[3&*^5u#/r4/h8>J3`s%RRI*gN$4_T]G`i<r!Y/
%gtqB0;ft1fO`SJ*W#%uSe<I\n_J,/HC9@PBQ?d/$qHUa2JOG/QB5raATmVfm*808k,o!O>7\M'9:=pr_Xo;KJ/4H0GdJYq?G,1iD
%?R*tjjt!KiPp&!TE8\Ws@Vor8EX-H.oB[g4IbLsrK7oq:MQ2;IjN3?BbCT"&rkMdc%TnKOpq3Ug4]L,Qj5_aPYcq-NEI!gd`To^+
%JtF#6&%5H%=oe<PasnLS;EHI@;H(K:d5G2VS"I[#pb&Nh[b2]M!0:ITftMPMY%"F4mZ,dsh4AK_TQ4;V99Hnk\b-@WWJC,6]?e*^
%Wg#]rN>:^qV`8&FdjtIE7cg8GI:0!H,I?KWCVc.@<cM0;JG:e(NMh/!(T`erb*\icoU.>$;l1JtHUWHqY%;t8d*cG#WRRtL^k!0D
%ihW@&Sqet()qp'K<C7LgU&5t*rb5%.lMr$#n#&^Ii@$IP2;_Qf31J_b6oCkt>/cIYEE/UM6dT@-pWD?p_NcmhjkND7[`)5Rm\iA(
%M/TA7,-tN*ThnYj*Qj7&'m3\(X;>d/G>6Ba@?;FhiMHl@OP^qM=goWK4'G?EWpj=J!nU)p/F)k`nT+n*'V5!4f+AUUHY10PjFKs_
%bOF%+hn3I&+Ls0N(W`U@7e-]B#PLn9\kd,30<PK0M$kQ;0PV*WY@1hfZo\Ihh`g)!I7XViH_(/%Pq)REXF5jpC`13RhhDM1j+C1K
%nC]e1D'MnSKlf(T=Mt#hLlFY;46]77:],JGCe?.b,=FPV^5@"JCMuPhK<;4C(4li.q"(0<3ml`sM#YSKH2hn]T=d)f'H(>$`^4*4
%pOa[GgQZ5YqHb5YhfZ+9qb%,4+"IG]/:4T+akmguWG$t+i7@<d3kE4&OV=`o%>Ybp'NqG(5;RCGUmfn0nL09X78oC^,_GJrT+`;o
%Sta:-?CqV8]N/#C1i2Y/U.onCbA#P/3#H:)kA;/EBWirW0<aHQ9P23t6>f^o*Za5TX[]EKOqS+7#3MtC0HBPj;tI]`#`imS!Hc#^
%f&FAW7spO2$fe#96i`\Km3T[f[^H%W,$kp9)05piN!m39S0QME#+XU6I-.Z#?csQRl(Et8U7CSq91X$ZB*f.f.V"md-q$/O0$\5n
%?>kW-1,a>YG5#mQ8aY'O+=16.%1N?*.;E;Bm=Vj"Vc.E>nuO'"Y4"@L=i7\"?s!R_Z0VuPO8Z88kY"N3!Z_qF33gkNp!%K,H<jr6
%5]E"jU<+6OpKPU8"bPru@lj0$&Kq.NMo)M)lnP'N\c&n4I^3j@G;]Ipi>d_3H*+DAO,To-7Pq4bT=a/OiOkG^Gf(n?'YIQ5!&\Sq
%l<bc4&gAPSfZn:#8F[P$_uP3_P#(-tMI\0*kN!c@NbXLf67al^2Y0lV>jg]5>=X72%$X9s0XtOYiO\GB0pbYlH*0O4-aRU.$u5nN
%QH9!HnH#A;98sr0P^ghbqH&,a3'"l5=X4CrgFl0i+H!72*k5F>oL$cD3_LEI2SFF11P^<^@@/7i>!rJ;oOnuL-K!)QfI'[&EMraN
%q"si-adhF5+!gbb>`_mBop/k),H(ajR%541A?-.d4H.2u+pEe_Ga+#o&=l5g:K]Kk:?^lkpeM4c+6?d3X%Jpi)h!)f=lsk&:])GH
%p=K11WgmA+(qa%g4TfED%V_oD,0AE/KG8B_>qJRafX(OPbGThd9^o,gjB3#a:'(_[4)HO*;X"(m!j9NC+Ml>ZW^GoHGnf5jK8PaB
%U<6>FC6")]^OW8e#ZMlJ2j&g0jFIcYZ8X>i&]J4165.[\G&o:e*\\lJG*_R6T;BXdQ.&T_9@Osn3KO^>)Z_j9QV.fokpS.s[X1%>
%UQ3phJ2E0Q]jf%AWYGM7(9)c7^!9_<FhOHD`\Z6ZR%bW-9>[HOl^ECN,W6C@VZL=tKeu-c=ae8Gg"14S=M6'#`Z,%X1;Y_S"fEi-
%gt<]2-_ekT:9;4_:(?Cs'#$CEQ\5g".$/"C=RSdap?[_S!Rl_N%Ve831$GNp/.0'+Cp^V]S9CogHF\)5.h>U.%$Lb#hRo2@pM)0R
%pT5^aTp3PKb7V+-E8Uc4X'd9AGeM;*Ju+4;_&?mToUT#a*n[ll(a>K(A_r]Mb!'*/=)l*7dq;EGMstL-d=J6OfaQ"sKk,`o&Qe61
%cM/#(<FeAEKm^o)h8ZEU+a7cl\NlB_\`*TcnP2rB=r`()>sHY]UeQ9NSaBB<^Ej2K5j[S[#kmZu79"1f3hGEo"ERL:U?1;X=J?1c
%d9GZI2+(3cYtKV!+(U[*OHH4[bgfCefsqkUa1Wm7s/+eV4D:fL#K^(97pf^;b,(7AX(AdrBq-q9*=+LfRLA)_-)sDVVE0?_E>K.)
%S!o2.Ach=<?K/iOPTBOlL;1*>123G%=kNk[R<sLU"t?[s3h>N=#.nK5jX5tle[8:Z4Su.8Pp$cQ'd#aELAX\d*'rbQlY0\R6n/0`
%0ijJLh1o>fdu;kf88oP(O@<e#UsHRe$_VT?c#eWq/Ip@pH;$pD\(OphJO-2@>DAi_FdShuQEISW3pm\;T2`0@E_A2ZZ`8UMo1>#B
%3eJeWBr\5M<L9H?Gh/)QTN&LoXT;;/%upqhN.Hf9#s8)6R/t\P-dCl-/YjZ(a2a=APReqL!F"6B'N`C9X3phQ13sdRB-WKR>7/7-
%6lj#,$]:EL1!'\KN^lc/\uH#rDE`ffCn1UrSJ_0`[W^PnTM.t'AmuYa<u:,mjhe!<*CQ\@UBl$ej>L.UEBQ5%k@D/f%ZWLM#LVYQ
%]7?iaT#NNY--PKo$i;cE<Hn7K#L>FV!4KY-QrDj&b]L`m'ZQ5KkRW*U@$<QOKet<'/:$[odgXL#.PJa!<P9k#UMMN6\YVqrnCB%/
%H:im]5ZC4HCNOPcOp`IV2MEQD&Z'#i`/9n,!_6)kZBpAZ1t0<n%i*\pqmf>a>rtj8&B4o`f+RhS>eUur^<;Q#T/Q._@S*k7lq8Ob
%m5O#ML-uHcT3'TtfrY\@3m+(q8aVNmNBZ&(WluG26,fB[D'b9sE*62KEIGhF<>>nF$LSE18fn3<VZic*pF<\e_e%d/8ka($/_mes
%p'!6@<.g/O_B6ls%]e<aH*U!EDiJ?SV-Ksn'Lh'd?+F;VkbdN$_]][/=!@adH4?fc';HUUL>b8m>+#RZ/u:h&=TO@D>:*q_/:Eh_
%#u>\.&M]4Kmqs7mNm-pI/1C>3,ZM_fm(aeaEeo)1Oj(iocN%7&$=MLoS.#t0S$6iR1j_F4chBZHpBOa&)br_iqn&Zd]0TR_0d.qV
%XPJo/%N#s8:+)iUkF\SB*/O!V%"r+!]%^QP^h=XGR==NNNh_a\V#CWL6JP1U0;o[1"U_!3Wcgkf7R$q*Bae2\_Lqqa\HBW[.ZOVH
%[];h,@L'omkUu_)>t9Z.-&\R<=-b?d<'dIs\_Zn=^_S!D^nV>";ml_jnFD9J+ke=$^;'GF0^IJ<OP#'(:)ci(>cDs"KL!*.?C03[
%r`iWB4hM>h:GBn_"6l1N48\[H1]nY>j/p5dI#)cm-K3N]2+.K@*H&I67?<Ijr7]ijX,gQA1.3".?58BI7S&1s.*]W%SmQCa=tpN2
%4O80TRB:G=63f[5PlbiTcieSLLtGCPcsj[k"QK#nS`#l&Ta=4<LZ=t2.UtoT@R!$mbOd&Z<0<FS%[%*."eUYn&e`%^@q>MF`XZ,+
%!SqURKH2Y%mp0,6BNd=HFDNYrKL^D.&dI/S1K54DM[J#kk*/Y,;EYl(cDi(T:-Si*0Xrc"D>5cF(KfBfGb$07RseVLk2p5]V-*`8
%D6_$R3C6$&.T%tVM3JY1Q0.K>"D-B>.<L/tp+f*=+0l<jqlW&jnHoO6,/+-FT>TBu(bI*->@:1a(I(MRA>1bY2:X9M#mDk"Z3(+]
%1KK0Q[U\R;)/?_?pJ@.\&>C!unTsKW#&p?[B-Bn8K*Ls.];fiJ(b7s]AlM9c<:8eZjYD+a"!^]C9MH6k,K*tm#nghO2(<),HKRD5
%LW]]_7P[r\_I1_k]Ye=t-7>G:9?+?5jU;NNJc$=p!FiI:UF8D<[`XU$?si,/IrPlu^Qe)':k(3qWQY!*N/2??gt\KN<MMl<.(6IF
%.*_ep>;9F$<&AF#,>9j*JkVQ<foZMnKm!l7MU@,*6DTX)BpFd5,QA_ag"X\C=qIGnj7@KQ/JMI[Pd*93Bc%(S9&/0q0ST":Rgj%*
%eCrSQCb@OHR"=GoXusR_1!W%ZZ+hP!W-4o'rZjtJ`p-u7NC\MlMc[XK<#!k%o=0o,;ut<_aeH_k#,4u.9nq\/'Q-"t<<Nh?O=m,A
%Auo+C/m8nUY^3Nf:0_+(.QT97&.%P0-r^`eXL#m-#@K0*MuGu'6<6'uCr'P5m'tU"B%uJ55ofm9;_pH+&UPHPRmFc&Lfc[Xkp=M+
%h\iEkn!`*K&j1\<q_7Q;MKBaEeX7hr]s0E.9CYNc9-citX1BFUg\K+7@a5=2Ib/$EDt&mh+k.DP6r'P-\C[)ob[hFt6e-DY%;%75
%'@c(eP4i/^9iIZ86P<A3(t%Y4Cf8k]2;If\ANlaU2*5W[m<e@jQ*?b2SMRhEH9"SIMu=58#ZA@_G\)qlO!F\u</k%W'Fs!N=J?Kb
%A:-j<U5*W6]lgI:_ZpPLC0!V1^)`n\3,A=236@TklXQHr]qpf;.j!CF!]QZ4[1+WA[MAeEPK/C.(a]t4p*_9I1.HC%]D8;n346Kd
%m$U%OV\?eK^"3N%.2hu*1OIt_D:Scbh.#l4]Bcc=!u&Ik<b2MU7_e2XX`;Q7GldmF`TaYS<!PJ?*JC.pNeA^V;GaHE;PjFZUImNT
%W.<D$:@"j;C?OXFXlR\TN"76531NHuIBZ5u^9gdeqo>(4pI@^*s7dE#UKE[2m6$WkZ`V0k:5F:!l4Q?5"^P9U]eaC%FbeZ'm>7G=
%*@C/Q"7!=[6g'.YPq^Is\)3$#0W&Er$OQ]e=*3ePR+)]U69scmmLEAE./<Uj7VB<@+!8>YP`^H4IO9IthK\DPe\"Ce]L=bXb$b4Y
%l]EIJZuMC2b`.iG?'<SZrf/X>6kT]n&%:Z74`F2A#fD^:r[A'TOml&Ojp4*Fl8NW6N4.a?;kOH/^IYSR8<+R5@J[#VbW6tqnT*uR
%4]YNDdsb(b7tjP0BJ^%g,oGq4VXbR#koOdieS2rrO*HMid5+:$"e:G:b"S#;/XI)H,WIb5[S2-Bd+E@SKg3Y;T0f-nU+G9lQqGk.
%X.KBM;iR:Sf4J4XGD39c)QIsg\WkQ<T:1T+NK`*?2UO]D`P_%+l:I-\S"i"IQCJ]B2!C<@;SOrS$J6;;cP<M7ofMJ9Y-OcU$b9gY
%LF!d)=3uDU)u,?(F-X.^Su@oJM>Jhbo1r3ji'FF\I44+UCUle:=!7U91gd9O%6t.YV,Ve^8``sIn"5E3QX)HArL:EI\/4rjVeI=c
%J:p`pZ+ua;fIRd/Ga.W:fR;BtfIq<FWElU;->ki"b_uPL%dp/?\fT[sVKfnN!i-3GWN3W)aVh,g>@L_">\9$8^GT!7"]8&MZUC%4
%4fJE7AqoAK]*6!0V2]k4T@K=k*E9U1W0s>R!EPESI.gK2j(3sqq:d\VdG=AB822,:kPRU[1\?"^F:PT+b/1$PRi)=BYn;fJ8%8Tu
%@83b*Moqr25rN:hTIL]+C6?(T@*%U&<R%5D#U*g/:Sj_opid1g7jt;<o7alFqufIf@,[o0k-7Iaj%(:7O0)6"RnsDFSdKNb;UT:t
%509A$/;fTsiF=tup01BD*/i#AeIo5bnT*OeQ*Jj9N*[*^>-Tr`A$4.'WkLeQgAJY^*,f*Z`WbQ[DZV\^;"JRQ78lh"WdL+7H&WM&
%nEuhXD2(olZ?#gmqXE"o#Utl[-_J7X;=+@["i>%PJZKK1CsBII$QZdPV_KZE<$d@:;k.8ai/9;#LasU\*Qpbl/;-hf$]eA$WSca#
%p47-LQA<c7$tqrWp(Z=djlP>?J-3'2O;4S2X+6ZC<lK/cV;?=_$jKFU#eb(CN(3a!=Q[l.4[tiCcd='e`0NcQ$mOdm)i3:'aAKu3
%Tc@oa.gJOqWQn9,.qcK5SCgspjf_329K,q-,_(VbWF,o<RR8J,2Ea<9/^0dg#uf]slVq9^i97Rg0k:T?YVtCQZpF_+QLG-[pi$.P
%AhbMj-'DgFS%h1AW4.EBs5RJb08Lm0V<)>V6L6Aa>X<3&[BKs[U"e<uB(AT'=*=0$m9^1[ja[0mMdCb)@sS@pIW<ilpCBU9rbY/i
%/;"PtX(mDB#r?GMPg[?B(:%WVO)Uq6:&@`(QeNi4]()5BnTpUclK>'71i%>"EPR)RcPOL`:r`+gT9AT)l\D\m$+`SCXMmU<Mpqc1
%&n7!qWiLf7h#O[78,O&uUQ9?#6oSFq<I):%bl?k(g&Z5YdmjCjht5kr!6iIdRABTK4=X$b),Vr`0K6u8m0YusfoN&tYtj_V+"QX*
%07I#">D2&j>NchdT"*VFmqWf(:k`fgj(69U4Q4Yq>"q&>rPqA.Q0(^3+h9cYVU\rIH!--P)o_G-)qm(C/S7kiFVD7OmDZXf!1ZHP
%M;El@gcm']B@2\S5"6-tQaP8U'UBoDrC8$G&2,S=VDs@=lTns$<FkAfS_5PgplZZBI.^d9P3_2r%gd+VCXUGQb<QW'I3[daYhGB;
%.H^YXj.s2DSG8Z@^(bs_GZ37YTYg1Lh'A!Ho$%SW)8`gFk'X1LrC,/@\mjL4k?@ejfNoA(7Rp^3hd\NM8d,%']\`@DQ7W*GV3h0<
%d%WgSBAgp#</_$3:_XIHa)m;Je@D$RUFA'Y&KHt.EfV[Y?RA=QQWq<G,G\o(5/:+p'#IAY5Mj!.&H@_tCA*"Z7K[M4eW9h\&_($$
%f<PZS;O%=h"B'C6Q]R\`:F3<"#Jl^q@P\S<6O,U?O+tn1q,!0/aTs"*i:%eN.2i6EG_GV"fPs:0_k&3*_M3-N);hcGNA5Op7N*LP
%.j/!]:;-c6A6odeZt?A#N:PROd.9U`E%31>l_-["A_SkY/d1.rYSLY[5-,B>RHJaL_!ru[fEuVg+"qCbUq_>g;LdI2m'KGS-'hLJ
%n?-t6cd3njW9osEOTPXE."2_$\N=E],=iA9BgKEh7-_;'AUm2QOkHY;-X<b^$NC`*\ua[5!ZIDBg,.0T2ZncBM^'r!ik>XGOe%OS
%]+-Ct`f"BaGiT[?Llh+A3_ocIBtDh4bjl$KZ/rdpjKK[-T="_<-;o@n6k^ar(Hc?PN1jE^K0tfs7OV65<_e"lXPC`Gn7Y_%#8tf/
%]Cl<WV4Ul><X'CQ"%*Ys^0Y;&Z$G[&&O++8p=^Mlm>@I--6pL.*,P;T%-(kjo0j9:q[bA78Fra&m-CBi(i&u"h/B+,2?:r^,#^"k
%W3L/icL?7qH[uA/b9ln>f-@@7%[DhcmWJGA_7tEdD+Gqn2DHguNF]1R`#M+r`r"+YRSsFA#-(t_LFX/S`q@7:/%cj$5_0p9#9U=l
%U%f>iW%gctACfoBr15!HVBolH2fW9AAt#XebX.!PRKZ["LnMs?*`OtY;=LOF7)T,'W(s$ugs4noZQrAdYTNOm?"d44Wl;Z,==!JP
%AG=fkAQ<EEqe(f=5T^Le@Na2o`]Ib/hs\&"C*n+R=ZXdopZEn]0RJ`iq]pQ9N2$Mo**X^`iu4kt<ZXK3ffjAh4q'/?=75sNFqut7
%H"eu-9BSH%%IqZnT-LR5fZQ!?&'6u!01$0Dj/5!eO!id?pNS>enDi?<#TfU_YEXAV@QC!QM?W`g?,#--')urrogK=h8p]biGWhoN
%Pr8\@I;K8.(irYS8,Y4"YU2"qL>636[UA)g3.t[\W[86UP[R31JL4A/M9,""YHm9@p%pD*i6?QR?1dmdWN,75`tQY\hXu,u,$"5Z
%q5e8siu@GV168+/\HLL^4^;.7S0+M@M,sW2qrP+$D#3q':?QkgZT:t^-m.&Q&)I[2G5/ROQPBNmYk:IMT,>k`Qi]5W;BeKp_D,(%
%aZZFQ6B;!(V`[&%kB3'cgPasoL1ur9?@Aaif]*?6+f(7j3"3(i4bbF%i2:_o`CU-ObnGMt,eG-NqHIf$KM=J.=(,/DQgOKHPRrq^
%]-.[Z+G4a^j%^$m!C96/_B*ahm^Io3D'o8ZrD>)PU-)eL\Tt3)lEVbp%b0-VbU_rINDfeZBG=^.*3XgnV#0W[52Bf'4V70^6:lYQ
%`EA9e$G/)Oi7i9BJ3fq=cVUjBc'+?DNH+`K#-b0'EY1Ni:3meNcr(]N!Ar)5:mnpXJ#WmOqt`\pQUJMGhlAoI%c@4.d3lYV[=CGe
%U.#%XAA0Yj>P]>W-DH-b8l=YKE_,"f%3(qa.8rH:A?s@k+>Og_1R=%JC3P5.Mlmk0FX>TQS;p,eTJtC>o9SmcTr(mEQSInN$.'q8
%Kk:)!P4G_p@FjuI6W13K;i3OK,ge\0X62!$`PbLeq'1&]^TV]eO)c!u"'tFV!9.B44&\9EO@F?A,X;LmW>$X_c#u[u#YOhi"G#WP
%6:J/:T5fF/JuSqO%oLfNhHjjCCZ2`U=30\?!`I_=6CQ?OmnY)t(6F32\S<np084ECDdWJ*#Kmf."hc+EL-r5f1:=.`&-_9+J+-&D
%5Th-N'IZ]Y2+J'u<+]'.(MX7UG^WDhlEV&8CWQ3WT``H8;Wcr\X#HL9GGBcp`oiU3)M$ZHnGNAB;SWfSk?0ta6)7H:7!_pbGRVX=
%HGbL`Yt:[-]4L>S`ZGOO?/Q([\.O-,[u[I--$S/f42/3jc9q^&o7CM6$lEo)7+R</M\q(&:*=Y2$Zchk80!5bdG@E\FYS@@LDg9S
%m]k5teIGel"X>D,U@Z/p0/!fVEWfUFM32c\B@fb;F7EQXh/TgBJjIa4DS'H_h8pn2Wi5\bAnEG8$*,@'Wrnei;$sNBLoCPf.M<0:
%VZQLNm#9ABlqDsF=s?uMAmSIW+9g>j^4NmtAp?t5<rh5T^jIsHTZ#gf*ebZH$nU2e<?@)eJ)3prK,S.BBeF!%6JjdTk1'p7p0(Cc
%39geWXX+_2)Fhap\+*n$ONh/iMEG@7b>7?>G1d;!2WQ3a^+l`\GS"dD"?q^F=,T$q#VH[D_h\R2&J>PLJK3i.B-"D$0UF*>Z(Z#*
%;/C!<p,RPX%W6R!pjm&g]aiUp<a@rWA!bn6^:srOm-u/S(W\9''B);=hR@td/4([UfL3IWrIgJ<!$]%_6WJN!L""Mc(*/+]TW<bF
%F3rgH)FI$__nPh@V<f6=N@8mO%Ltu+'EVau%YO&*N%a'9$I,u*9uoL<K#i=Xq*I)1h]"@m_Tdq`ecO`+eig=clOV+>8Y7d/rR5,r
%AoD>IHQ>Rdk-7_5+aH*d8RmXo/"6Bn4)&9,&BqicFul2aVF%!25.qXQCo%U%HLo9)2k7lDT*<FE*O/1_5I;pf6=>_,&dE"tn#'be
%la.H+jB0e*H#Z#i!N3EXLGF.QE9-pr431amCk8kn#;/nUiY;H`d:N=X*Js=)rI;$_h+.Qo!T2P"m@<C;UYBUZk$o$&nQ=n@W9/jX
%flqfU_)9u&B,il:q#C-F&kpe@6Ggu&K<H/m+"/XBHdH1lL#T4]'I>n?DK__Y"os:f,_ldhUUq:m?!\hYmT%9noFqG&Net3BW^9<0
%eYeGVJf&)PN6@lpZ6]d1Zd2u@I7]%mc.0Z65ReiF2CcZ2Npc<L5uBsZB.R:HMoVt#%MAdK!>e7(,K1IUkMR+e[3EEtWNM]&3h75O
%g'HQHObLhkm:^]4$o;m:_cC(67\TXZ1Xeb\(^7/h@N?ZYYhdJ$YuX(@kq=kOCjbF;+%@mLoV0LXLXLTCDljE-g9FiLM(C14D2h&.
%IhhU(D/+UOZko6CE4d+SE\#1lbL8F^p;d'if"=ZuN1"$*bQ1k#."V%%\V"Al+$p2d8b=^-2p";;cS`/95f"mAJCkLYRLKD#Z\4$0
%kXF5:`=sLK"2ERPmNYDN6;^hrQph,^KXo'riLt<cNokeQ-!71::aRi#dT5fWhA;04?I,*aDpuiQ.0Kh>ggO8XVr1Tl_p_d:h%oXI
%5JZVc?Vb1!o<M]hA'ZPtQKNrRq"iY3/BKt10UGDMUoY*+HNO1k=eR#;mE9YLP.i`]k)295[VDqBPWn#&hsBk8Onki.>=dM&1piLO
%odN,UN#t$baesiH03ILYTpP5U>+oZCFg#Y1)utZ]VB.k5_q\^69Tgu0F[:@j_eA9*&;=#.Q)URDgb.-K!lJSs&^bLgXgSH(`qFM?
%qcL`8<j+PX)7r0['^ShXL_04dQslDgnqj?a<1d?!Ml2'Op>"02\!IIu16q]BHeR+UCA`&aLLq9qara5ic1ltY'Qc0Yh02:>[RDW8
%kuVR$Z]%`H",6b!M@mR6f)+023IE+g<oL$kIaJ"?\_3RST:]N;bIX>'3hdp(."<_XhB'h3"1RREAbojDI&[+3\:oADhlY("*n"Y4
%L'6Rmek(cW][^3]Qc"m"QeTs%P[:+]H""#]%M'K9h+K#fR#q)D;m`(\EYuXUa$>>3'^5.fQ^$hgO4VQH&D"ll4@K0Phg8!L^"7NQ
%lb+]E@4Rq=K)FV)$Ke-*`4q,m^[oX7.^2a/9jn#"Z'P/p?#TDKY1dd-J#o"U\DLOlR#;PVod&19SO[hpqE20oGO_H*A[(XrXtRo;
%e-_9'+al'Jc7_:H>@7<rLQH>T_92P[2/_[%K3J>?Ij/1`?u7?P24\4.;umI'4Fo7sS*bjSO>D>F$LE0aQm<ns_mV^RW=IN0.Jm.&
%?XU+&NdTE360tg\O7a'$&d8#2$_JZ49hP+8.3^i=B7?!Nc]7b&To%;b.O4.@6Qt/5JCHaN)%Zd]5"D(9khM,;W;KLQk8k>!pP"@'
%><.=5-D1:ed*C+Z,e4*U)IA.(T%p(0'h"0`T"0.'2QO66UG8;2?(`P52#rhrBUBSJM)!jn(<^caIU7[L<b][l%l8mG_]f6dduY_%
%i=?5h9e`:aXAh1n^T]'tk\)(oRi\"77JD&bU>1E9W!!6t53#t7&XQEf*?s?%Y5M`)bD"1,\o/D<fe_$(`G]ts`e$$=ofr3_Y*:[d
%b<;<JdQL$!rJ,gi/YtK&6dh^Q)selTp>Kl>Tj(YZ>Tp[P.3%tkEf)Nl,9ech)8[cY/qFH._?-MDYnml$IW6)VW$R.R*WS\pqXkj>
%JCAW7'npL(:8?q2!IuLiHM6;!5['C]%3GRCL=,JE$/d:*_7pmp!2Mtm6/`#5'WoaL#<YGq&U5%j*Xf_0DJW3?ns+:c6TtR6I,u$N
%;3PnuTPH\V`i5Z;_t\<X8r]*YS,j2=\]$f^:/'&q5i^7rAH^!/IGoPV2]7t@ZL[g9#A0RU`rT#fkrAR:1m[G4BiD)RU+jniK#A7*
%,0m*"7`TCcoC_<ck7O1u4eWlh5/-#%pb2!*PAS<IWN5_7*H5-G$;>$]cA>.ZDXI.ZGYP*5[<8XQWjSXYC)M(?N_M?$CQCK!6f%8_
%RF8;TVE[bE+J2Wf,6F`J2Ept2fT%D>9j*dY3su]V0[B9M/J1:Q9U&qpg$F;bNl(-W!P/?r%O\OL3#G.hiV&(\4][2&@8G!"aBrJX
%A&WB2IU!pc$kfDWj76`^9=&Lf2*[fNF&.SQ6mnj4V1.6cmRJAFj7:!R/,aE1`F6k?1?XEk'jBtZlO.\bm;o:BB*R&d_rW&riNs1@
%QNs%2/O"bM&#fZoM0$Yc@/%,HT*NNaa$obc0;9<C>8BCu.07:M4qE^t(,:p?H15uLGo`L^h]Qn$nTjW/o-B10kJ<fZ6qKQQ7W.*<
%FK`n!9DAmeLY^-c0Q&^IhuL]oU.aul>\C,,L<a\r6<$.,JBDsK4Cs(8XNSg+d5h]##;t^dTS(&fZ%MBKT>=97q>U71JW*=r4ngi%
%!J4ZE"ZH@p#8PI)!B(7<MWpEtSqL9B"fYTbrVZORXjLI.AFpTu_N]^eA5mR:TP'*p"s0meCsX#+LD(5d=[RsSK3p-I%h('paJcWn
%"&HGjopp>`GZ9b<a2*_l';B*q>c.9jd2\6.m5f)E<O@3O<=Y`3;MrltS)a/2S$)O`O@`pZJ1<-9I0TH677+Rrh09<!E.OVo"VKAi
%nVVQ8h,8F0)=aT,N$X7,k>g@hi(QEbIMs.ma\&jL!#,u]__`qner,?<:mMGUMiE]R'p`M_gcITNTYaM;-E:R\S]LVh/7HNFlf=O6
%mtV^B#`bG'`^7o!=<u&PMJTkuM54B0U$+^q!_G?AfIW'ch3/f&)\RRAT@*Nr0"Y@?5H\:<%nf=C&9K'N@%//RMsjk0RCR4b0X[s$
%rJMp0[hn#mJocW)('JB(YasPB22'6=9iL[IAA].fS0Ua@7::C6ha-7H#/3p!/>12HdKL(J/6tZ]g#m>N^2Dq%el0W3S`m80M3^RR
%qEReM&LSj&+AL]_C7O]dQ@VUQA_QcfN1[%MN!Wr!>CU-0geKI,!!'qWV'bsoUuu&03]%qQ/W4S=KEfPu%/%t^=DlT*SM`aAOXtVB
%_[E$&f"meHL\=A@qW(B.lZ(;Xlkk0`M<iL1rU"+jAT6r\;/!^/Kj<5$[<OCnqu!Ftl<O;XEr23?CN.aEH(PW@04g36NEH+HnF8j>
%m9^1[,CfUUb<I,1Arqnh1BfG'@\8(]aNeFNDqWYjV%\:Go0Tkur%M;FFJnEHEro$8LM5D9LN"W1\QII6A,l8Q>J>Oi+9^j#\EET%
%%Q-uZ_3-2^Q[LH4N8*N&r!5,!6,S5)i%9;-!4s$?7$$%[(lCNN'kg"^h^grpdKl-LYmT@rT+s6S\B\Y6TCE+pB-S,*XYLrE_4flD
%]B<pmrs"Tuq7`4[Ko]6;rQVEEm`irY=F<I>=I)B\9$fqLP",C=<2*186TV#ZrGra2bF-],!S.GRMpStJXdU#X4sPE02YOlFpEo@T
%Zla!JES?%QYe'PL@i)'(@uMM-.8bZuJDD#"FYqOm2<#m.oQ-EpAquR%qeT$=M*t/53!]C",Ab#<[sSq#;bVPo9p4tq1PBIfOf[Kt
%]7j1#R=9D'7AKWV.9h#%33m.;FOa?\>H-Fp>_e"P6S0Q:c7AHeUIq`V)2i/X#N;g,;!)hhg,7nQQ>o8anYV)<X8*%H0AFB<)k)@7
%0'g:+dO(mf(H_*Mcf4Oqif6A,nM4acQ`@5UlHJsM0T3F]QrY;??(]$tVm8N^+.,?A*SIT[ad]`&`$NJ=?nC5ugIWl$-I]5EQtU=f
%B>(Dk%ZV_j&*jP^HJ'\=jh_Xl%\*\2X^IT^"/,<G:7Z3&lfp+(1%XHTg#bG%m_ePM-g<i^%Uj,)Dh%ZAm;B`B>3+6Wh0;P.ONl@@
%lotB-)3h8SdhO0U+MmrO+b,2Z'70&=mf@Uj&cR"\CK`3Fr:.H"C[(EqISP:\<?!*-O8>gTpn7fLjVWPIIEqtBj_G5l1`h9#kDG!6
%r5O\me20PoYSeqO5nAO_:#R-9-rr2^E1?V1KGJHf[p>DObt5$NiZuO1.^gX6]V_X=_"WPl_&m?^e+mVI1Yb'm])L*$-RU->5YiU+
%NR6-2O*AqfZTU27*JYE@aL:"=+MokO<T++QK0g_?;j#/HClYF";Zsd/<BLf$dO'0G0+OOc7m\@>-<7d%+i8N35Q-\?+elP&jD$-8
%MgNPh4+3eD6AhKCRBi.aBtmP"Xp6\."X#I2f,laJO7"Z9G2=,NG*o9\9!c*)!>@Q.1en;P=.h;h,1`]!U*V$+U7kmJ=P?^!#GoqM
%FfG`dQc%`!LHZf\6W=/2=GQ6\Id@D\?L>%q`A0l+%8B!Y_DFRN)Cc6Fj9[<1bJ0iQ:fG:S]-%Y"B^]`H$1`!+0'gdU)k^RG)-[jP
%G5G;qgbMnU:deR->>r>)C(X=KIP(G^fo_8T("YQ0Ni6&[&L8j<b$'O<MuqC,7)'Lr&(:q:RB9\M&Dl*Y5=-gR5ss_C@8dS)#UNPe
%0So'WZe3r5m`5p>@5C0%L`\D[6L1@J_o5h2jD(\efW(H3anp0rEp/mhWPtkVmX0h;JQl"%lnG,1A]"JcHXXr]<5c[3`p$i8g!3,b
%XJmmYjcQWJL!@b:8;ni!)76_?GaY_urNoR)E@@il6Sr2L1inC]2N1/qhAK^+DLUdR1aQ>CB0'886Z'Fl)*s.U#/QB>4U6'nr:6<'
%FDdT9\:LWR,"3Rn@736;esr!D&PL]OG-Adr>/NaWXQlgrWjhLEg*4r&XY%,nYu20@Mi=Q)0`b"%]m]:ATQ&YQ:bSe1USHLS=q@eq
%"(qTB,q?pK3!scKrp0UMhu2s"s20?]]=3:b]DqS3s7>.J^Yf#LaSsF;+S1sNm=5$#hu02InFqG,?iS<YJ+N./rSP?&rK$^Qj1kQ1
%J&]J-p=oV)9E056ci:'o*\)\ZEa?]hEnr.iD+g[!QYFi4g/QGQPH@2),r?aDLq`X0X(K62,,t8R[6NaK-Irqu_M1dLJ>&BBP\SkQ
%8QKsTU]S?U,SF3[?>0R=pDpV396HZSr'e][TL9NA+OGd"V+;0cXXYXSBoP*\+;PYO2mYr@#>lu()hc!/^Fp*gSgGCF[+#jP`0N?$
%>mD"V`,j'gHU[bN=Gi9m\kXGlM6;e`9?[BDKPP%nK='7tLG5k:On/Mh'F_&g.0d,W70mg3;%(DBq@,u]ZiMGNY2rRc6=oaP"_)a*
%D)#$<Q#)t38nnH?,=HA6jloW'%FUpU/`m:@#Te?PLr>!0`ApgVmbLKVnAs,Y,0N.A)EL'AA`^j\dhb[I0><WV40+<3ic#A2R(@g4
%?bl%n)t1T+_[c"-:"k>_^62;491UK[`1^9:Ut:idUB[Ot/TJht#Xb82&^NC(;dB-[<l[\-!;d>,TcJWBFsVTI7@`6ia*NA1f_lJ!
%MP:mSeYMJ8EQ#^"X/bH[<7E8a)B0FV3e$i:p^/3%,-km;Sm8P^\&^72pD3#3#VSJ#<7o):L4Y5C?;&B`_ISk`2%4FA&Q=HukD5AP
%=HAQDm?`V^ZS")(@M69WJ'K%D8S#L(fOD=3Jjl35(U6We1aJNh[j^qE<c`*8pGg)AlIYMH0]FhPIJFf0g3\!8NNa`k!csog%>2R:
%dptkE/_ItDWIWK(dkSdc;2AC?*8U\h;j8LVPZ.$jY63iiN(&nS??bP2H[<NH<;Xt<^!,E^eE_61'3Dhd$`rb"4.JS9@Uo?0a6r'h
%s.-HgG65Xr'Q\bjZthL4Su"^V29!BBZnT'q:hQ%A^S@W=ICDVCN%.=+(_l"AX#[AqJbc/eQ^<H\N,$u.147R)Q4be[U\W2'9./5(
%cP[159J-D_V#*3-6.lAq8!tWlCl',YJAKGDn6Q[F%k$$<Q9-aYO3mNo8Xd7sm=TX+F-bQMD*]eq\YU.a8-1D1AGRl'VbO,+mnf](
%geoC+kms""r[chcN6/Ng$W1b\&9<QQH#5T0:IQW.#&GQBe66hH9LFuCUs#<m3$$GR5_?cbUfX/TJ'qO-?TkA$CPbrADpjDBOAn%a
%2sVGW%SotNqu@ql6Ydee^0AQ*4O*9>mfU\/Z([cNOA\ASh59en`"Vsq;Z;<0d,3"f9$^@X!24$WC\-YdD'/1Z94#)j!_3]-#[+n^
%DQ&09H9'Q!auO\RJ;>]l2t>VkG0.:k<c^O$KY%]+OZEuXE<;AMR>R^GTnTmE[\uH\#O+*kV8P\4,oi^hRt9I-oElf:7_t[WN=,s-
%EQX$H_$Q)_J:!q%aIJQj$8Xp7/M3ETGLUq91]oY[A"&BBr@0-"s6b5H[%2f;i%nn&&oilG"PuPr#c+dY9=H,-P7?j/jo[]=O=Sjo
%"->Sg?:6aJD4_5)=pk8%l[@k6:DL#2_Y/NXrY>+Jln#)?81"%hQ7`M9k[&cSD2!f,e82Iim>-,0ZH8YIV=cIN";GX9mLJX4a6k:a
%Xe5BYc#lPh?stTVV>=$)B_\CJI&=!bSNB8S*P8cM:A#)-=Ke;7Vo+=`@"7B?&l@M?,NY2Ul=V7&!4%3L%+;*t$0o0bXFnS$Ug?QR
%,r^L_RD"YZlYc&[">(K/M@uC*/cBD@rekfDgPkt`TYRc:hCY;OH^L'T'^[<AV#j!(oB6bR\ubA3GDWqlph6TW[S8ok$D%iM8K!)-
%=j8;,LX^u#O<Wd\Oiq1hO.2(YEegVh*3"S?qg[jpPUJ.0W`>e[_`SA5<nafMEPtdA;:H"FV9^Sf'H4TK(klPui)Vi,7Dt9+7:@2?
%:6/oC5kI<DN+8Bq>3HArUT(:&Ea2V-a(^rTKRNg_eGG%9Q47d?p47F()/L`'>U/+kK_d)8!/QAe?eF!6Ze`k@71k(f]Jh@Ikq.)G
%Ar,l%fbB[F?Ap"=UBKI)Sn"(5&)A-O&P<K$pU[(]lpO51E]'Y7f^N>8o[?KnX)gdBHM$C\0Ps,iZukMnh8=obM.jE=15ZI'6cNdF
%4C\s:o$#Xej>ejZ?GmpDchBZ9Q*Cj$!C5CL7$Oanb.uCZq6g$o%BB+I$,%#p`Z\ANbDF<DH\h?pIP]nC>1KO2*)[>Bc/EEYlumX-
%a48_%m!Hk1/t3@q!7FGPP>"kAH;!-68#I67lfjPeMp=da][t=ua`Gl5E(=hP*8T>)gN?gjXmqC9^d(Ii0&Ej#d9`E.Ci<"eX;q:]
%KnJ)A2,3Cu(K%c\#\(Uq+&[-><U6h?,r!'\AWt"U%N@ART`dq+A*C*A7M/J&cUs4lT<6[/>k':Xkf,Y<C9NqC&A`,ZDI"EU9cn*d
%5e>)Xj`Kia8?L6L.2:/mGeXKQ6M@oc<sWf9Q-H3tO`10e9_j=4Bs-jA5:]h<X[\?b>CQF;hTj_F^_@MT%JB%s(dU,Za_=I72!jjc
%F%O248@<]"S5,!J6bhIkkt\a]m<U@M;U$t9Whao98l[Yb,=i2BlWW6hGP.ZJL`jW-OoEYK;#K-ZJJ!mS8)4CWT#L7P5J;AY1K3h_
%DZ:MaS)E4!g02Q#$MC&:D[&E1%!%pq1O0KT*$E^Jg'!D<Z!ugO@W7Y-col8D+3%2LB"1mkdWN#a;.o!h2KO&CSUE\%q+]6DWfAiO
%?Ap6=5(`i#Ps[^U5apP?>Chd_ToMTRD77Zf/ToG&*?r5'HY:LKEITd1<"B@>/54fkafB,j5YAB"d>]K7[W@dT+uG_^a6TLV>FSeH
%79M*ccDWUdH;OW^MD\C:\0;^p@.b>"qe,ZMHW&r..G>WQGdi\I,=$#GmdNQf)9>mUjm9mm&KFa)P):EFF:e]gqNMF&(?S4nW^[I9
%(WF=ufm>V=,M+E7]drkO-J'Qk2%=.B*0Gl/QRYOQ4&^,i%=%?m]tp7!";^%24Z\3S=2h-fpG?M0@fVtD'V>E&a*X_EMdLRnn_Ood
%Cj%PDU6M"b0c^9I8>T*jQ^-h$7.G!R0_,"<a`p^#`g[b(n.FtrMNq?0i/@\l+"qQ-HXE".iUtZ@(G!5q)5=8$9r+_&r#Q$c-\"o9
%RUl#@NMEn29#MRn.9f*cjjNKD_4f=SUAT:7^R8q@*]jc2mVSLsCmh&1Y`&o=6&^L"J;S1-Aj/GV!i[g&8H:7ugg/S3ZhUb8a$n_]
%c"CVMNth[i3"\9`XJ:A)gEe,F?(4-@#u*bJ)iLee8Orc'MOhS_*Ar4!n@:=B4,a@&L124GlE.P5(-:^%+EJn#7[(4k#\,41.OWcI
%dGA00Wd:Qu<Qb\F2.lhmO!lL+W7<l&hP2eCC]n8k2(cYiX)p<KGm7tnW?psYE0/M)1Q,I3%.h_<GR8Z<6--[T&ZUWT[>8@b.R_&f
%nF(skpBr;?(O&IMOX'mM,TgFP.0PE(;"tpZXr]7gm@e^BlBElZG!E9<Qa4MBP*EjphAT'[fd;k_S'XISJ/O0mAN;E?NpUk)Ofnf,
%L*C)c1s)sN@c'paCbtnD]'@].1f#Dd\.55b!tk8_ZOH"d1fejQC:bln,S>l$Xlg=N7<h$2K2NuE7TSJJga[Gk$'fkt;gChTo`m$%
%7(-GW,e'=.Kh<abqh$)$73H'np>r;d<&K00ctb%!8)U@EEe3].$cb-`R6qe`l:8'=#Xm5f]WgVN8gONF$sDI;NlCV6cr(F>UgY42
%/RB+>>,2f09LMr!;B:3l!=!M.@`DMEjr0mlOee.O\FC`MHQBDk"Q-"gi:=(KS[1EC'jQKbWZXFhTF"l=Yc3s&qnen;96L!3+tsLn
%@F#_:P/CaO7r_MHDT@O3#-rFdX[Xl@Bu'p2g(uj=&%996G51;DoNqbK6"[7<\d9R/[nn%g`JrYeZ4-C9Ea'*C/CgIo*Ira`U)Lu0
%C*C.Z6j96F<XsE'r!bptm!LT`XTh@"TqLAp>?KE*e6DT4@dr27W!cOVjYa0AVWt9UOuKI]<jDWBbODmIK=2E@9iJq17f?Sg]p)tT
%i;rmNIPcMrdL3?GT1TdBUjMZC;':QJ&/SQmYq>RBcPUL5.DtMuVhsZ9.bS1/qS"A*i0G\[K(8MVG^ui1#3E&_Qj2P?0uAf*Yo1oc
%ABUo@`p*\c\!eGDeOL[@$TJfZjD-2jOfBWa+IfVj`JR]!\MA7BX&Y]h(l\HmQkk)%dn9aKQI7SiIj&2'&QqJM3@+I68k<8.j)45$
%?OY*Ac-.(CEhl97:iKF`@r$j)3qR9Sdq2g]8=(0s!fMh*MLKka!Qc9G":VS??o7NoJ1-gC?"bu_L30<O,IS]K:m,+Z%gLl-5p\t:
%!Bk"'m1-/tqc1fG[T+4,'tGZ]0%aYh^M@h(n^ChECFQ!-^6o%IXcu--WiCH5e=<0;r<V$0IMF;8Fj?6bbtGGWpo[i!Inik<dG5)+
%g5dTK6A8lkSJ!"gbB5oIVoDgN;Y]N0N]H<^;2hj&J\&0*$4-#MB<hLu"9)P;<HX=o,&'_YhNjEF(aG7`W%^IDYB/h0Bm89(A;k5/
%+9^)?f<(p@J9:,ML)<a&+;XLs*CE/,*1o:<GAK]aLuIcRPAe(GkWiq8e+:A%%080<)%OWCUCT(B`r!b:4sh2M)2'bWJ8%:\cg?G,
%NnF5\/!#m?C(>60TZi<1Ru-1>_bX[@>)nho4(N15:TeOLG4!Y^E*BrSClU%/Hj!B_N]")SQr:BX(&iR"pTL<<Sa^4WJ"8Qa9+N_(
%ZPJ2;/YH_P]E/#YS-P=DZpe"LmbR[lJT,B:I\a)rINf:r,9(9JlN>AND*;Q?=`)G(i-8'(^UhrRO#Z6NJ2p6fc@7;.$>Ed,=Jm?I
%"=J%*pI]qqkK:Lj80nG%CaZ<L=ara1WrY%N[Y0I@"7(BUkYOj$%qc/=\2'!NUGt+T*U#&!*6oHcqoT]>LPE6<CY="PA(%2W!AcDJ
%WBq]DgZX.Lfm%gCS)g1hkc^hq>K/0<GM3%?HnACaF;D\%:]^-KMcld&">#0OP&s<-IBX`$dSSe$Kb,4@7r-k,RPAd*=1%-AnfM&.
%[K,qL>U/VUK)&/A+:ooQ#1>e5Z)MV4,$)T8ne>@O=XrW^D1;O.Pd_^>j;25tbiF+^6kJ;736rTo`+"m*=_4j7e<L]M.Y+?DW.^Dp
%b:\PnUk^Re]Ph&rPWcp!;)H2hj:/=u_#jYW0&IHC,sI?^YKq:^B6$UZ5=Uk>>jmt>hV2unDIW>K*CjZLYR_F^Ea--b,bQ-("BmYc
%!;U>.RL_ZR^Wo]_hBd\km+(FCVXlr/kdk86Vb$-?A+<(GaiKIC6?$[\'tSLqJQ0@a-k$iiGq)XXd*pB0q<>!a4s(t<`%XAAWPR^-
%`"Qrd4bTC,ljeu8'!:q4[++(0bXhaG2s!GK<BEVtU#P5r`9*A=HkV:"@D'g(?F`OES=Q]oO__S9-p$A@4Y;Q"!&XRW1hL1qR@u_(
%X^OB..Ue[40S%jdp,AFmfI(/_c'/S%'-mF_l]#3[ZjOtMD<&nLb(6d3g+udCaa8`\<WY267)gQ`;)g)5>\LPfaf*:uCA8A'NqTRZ
%@,Q*^Qb[*p4Tq'NJ$B1V]Z,7TemG2.TZ=[@]6cL?A?7;sDQn3dBO3<qWQ's;KP&`.@bcc%WMd-@k+7_73jcYE0CfJ-^!g8-\6L@a
%9qo_j5_[L1P9gI?Es(@#OU;Z1Uq>@UP_,=+);O3!@t!TTYAUuu?nm9K21k6u9*3GiIRC-0Y#6>3+JAP[NFT@%7m3S^b[n,^5*'//
%:nX7SRO^>E`3/M9_-n#pY?!*$n!n)fW<ITnX!!JlbQTEpW35o%f.kh11n;R\d!HWGAL5N$@%8BtZG(XPSQKmmL#L^Uc?ObD<.A)(
%V]$VsEMVSKTKd_P2<",i.d4CBMGDMs.#d]GIMf`Z"jfQ6_kpp,\N)4<2RR[tdAW+(kO9WD:"p%Bfd\V]Tt7K>DuAeK/jqR/V`o0Y
%MSU1@3^ad8W?Dc9Om+`fnBTsp\on3[N$X35:`NQ,`VD7=3$SctPR!Y46'OQl@f&7qZXSR</o;J4N6mZW8>e2&S^77c(SFgH6fc.l
%W;UN"b:CtF-cA#<F)#m_<8OlG&@3<)>d<Q-4ntNBch^hS@coDBl8S7kXe84'mS`7QZTKGEE]-,-?mQrg!_fGJ#L'scFW"%:"/bjK
%T`E]/Oj/ilaKP[TgHLqXTdRY.a%Sr^^c]eI/;ufW%?')i[X>@fd'.>E>Q!udkK1T4jhbK%9-",6K`E$ZYftj2:r)A,Qa=$PfUtRT
%dCPO84c15!(q6nN.cWc4:ZA!cSW+1=SYO-e4KOb3$p2OLc+0@/F+VKWV"?p,WWrU4aZ/%E5*`l,`!b$u&/h_&bnEC+`af/Bls?G:
%15P2r3]e`<=?.5M=UBjMJ^i_[AcIPG*Z$:5;oU&=c]1@d4KKqd+Mr['cI:"6WB24Q1lU(&b""6AhI`Dt!jkgB-?b(gl/N^\eeI8&
%\>pl(MEnWE-\;d1b*S<lTKg)aUngN"_MDZ[/[n%V#%3B(N<%:=E_\c-HXO*o$M8EJ<##HQEhJp!d4sGF0R>g&[>]+4kf]HHLgggH
%_Ks24XW/I%7,VR2F%#>YR4ef)NlI4^5spn-54Ln="k:AqjKK\8PMh]`jT=3iG[d<>h4OFT.u.75Q2tHMmudlB`YN+u6q)4jE&<tr
%/<BS6adjiD'3,,r?$bk@\ocNma7_6CS($An+57d#-:L;T*Ts$:n#F-NZ_;Oldoi>SUN)nU-Lq#Mn70<@4)'Bt*U1&=j;$tQU_-@g
%>Xm<o@$=eT&u4m)F0C\2`s\)rD1sc3?3uFP[Y5UR;N(4k-7DUoD!an4nC%M04;UY:78)HhVWR4/e8\ra+46kN3D666,djHBH)eR#
%C$+];>u=P@$l@OfP'2%1CS"-DIgD6>9k/"W]U:KU].8smLH,TN;5spHk5dO)4A`S_g365bM*tNEnWp)]7mgMV"%Xku*3C)%8Hla#
%GsFO%"ph-JN1`^1Y3a"7G7#P3Mt1/I!pL-#Ni5#.&6jPEStmbF_gG3>!q'(6'la?8:S9*'f!hl65B"5"Xa>UC1t?$]@9^m.0ju%!
%1\CRKQIP\i^@]cU.Ul)M2ZO'*F`iHl<*dJ\CO=A6JW9i1Xk4jq-;mt:m`.'cKHn@FRQ2dgODZ2$#Zq'o+I,r.UIlU=;*@L1_I\PA
%5)g)2PQ5$oShXW!*#ilf0!P4g57H$`4K#q5lcSeB*;i1N[6=S2Ym8>50MS,#bA@$_!%Hj#5X<5+'P[sB4)7/Rd2tJHHeQ+`W[ij2
%5K9P;@oH!Tp>ClpMTlsQAB,#@(pjBlY_9l*hAR`C5SXm]Tq,7\TI9)^-LXLKcD@>!Do$#7b['92>/SU``,[mQ167m$2gI,B(1A$o
%D4a->\>Go@lq.AO=ER6UU)Qj,I\*"CpgX(i&:Sb&nFD-lX?oXu:Md'q?&m,&R0<N8=BS;\r_OLn7?d)0?%I[2T2'n,XY\G>0mR&i
%]f:s./h24S]bhpMWmhDT1ePgB%q0oQ.J-Yj%EG<:Z2qo2R;P;o6YU/`2&.hSQl<+b;0&2RfYMeG.>.Dab$/'DBhLf:J?-dTO(9(b
%r?)tM'p?[f"L6AI<4=^3SOHdW0P*esSH'$?2g\a!80Cfo6!2=mB7'jR0E6r17nT7@]6^<2mrSRa)0+j`f]^EO&g&V.1uKubnKI0\
%6(:sVQB,2.,\Jpf-rE1^e+a>#k'7"29bsSmK5A023iIV<#R?MS)/f;`UAhf[2)RhrZ8kE%(W>sg);B__ETWMmI>WuVmqV"E`RGn<
%lCtdbP^e"I.#h?Z;I&'V]>L]N[^TQWJ4$2F2>Iq^fgpW]85?!M_c+I'Wt69*O3L%MGT8*5Suo=DAWGBC<D1o-n4a?o[9VaOq'7V&
%O'\"_UtOhND^NRko"p3?-@TRiEKYPLn1MXS_6WI5aiGmU*0:N?><?Zend$I_-^V32k/\+]A;:&`C+E>:f_pOVC4ppi8u3PqB^5f2
%app!XgMIuUYS9`\Hn-sIV8g*.H:gYlfQGlJJt-ApCZX!4j-u/`hZ't+&EE-iWXM#Z6[K6<]]nhJ1h>f^/*]ctW^Q:06LBo15"*aM
%S<eUPRn8%5"9)t<kkCC:PpZ39'$AYCFhk'^"+PLD-hVL*12#aCdu@V@@VEYIdB#U/-nfWjZ\=6p*3ke'],D)Uq8/rd+1g'_\krf&
%P:8pZMLFAc"MFr'1/(`+[)^N7"Dem3jUH9NNEhJe`>p0Pq<.5o8oB7&Sh),u#m3h@qf-:0*2`j`P!XP%bmm1T6r!r2F,.&X(`OD^
%7UL]oR3djSDJlbt;4B<F/6\qC=MiCOe[a>1c-[p"S3*n1AVYnd_JQ`m^_VZH0qP'oI!eASHBTJ!>\\'o8!Z8^FNf7m`ur<X*XJQn
%;rDRaNs-2Ve(A_3NNSom6R)N<*^7fGjnS"%ma/JiA7nOm7IQDB*`?/"R79T)H'k=[gM<E)c\H]q.s!j@"(%_f/2/qGMmlf%Z+;A%
%%j6q]AElY(6n)#3K7nVaHW(Jjpmd5^em^((3IXC)%O6/",i>$L;Ic='&Z-d/`M"aBHLSt-:l0=^)?&D[O>%F+iOq*"0CYGD<K*f)
%.2m?&:B=!OB.;5/$TT&?J4nU/orUVZ:h6/jWDFX(m9J^92%[>$.DUtF*6g1\7K"o/a?u(TY@HFr>rbCW9>E0:YKLVH>@RYXOQCR4
%*&`k"^+ilI)C%kojUD&eZA:OS^R!s\JGM#)pKi[`e!Z.g6I/%[KekgHN4t?b#0aR6Po7AWIu>JM4iEMHmj4Koe*)61j^pRU:Rt)Y
%5YB;S(st/U]Yb0OjUk5eVV=$#<qNFqVH-b$'U5]2SgHW,en7spjWL5`q[h`*@5E&SlRS-B'rrAu]!bN/3Jk%2]O8-FAK[Kb&^%Qs
%J%rfgT[4(!0f)mKSLP85Rg9cj<CD)(2Z4_tT^#6_O2N,"M;BP$h1>qY5kmE][:M^/@k\#^1Y]F'M[=7cVVsik'ETBTC-+&$U-KZ;
%7k1D<O1[EP\LFA4<i_S!;l&F,7OMlWLg_>_*AV+\3$$-B2DJmjRP83jHY6`q=GPj^Y>o$u!/2F+l92W8>E]e@lt[.4Z0b/oABs.@
%<.]fKMk(?03J0G"&36^3A]ha]Emc2o`paC)k/\r'1e=ES1,fFEb!!tMQPFQIb>c:5XI`5D/^u6hDPnDIII8t!Koe^:F41LZTA-+E
%"@",&0k+^iCahqC\MVf>KYTV=9uEM-&RU7<D5Wq@;?ia;0k'buj2&F>"sjBP-be2F%8h/M85`@eQn!*2TBf7)h7]>,0:cojc^8<7
%:\5Cr+t:Wn?qM"#I)"o],C7'==bb!e%oW'''gSQi^+9V2(_"hBf5DNhN)gRB.B"Z&rF5[&_:uYX'fW_H$/R8i4\5@IR]phDancm]
%+OR\YH-q'#]>jN4T(k$9-b5"#GF=n5_.t]9o05Jb%$"/eXKeEj(r4I1M,a+5OjD)aE?#:5KTeU*ZGT;CLc%^7jg<6K:24<(G,sNR
%=E6MX,sBqK:nA_Hm&%1KjTBF6h1q*&3jeJ11N$Js>G9Y4iqFJ4\YP80U/$<f3"0*?61<;P#2%F41c]AqES-U,-5St$Qn=e+_]4E'
%VtKqZ4@Yp04>JgMDXk?7/g5kjgV'F^<5&`+MFFCn_?gm$LsuMShV@ol]6F,d@llqN\([50@#Gp>BS0/5<Ojd&h(1U)K#fP&k<?ti
%E8E#]K@:)43F94Je7PGn&#.a/?\W41GC=@Ian,Z$,_r/9SM!b1E1KC.n&(\oWL0hM+WLgtU(@k)!f20l"7`=EUmVeB(?:m%Fk]=J
%-"8K)3iU&jVYE8<J'C7Sn&`;1-l_P@2<O@j)KcI;9=im*I<`8_!;pr(5'H[\qganKenE-WR'R'4KctW_];9:nQAB`^W4'bC"5kIq
%f4,CSi@6kLi-#P"h\&X15f(gVYVO$`[9Vou:/Mu[eA;6IijleQa,4T"*%f_\bMnE66:u?=*&X8M*plnU2qoN"FR"Kups/8-*NbL)
%98t[`&lHc9'$uZQ:7jmEWS6u"bSV'4MY_e5DJE.a1j!Qam9>Q?2I.ZQC/(B_II<C6Bf1^Pa^!I$q(QY4VFOo=,*=!?q62=e^[-;q
%#k9(Vb%.?>/7S#s7hZ^P/B?9&#P4)CfLk408@VX*-,[34@,k:/;GI%D&:*LLTelHj--2/X>rde*br%F"QRS&D#8%DRr1A2ZT0:j7
%(A?H`/D6luIS"VK_8/.?+s!$-):Y)X4eV+qM40`FOmM)\^$Yp'KHI29/Wcdt'[BuL-dbI#f*CE?[P9%4FLMb`)hU_L#7)><EU\RM
%,s.lV(G+j:gg]fEC1L;A2QcC$:68shYmEm_8`UcrDQ.r`.7W[7pTh[O"Di>?)Nt3=C;K,68rOGsa]1AT9+A`tRId?b(SDrP'^EQf
%=#f\I"3$4R#hf%gd[&2hjKbjmU?PK]B(I$*2DqsRA'jJ9[AsC[bRY!AW0l+S9Sf-a\lUAnl9n$_/Ve]og$GDr+Tf1DJP'@sZcGn&
%i:WmfMT"3C5`3"EZ$4Zd@q$!hj(F2"[1"u%5SR.Q,K)!b0?PS1C.8fp1uSX-DVVS3Ul(;I^SjMcbC5frcDI3mc?#\KSo+F?U>ot]
%e,JZaFf`KOh<ktg$OUtf:6?\dCt_@oqLtK9!%V:6feikNa::am-']S^^-h"[WXit*F4#P9"]]$$EA$Vm"@%<!n-V_r&h-h7>Y,i&
%SNgYHpoH(HRV'h5=*E!$-5oh2B\nknRPGc2@7`&s[T`C@+53jMC#C,gQeL!8L$7IDN/AFO-@3<LBPARjdjT'7G-!Bg/IP>C,&)mg
%^Soa36BF'<V%J/qCt5=ZXSdj2aRIrnSP*[t9X[bZE6#E/m-nj>M2IBH0a(*Z?a?DVG`?ZXi"[)ECVE_!H>r$a%]tUHT>0:N+LYg!
%'p6ht*W$UEJoAkQ6J.J4X[$JW9hn:-M5@4V&Z&qYbOoC+WehEG`d2u<7so(Y9Hr2AP6i*]k`jo?</L!<9B':mTEWJLQ`(+)?I:#V
%gFf=ph-K"K4sSX>KFKA4YQ;ddcRb7"M<+s;DK1!H;ga_W?'D^[l2B%i0a*"'W5c+TX%g,"6(aQ`W!/?=Y[,;TaVe0>N[!Cb"A(&h
%9[gpXDG3FUDEB[QDH>$]FMXBAg]bj_VWhiiTM.XSh?qi'(9f0@T?3liU6JA@eEJe-`%a+ZeP-U`%'r=])'UP#6(FkSo;SeYGI85,
%egSup!TgZO\[sO*PUdrH#7)ZD])'7%N?GOoV\mlh3UPR`o>cEN;=h0M"KX\"UG:%<7\m1'E%T9RE.Y.6HklT=XYEo;"$hnZ*[g3'
%R8#tpg4I/;7Va1bBK>LGil"I7_*nu2NR4ZNp"b@0OeF%mp46?9?Yk<Y1jVM3K\cU,Z6SsCDauo`QH+$cC"A4W[F>\B'&.W'0]pM?
%^d.J![".m*/(@HVLn'%F36eQp0F8.8[sO$LX_g@eA+L@7_0bLAZ#inK!l`;9.#!D`?sGM1D@W=NW7QlV56MFXUHbt*HWBUQ44E!)
%NSZsM_=]fUYH">^AO)U5'!&IL@nJbeW/umBMHp"TF`OW*W=X6a7/^.)Y(7c\O7t71+;DF#F8H;RkGdlI@fD<jB9^a#@=C;Wh%;ZJ
%_kO`?aIT*=HotN@C,CC[5`rGVaI8Y.F!?Y5M\Yp:8uqtjMRJW89*#o>Z/3)&ocOcYdaQDM]8WSCf7GI.&dUThJt/aHecj?s0UE"G
%Nu1`&WA;9h;,hb*/[Mb9e,tWbrHMan^D,4Z0mA&5on+BLH#@\u'3P]!UdnJil0I++>R5r]&ZL7F.-XurjJYnpKIU[%ArIW$J$NV(
%\q<d?M`V+sj!TImg%k;"N.<D;f4K+c"#"aYQ5UKUY&$jp(t2"Y;52,<fN+^r]24Z6Os<r\f"488rNsMT:1a*.7%>Mnd=>sKd?95(
%"72nn:%$0p!fEphE"5@R%"tW=+n`]oDba_1&27thi&OEj7gYcIHW)&se3,]G=_`J\p`;W&`]l0\A`.ZQYm6VM3to4(&4os8)p'*6
%M\ZH1dj6+H0?7NO;$aD5F./$28?<t#%Xs,\%5"oZnruVj7=^0./RkKDLCqfF.!j7jkVud@$qTD^IFs,('/lX+XKmqNhW]A/jsWZX
%DEoF;0DO0>E#Vd0P^SW9fcpJiE!cp2rQlN;jiaJf3ZEa1plJJ"'OdA)4dE9H<IPS"iHBMK6X$oo_#["7MHU>UZhb%bZ>Fi/3NWT`
%e-&Y`rD5<PFJtcq\N\B_/Y?7FpsC6qa8kUL9+ZdgaefQ[HF\J<9*&q)BF+@SOre\VHYD9sVRn:Jh%Zuco-kt.RX>J:;0%YO&7?!`
%8BUol_K#]IEf)*lJ-noQ`egTE/OZqb#f(>6V;-gQZXj'qch/,e7X8sRRYp.0biau?0t!8=c:kR5SPXk_r4ZB-f/rr!&'g0!.\T_Z
%5"rsfqshSDrG*jMIs)tL51?nH=Z6,'8=,7M@O/-qo<o=!-B=c<KkEEG&+d,VN*S]IL@%-9,I>cjFVk)5%_sgss-l_\$YKTZ$)s\d
%+[>.i*8RpQs"XrPEiB#]/U$e-,@H*KeIYm^CK<s\]9^1_36E&"XQoR@h`KF.nM[F-3.8<G,@%>Xib%CKgfd%.$e<-p=$3@$1bJ_<
%1\>=cmZ>j3rt]!&0Upr7feT3.3#1H6'7a8@\1l$hB%/DaN]9Ws'@T(+D^?K(Jns%FbY8.OLt2ngqpU?Vm=7'GK9W=A"K[*KUD*i%
%G=HfVlB2OBKit>t(he?=/9DAF'GUW]^ZW[E<=e.E.2?;^ZOE.t,U2!K7"gpmFFB.D[HqMm&E#G%c8r0G$UiD9Xh'`HNAq]h@NX`G
%@UP`CB#-)C1+3Bn+eX47@RQu_*JOP*+K+H<o8*UfN+`X"NJl#.h9P&^K+gU%1rbcB"!O`i:Fg*7;V7nX^nJ(9-qjXtO;cIi"^oNE
%HAX3td\4;@-?XC4s"X]3XN.;]Yf^#,TkKSk"-TE6;\-kOJ4456okD_cQ;j&$e-:\!*1paa[mE_NROo22Q8L9H:G7#H\M*Zm+1t6r
%GOR8T[?PaPAp@),Q*KZa.1IW0G0_E_?-)RhUb"(pkbeSPZ>&-`W$$b=G'>D^gjqUpo?isMP(%"OZY`(k-oc^;Sd)_gGhs:)%'M2e
%RtdqBnm2!ud:,,Z\PuW<E-(*ELF\g^gQP`<[["JF!!I!DnSSq)ifo6MpS^Y,Fb_NPDAQW=j'c&X$[$D2r5-_[ThC'ReNl2dRaJJl
%`Pc]VIdEomd^mMbh=t4VDl1h#ZATqB-h`\Ufure;?]#n'O$6FB6XpYsnB0aa-kVQ)S'6_A>cG<J+Eff*7LqqWDk&*(M;j-m@KQjW
%%.@Zq05%S]qC7qqO]!*K]Fk#WpqC;G@Y)qQ!<Q\!qbJu_3ks?J5KuSWCNbW1e4RN_CEH!_U,uFYNqY"1#!TqnEC?LB3RfK)JG-*W
%*e5.KD"sHOrpTq+#UI2bKt-XR79p8IUT&It(IeB>#-2'(EM1eI0J=[d-gI\LT#5nNhV(GoJ(j:>W.'>14t$dc:lTSP.gAmV0L1rl
%(!8u'h^3N)?c3efO7loc9RBT6,f?OY08#:oVlDnqT_W]cD+[8bjKc12(.7#agj6[RE56g!d+[JPJ<)$(lne\G31,4MiK]N@)8^/$
%';hio@PZQH+=9dY;<S:BL^5Y3Zk4<tP,qgD\p_#>N=mGE"@P-Y;%LB3M[m"NDto;n<s.h:)IX,67X7Ce-;IM$&;F,@e\$c)0dmtI
%8l1e!%%/Y9$jZX6"L,5'-JQF+JiJP)<!2Iih*Qq;JYM#"jAD(]j=2.t&O-0!GeF>3R0^uYOOVlP4"'G!.aS[CGu7U&6KH9QJ3niH
%";(@:4R<D@'E:7.(f/e9KVgCuCG6Ymk[V[b5^^R6%ArB(Vd$^uK.SF?gtH\WJ<U^%F-om\0YVFr5AmZRfXH>TgS.Z_@hAd4f-\?V
%&/luN`^O7=Q.T#T,[>^KB>i\8>SJlpM/NX!#\>74r\&)n39im-6deV[YD9Kh@F4Y#F9r=2Hm+At8HCK/pur@0"Hp=""&ZO`l1`&j
%=1h7,,SmfkC[O'2=9g*-3qgpXI7T56NVQ$OX(q)HE>-?$(PTV1e99u#o:]_sR*\gMN2BUkQW't'n3iWQp]O[^ZA#fIfYVfTb=sG,
%9++U\nmM@b.T&r_>YA-na7nFgk1G/Sl9i1N`/B[W-kZ-!38"#O.OY@jd8"?Hm$NF?#\J(maWbcnTfOPlU//rlUj\>n_A?48n/D^q
%>4m,[7EV[PZ(%Y1aXr7G\J*+d%%8h)UF?:&DnL'*V,EJf.&91F-6=Po;PVJ#W(D],BDe"F6kl4cUILpu3?&a2Z:%Wb&A>dDKol<-
%jUV+&9qK,u#<XZ7D3u]:[=[7"f*S]';U/`OX1DN8c(`<o.Oj9ljQ_*F_p.)h<4n#e])DRg[E+#fqMXPaYBZ1E-(aNT`U@3s=5#PR
%%#e@3Q4g6!fIf@u/Wpoi1"[p#Dm*Y[l#0phPfE7`%jYD\.u&#2*7RjsTn,cYo`oWA+TbsXgRVoZ1af'.4(J_Op&e_3D1/O)_ebs>
%a'sK)o5;tp7>YirdGP]-WB'ZKWOp16f=JZof_qQ:'9FlM`2@@@I6U+A#1CrW^)Sd8jPTk_*t)>@"(X17TSO2*N9WCj$AeW<kPanX
%[<^6*2fTu@c)g.hr<dKD4)!iY.Y8%SJdOP^/k_>KWEF4p63,0thW;]IgMSdCV"Q\X3U0D;V)]uFqe!,jV&&ePpV9tt)-5CNSN4f$
%f_8<$<P?7rT2K-RolD&6+c]_h2gaU'M"bt-Rfa(%IID:[GZ>uqWm@g(jTJb,Uf)jsYc@eCHOLsgno32&K,c)l>9cIU?W_roQp3Ma
%ngpF'M%u/"80&hmqk5\`CEV0uneGj9;-'dGm`0L(J35A\ooJ2jf^e>WRB#b$HX17/\Gu&_-^sTjOd_d[K4TBFo8=Gi@:"&$o9q+l
%6S5;FE_GDbKa")@XJ*e5S:_F`qdk*p^khGcILLrr@O;)H1"Tj:q%/i?h<4YX=_N)k&9RKn7ol?frO`0gT'+,m<G9$Sf"cK(etn)s
%6gEKA!u:$%!&u*9$IY)c/iUO2BTRQN;&2!jI:+#PjiNu:])e:Q_Nr/\CH<sNVcC#;_\=AN_[YLlJ5VKaFq$k]gIj-#QO@k2/\qG(
%H-3*a1(3Ep+F6SZF:h[@P31W..V/n5qg%tn^/0@oE?9PEeoCKa,)&'E?]-"h\dK_S(/h>I('U(DjTZ-'Wt2=g(S9m\]u=QeE2Q]I
%?JIM%1'leU2<P@C=[j%r0$KX)OFs8<h9M;#U/Di`<+[:*5\HDA,E@0)&C!,gc\rPZ:XMN55,:OlY5C:q`??KKT.?-2-6c7C$gIjJ
%*X)0ZfJA55627r$9l!03X^<e2=bTpf6\G&e.XLiK$,%[MkYil"?;sDG(JQop3l=K,j4eX\c)UI1\cfUk&M_s&c^UpU3S>u&a_AlV
%?$<mN=kfnHYA(aVGYMK^DViD^1VZu#6u4;6Q!+@'LZWFn.cVk6q6..RL6Y"XDdo*IO,Zga,^PiL>F+-ZMM;d^:[&L#/UpK>r8K&J
%I'!+ZBHF\k%e$<]K3Rk58;&Q'2FN"0MP`X!I'618jr5aO\8iFt9-MTYhRl7)O/FK#I+L&kHlY3V_BhIWq2=)-WWTD8'J.SeR,%Wj
%84(X??&)lBb<@SP<=*;jOTrN61ehdpJn-"8%bg;'7jne?cuWDk9=u(Sr0kk_elY6!G'$CU:EPb??G2%[fo"s2%I_-R6i1SspNX;Z
%9\SMGMVJ0fhb(0tYOOCo`JLn@\D:BYN:1hkY,$a*j2,r#[cci)WP*U?G3.qAIGSk,5g,a;=GWX3p#0C^$/E]APuXSXh&3h[kV:'f
%C!=QVk@2:Lc[F%(rISYggn/R%b5Jls'm5S\=aBc*S`TZe'gJf+r8ZT"YuBL*h'2MQqe$Mc2I\Vj8s)]Y\8?SR3A<MrpG_78OM0:[
%Z9Ri8El4h,*4o>KZkH^hA]+#5WLfd+8)Zi-:f8rE,(H4L2q7Qfq:oue`fCpXOjrtY\q@inpQg9\]H75SbjFm:^0ALIEIKnTTLJI1
%R0+A$*B"Ri#OJXrkQ;ngs1e!YA_"47b7a+gj?Il:3sG%'H^clcXqD!m8.A-r&T!.nJiK/eAg3@eY<<rUQL/beXiO<A3[!q3\\knY
%LFmjHRu]:?1lNR&U$XWm&Zra;mBH[+kF=/m1sbKe'HQnje,gb*qX2!0fq!MCnM-&>9mOb(S$(XH[(IJug&H**_@knRnZM!-8K2lG
%E9L"J\aHtSJc@KghcY'-/!EZ]3NRRdpUQ"/Z'\o7bm9!ZCCn^SEC0U"/%"[3+"jJEAUBU2_U0U:G:%L\nUEuBE3>-`!P*V=$aBk#
%YuWg*^9B%SQc%BNO"@*D>j&pVY>(m;54PY8UNca"C5fk[$\\S_X)24%>nO,SXhCTp!^K0e>+*>k01auoM?==>fFL,=I'g@2Y@&1/
%JQeiLDn&d?[-,aK\k5!-0]"sN3punhe]jkm)=0XPJ(eDm)U[0\Vpu/A+:B9&q.a2,$R[c1+6QF9o]>be\=A&+E`,)&`(t%[%j].r
%k_@-ibdiGBO-cFoEph3p`nhVgjr@5A82%9cKg;[eF0\Fh!2[,@"I.&=2Q\#iIh[qD[>E8l6p>6h='"Ag*?B<uB@kA9I<KO+QKP<`
%Nlqe-e([IolL/3#;=U<se]!'heNUOT(thkX8@Z5JMAinY4"S:2UVEDl&?V`%r:nqkQ,^_n[5L86l0DM'8hd]WCX!-_D-tm]p3ZC_
%\p[k"DB\B9FY,/Nji,ho5_ie>K$)]ab?b+5noaK:-+lJ$lbWb$35N[/ZrWu5LTcW>]7!HJFfA_ck7l$/G3?iMF`d2Z^+hlc0@p,2
%%YgYGFYORX&tHkk7J;ggH1ZmqnRBecq%epJWncr[PVADK`>GMZlPr01G+H_Am!;+0>AMKsn%VB1fnEb'j2K\?mZHS(]=hL+8[%8"
%,B"Abc*Ntt0(eeb%(2oJhCbIu:^M=^UZhGtL:P8#,kZig8Y5,0r:7b2>pFN:]pXPOTo,3'0:o;,1Qm0r]+e1LVn7lWiu7>,]"@S;
%[p)#0,5C#u_qi9kY0&lDh8T,Vo96eE"0]bjUPsQ<RACN:.kl<`Y#"p."8Vc3&-QNI]^>/k/*%gKIi#i!(8U?d>.[[Xqn'T9h`LE8
%+V+>AR&oTumt&=YIdZ2['VMd4o+Q60>Q8r]_L&YJ\&BaE%[?-Eb8,Y8'h_VLc8-GfEt6HN<0]/(Wqf[O21UE!n<hV*aA>*pLZ1a:
%eFN1JUka*gaWb1s-J\<0%agpNG5,L5?BqKaG53_g/VH*Vj4[$91Z98!C:9n7Or-GMm:S6A'k4;8gBLh\p'A`TEOGTIaMbb_>IVHd
%corZ0>*_UR,Mh&-%aSE5BM26[n_:JdaipR?bN,)7U!3Y1Qn/hO(Oe'QcN,Kd!hu!*0n]p4biHnWqU$aNQ-50^e!a9Hs/a5fK/ZeL
%rmU@bnX/4@q=mQLhV>P2/coU/D+*)!%63//C*CmF1?"%getB'VI%<V^1'<psaZ0/M:#\9T7.@bP"hf)IY>8MjQ1>:Lo@nh^qhNKb
%O[$HQ"O&b0%Fc*[#0\\311;lDV6JuPg#Kt!%7o/(Om:fl#kA<'H"Kcj(7L*;g'.CL&u28rb_hHOnd/;6a8oY"EeWNCNWmajUE\]3
%q:m4kbO<ktOq>UOTFIGp42%8]7G7tpH^Y<V=D<VC3nBVl!AbmSo;XDu(adkUPZnZ!J,)2](S(M4ke]HEoCJL9W1$.dfA\J/'2VZ:
%2.[];ktS]XCE"o=`D'Wn(bSH-.S,u<laL0qAe&Z]kTY.lO6nTai8$R^1;[@Yp%m\`4]_Kp]nAU9ZWJ-)c5O):SIYi]S/+JE3CA=s
%b1SMSH_3C`+Bd\r@ZNi/FNW-<&<G1d#"?"`n6aA2[XY`06Ql#)OQ!$rj#-2;NZTVDg4%\@h@)/,"@8@e\npFD#K3lm6[k88`"MAX
%NZ^=@,!-K4WAE[5;us5$<qXtmi94GQ$_"[)k/cd#j!KZBXLnirPT#G-:X:[nPbNFiFmI)?W!C54h@>YiT=j>07>SOa$N6n6q13jO
%&hj"pIe]fmC3l:0$R^'J9!K<GS.KF!TEroO:s/D@2k(EDD3<j5Z<3icg20SNTN@%G>%aemog@31$$d"`^W5b=6uaabfpG4+kX9TR
%i+R4l+3<<GDm22F_J=idRDN[U)5?u3H1%PAJ7\77gZIEIX)=YUNFhSLTj3$*!RH#8d;e#>Nt/nu?1><b.6`3(YSHeL!Z%b@iJt&-
%GfNK.`d5(/0StV^IK:]X/oNVM`)'.$77AT5RUb7il!V.jXFYZ0N\I@>rpZgdP28u3,ub><!-rs(,l'6`PaA)X59l%\ME)&HQ2l_7
%dMb21.E5oe&XM^hG#5FmCTZ;-8)I[QD%gs.GgE"JC@lsZU&!sqFp/msL<tVO3r**prlAE,c&Ik_%t-+:%,U3/e)^rULc#kK$3o^q
%GL@.`p?<fFo-7/dr_hfk[BM#]pVZKbJsFm>np\^?8WoT(128)&D*%_<,]_Mc?l1j*X;AbUPX*>l@t$X,e_Dp2iNaRfHAf%!Y8=cb
%<>u?nb'iQg\";^t>hA.9l9LETEqU&]r!@ZhRZ8o27usFpKVL0QG0j*$[NL%V8#baQg0\3I;A5JTmH#`RbEc7eV08SBG'lJG9eo`!
%QQP'HV`m^IlumsHUXVuR\%Ri#N,g5r_WWD%TM#TdBHO&^q\%NC5"^gtOh"7@_)b3%5kh:+UN)Mb(oQdb;c+\P@=:..bq$;7pJL2^
%3T4?fV%>gogQ[N3eD.Eoq_0m1qr6"r_\=:tEVA'uWL;l/qt3-G9oRKkjMVR>F8T@nB+9X?rY^;m05%8fj7ceEpta]8$@N2N[D&0-
%k,(o0B;p`>oB!6gcVh)d_:pqB9qHDmR"pHrfp(_!lcW]DY$gKXm).?Cpi2[IJ[Vt8T]Q13[,b%'VWLos4V(J4P?RFme7ANk:D5c_
%9lQcG!@&(QGhp&)CPTei9\!WBLFIVLX*cs%bo-Wgq_3_a0E#J,_\Xg$>V@>ES`5=h+6Ft$g;g1\G6QZ>SAKq"@=@?!2,hG(p2LFj
%;uc,B:/1KjPGab-;tC@!r]!XnaSCB^PfG4X9G/fO3/./&[5FlA3/*cb?]S+k!9`:Neo;$iPO$k^itS6\=,>)b3/,X.Fg"Laf"[Ps
%n9-HeiS$DT;`>%e0Nd(ipk0^L>P,;=^L$Yu%=Y4HUHf(gCEG3CS!(.u/aD+KeaHB,^AN5h_L&Z4;#9-,Xd59FTZ7f8ZB:cPa-.NF
%G`0Q\s64AbI-RZ=Ha5_IJ-TC+eX7bj+I>4=:!Lf?$<Er*:[u_3OX4VjTEhT3M*h@p#Z[41s,\>U-!VG,9GTR*@o9LI3,W79p7cYB
%k2g5NAs>PT4)Q#UmeI?nYp(;ZrAZdkl)'T`"FQi*oaj'(EJk=9gBMr'da]t:O&O4f\#g]5X3J/T2gA.LXeGl\lO$g5P3hFMV.r5Z
%(uV!+A?:nklfbo-+D^Q9j+,d&3YV>g*GEgN^)$ZJ.mc5*l.cU,@g7oP<FRW^DL,g+!n'_?$>q8I.=dRkjlV?0#7nfi>Y2tT\la[Y
%GSstWKUc;LiulZD:m>*6<>;^tNY&lKW[l`0K=h&sJKGGX<dtDhb[Kil8df\)*gEJ2Y4rQgq_6-99`Ao=ZPKcY:L?H4[YF]+T)3b]
%q;DZ8_erbF2`'pABA58N7C!([ljnNDhV3m5@Wid6nJ@@^0L"S[6TT[%IXkE_I6Gq"N1b2=\L4`]bulbi50<PedIrG`ZW5+5PpN=V
%34">II*%,h%MIT-5jmB@.eim/PYhU:H@4_O]M`dmgCo)jW^V_k%9"AJH%7a!_`cg^Hge)C0/>obK%U;u2g?ml83a5Wr=hC1fD>X<
%_5uoaKD&#^SgK\WR`2"Q27Bi!@Jlu`%V2C(U50EE:9:%+j3o<?Y'dCWh%]1YM_Sn5XT>k[#jLOeN4H/uS5JaK^!,Z_XS=q/kkWE_
%="^'[A0_:g<?Ul)qU9/\Ft)kp<<>H1DCMCq\ejBCO>XS]g*Mo9,oRZVp55SE(B1URM0K+,$j].$Ki!DsRAI!b$7R#(Tr>r>mFUM"
%B>)>L*F]&gTo8">VK3j=l>nVF]cJs[(spJmY-0,i?YHn=BdkFUE6U%#SFFth\?DI=YJ^*>5B,R6C)='>+*L"Y0takKJc%K%%mmR>
%"7!0@q'!p&EnkE;KM=U[$i7ul/15OW#,lka?K`/Ia<VoiVF,A^pBH`I&C!*975P'P23r=04%VIAOgFEeo.#2[h)R`DE+")59l4t-
%h#+5?Pj_7j),uKdO*_"p0?/`=7RjVu@n"U_J%!kdA#e`+:2,Dfp.C)nZf\ejHFV02b_%,IKZ%of<):R*UV%Zod`#(]<2N=].m<`/
%Bjr"Oa^m+P:ILO;W@hh,nQ*ml5t*CQ#pNmP$SllCO.dgB7:+(MhTk*A/UMH=k7WJ=2:O7_1n`E$KiZu^\n/kUVC)*f;HIfZ3Tgr@
%2,u559NO4ZoTt^?DXAOAM>%@=SDdelRu992@OCm19\6sjicnX?.t+"poF5.*dgs^V8$:go5$rSigF^5ea6iGRY`F)5>o*auOOMfm
%bP]ZA$3+3e'@.)Z*8EJUnY5t1E#Z2eaS%Dcf@ZTX9T`-VP7]%+BB#!iiE=oj6jlaf"%LDS<G+_FYV][ZV)2^A20s/%33fX=k2)ac
%^H\D?fCA,!Wq"B'4qk;]j.&tiGF?H[rt$*+-#?jBdPGN#a)Vc&$r"^,T>JU^df"+-bN]#jk/eHMBCZ7Q]H3dKVRV,6ihEAfq1On^
%N8r(_`qQMj#EiG#)+JT6T76OAm_e&!kejTd/&iS`16?:I:lluh?>p`$Tq%mZ.k5(1Y:_8i@JHV,V?tMpHe'eGpB#U(X2*"E6"WM]
%qS,<lZY\O;fUq"opJ7^F8_,7nljYg\+.prtdj*Xe-7qO#e<JEUE<6cMj`#6cJ]ptUdGS<;F9/9Ogt^$;?9Vt%&'r]"_kp8^I6$NZ
%Pg=R060A('?kgW.`ij>JHrmej;)44&Eb3M"!$cbhCtcS:jLn$\<1[7g%VC*`ZGQF?Fc.gOIEp^Bo#!%o(tWLG&+ss9&mMH(B03ko
%hr)[jeQ+r=VQ*8"*6]KX+Qs"`"!Y!N4Rql;?f4`KY'Q/7rsBj)r_($(a8\I0O#isj%-I7Ga@cT[r?9UqN`H*g'T]mPXcd2rH3Kf1
%X:9q_J$%XrK,s]6\XJ\[/oL=%M1TWL_8uCk?K"%n?K$B`0Au?m'gnYTs0o2PchH%Kb;Eh8l,3e(1T32rKN^9C=ou67)V%atfqSQs
%FSnNR4>jmKl*f:X,'cpU+B>BSZcGoO.*5kO/&'/DDfmG<cR/@25c0iTW$"#c:A)Z/2`(>V7?]hjlL='b]!r^\3M1DR?!)dSYY0>'
%qpip.3i@4M>DT$eU/r=OS+R5>/W89dcNf,,U$R;pV.SDBH)EF>PrJXW:s49g//AZn:f7f3p$B@(EeGKq$doq"r0FMlH`1A\TWPe!
%e-72!L(t6Y^][LTU6ZZp!SMh)OrPCM^'22NOtFeaaZ4RD`W>P)?C&b^H3GIBeuVcD:,Z/p:tJ6#d0o@ooOq:!i\Zo[TVS@p`lSpj
%k&;#Ie8-VB-7&<V=V^46gPZ<H$#3)o!>-&&i,eOq((cR!"^*6u'gArM$W3T%$A.0cQI-MC/8&?p<Pi6X^]8^;KcVt2cUlmLY>gHk
%>(HN<W69=6Jn#TnNk=;72R6VJ5V.W>g5IElYK*h$,6irX%K:)rU2/PLq&ai;$Mq_Wn4;+Ykbm*hKSu?(9ceIi&RF]iD+Sq@PTJHm
%qLG$ocTc[/iEfmAhkFsR$:NI<[uMh2,%-l5.flq@f!N(Fg3-+:Et"/d\A8KE"KXVZ$J=8T;6hrHkS.SP:p\9h--!fV"!>4&..T[:
%$A`@GM!4I:YXlTi.#',mSH*Xan.%AiW*KGS&l"/61$?tOe9VZ$aLPh\'$=N[L6Qt?M<Ph7&'hVn=OR\L6]0lN?8'Ae]8Bs<HI3\k
%P\t$)i.6ai<[2W:c,ICWfG`)GqM7kbn*&_5pV_\[$'9Ei&MhmEDr=-J.N:QfkO25Vk5g-#[mlVeNsO$>IoYg:bq+Es`^g)*U)9=Y
%f4"T(fh'mi*h#(N\E1NoqH]9b#)7Wh&H4HLhG2A2?HK:V*eNFi[c3(hVAsrSloQ8fl_?Y;WjJo5\KD4L%&p&n"e.J/Dmc[t>jjr!
%Ma\(tW0-OgM_nh<Ag)p6R2fJmH&<M38Y(i4X8H^'K#8N'],#.bE5P)V>XM$:K;C9U8\*:-[Uo-aKitKjiO5?Q6h6NL6MQJ.\sB/N
%BUX/FVF>B)Xf!n;9D:ju+s3Y>f:%SKfCDgqXG+c$(*'+nZO2Ku6%*ugjKYi*D_NT+dYW2^AQE:E6BmTs'_*k8(\"Be2.Ui/jf`nn
%N9-b3([uR2Gbq>:9c28aca(2bZ(CKE9^lec0aa;oXSgNo&"%lHGJbar+:dt=2:S@ccK9I0(k8h=,uO8TRiem]AL1XoCl<XdM:/g[
%`+\>7*AL1=6Uet*ZoP'<%`mnQ/#rl6_c*J$Q0Hrr4dn,U\<-M@CYZfu05>cHgnEr_3[K/_5@1#r/7'kV@_89Wf/ra%,f5]J3JeO6
%JXO[^,'!ZSJR/7K7S+7D&[#HoDWrEp4:/)>[]E`YQat<@9a*9AVG7Z?UKfD(=JN'dp/0Y-[f%`3b-2e$kVDL2_Tp>@RR1/9[\2J@
%X+26u_3O@,XkRIKBI;fPRUR+1<DEEaS$J;m%==27FH.A=%KZ]is4?6%Ian%m^B8fr/r't2E_>asf68Z"ma/Q>D69^\LV!5m**@q7
%XT]fZ\ci&>Ogqg>Y:^Hp&eluOmr57?kqU\!8E4HjBOM=]=<=EkX,o+=4,&c<AcZo@&FtlKg0LB.<Q@o60!#DiEWFb[Vu9Hd:$X]K
%B^X"cd9\n'i^;J<[_^`SVEg\h2.:W=)%foi,I@Y,Ot-reRZKF!C7K]/kRcEEGloT6ptZm1jG-GX/qRn#_STIG=\YR5[qCp*:f`A`
%h3:ut]6_jn_*3IXHACdnkmCAWdqF%ll:Ndr-D-*Za%nMc[hbFLZs*i-)QJYgT25ns@-edXa&IgKKlf@@V@8'7m(u7E-*ja`2Dp29
%J9lm2IHrm?)mfoeYnN-j%%rlO1Ccb6Xd-W^4>1VId'R"5,03<:#NSC0U]%L;"CXYtg47!YhL7Qol$N@rSB=G>,6E@[O7sYFW32n"
%GaSMrXS1:pfdTs&Dd(??eB95`(M#*!EaT&"0&.^Fef^mFMd45=9:%,*dY\+s&K,4\j;RQ/b.n*>UQqnU1a.*o23.X,e59@dI!l?U
%4jmr]"R79E$ejSRQQ;s87#0$I&u2O#N7-NZ73G14Lc@2=.F4AeU@bl?a[WbHlmmH8-s;"fKH]%Lb:9jQ[k\09MOX!HE7JX:%i%8n
%k-hGD>6iYNj:Lnoj0lK-hZR`AF8dVDR>=Un)8"_SZXnBGcn_d9S-6u7MZs%<qO\C`DWE-II]n0sc\T"68eW4A,^Ek`+eZ&bS]\Zd
%_oN6-MYsl0l^9c:)GotcLBr7Zp9'9,SQ\CCDN;s.Z!^@=e'C,!?S/lFM3T6b]CoY/V9n-C@L:k*JJgDCcGuJ3Ms&1+3L!^c=S8la
%s!fIhB^4[SWZ<)k'6KL.4*fSh?_Qhj=3Ge+^P6:B7Fa.G-\.&9pMs=uGM1K/?UE_S!^od2rt+MP'=)(JQLlGl=uM)uK%t>"FT&VG
%`!aZ=e[.>*_nL3jBef^p3dIjt=g-I;CYc;"5bfm*l4<uP?7S<4aE_[biQ]4#L0(:+11'(6=.)Pf$4Amh+?L??!L2EV+fs:gU*g&1
%11rRg5c33JVl5!2ckVE(e`%Q6ZZRj_lCe4*`MA1GV5m&5q6h9l4d[k$IfP?ePtT>.J8EfAEle5L8qR;i,-C$J;$@!GD!,l(:`R=5
%FE.A+or.o>f1C68QXBIaV>QJ_/L<6H;8iPtZ)DO*+o=[`8O1i</@T7MfdLuO!*mRkWp<P\/j(TcBrcMK"LWSLQSaWnF`7B`PiOQL
%8/[N4;C4fq77>U?1WlFO&"il*q\?+^pNFC/)9SC)!8)D]7CO])#fnnYn$.OJ+-f\i2_:rHCN8mZAp@lA?',uUT]G24+KI8cD9!F%
%K#8Hqgbj8IA0mE@nt(ahTpRl;<N97E$jUo?3UIo/Qp=_f=(;B\iR;!0m><Ab9ekl.e@UGAk@)_`[&EBELMk0UjS5sTEc#3\=A_d>
%;rkM]#--H!Cg0jMU)=?^(XV`bf`L>bZbPJ3C_D7p`#8"*H>KA[M2Ga0Aq6Vc_U;k1Hcu>l6iiC>`i)ri/We&6-e"BN7X^2+WHg?]
%"^"jD%]EUJ]@667VG[)IBg+UcelEQV&i@ToVW"(er+:ZmJ5Q+"m#lPZ8/2"]m&(h&\cK'QhJ:lM)9aMZN2scqL/pi:L<(2"VI_PN
%n:V9"T#=-PVpW1B@[Gi%D,\MTe1OT15`?k"j$b;$",DYpb37oCDgP'%?Kg=Z>tQLk`9I[pG/6WklEb>]eqf#.#L<E9P"p&J&c<!)
%*?BaQ#,--'TN-h>3;p`d"3@icE&jSH!82-[&KjeoTNMb@*8tm"^jW2-:5EtJ%lXUE/e9`3<22uc@g=Cg/'6]P;UVec9=IL">i!gn
%PiT\5<%nJZ%lh%K.#!\-0q&.DWSL8FT#N?)'/EJ%JT'iM?^qg(fht+SU_mJZ4TJV[)WqM?A(B+pj\@4a4@%))J\n2``1/SK0S][s
%"1_R=c#'#[h<b%aA?DLW)&P^>@&T-(DVJWV1(+uoBYQQ=GelS_^Me7Y@]Eh/XpAT*l1966MPD0#&%t8Lkal_]a)*"`iL,`K!ecr[
%LW-".*>-mjgR^lVZ+6dE4l,IIBBVBo`$*_6YpY0636`14F4Fn;<s.jk4t&Z`6PE7YnnpNZ,UT_q%Zn$p]"&%O.3?EL]prRpnYqbe
%3K"*R9C8+[4#A67@#PAF$$q.`A#e9S"6BA%ZK*ZEc7t;r9`__'W2DR'ODo(fp]]7UbUQ@jOT<2[@-M?HWQA0!3pE0,,IAX+\62`N
%D_Djh!(L;BQKjArR05t"8^BcG*kYb0@(E,^J\$#``!2eudAKpJ.=O/3@4A)@f=b'@b,e80McelWFg%f/iJpPQg5ACc5m-[oChQq5
%]9^fOEo7";;'/0^$"A5I+'.o"0t>$:3;6rt0aqhNHf%J"oLKu&Vq+j);%t/2)&JCK"q&%bXg.Da%NB\&N6,GG^4>/NFBTfEJKYA1
%)E.$"Nm0C,s1kM:[-_OM?XI(kHU=Dn"4Tb+XP:L#2d*d%"khVUL<m7%;4cNo>I$VOQ%<Z78O`l7,E,@rWmZM[NWAf2D<Tp.keXp/
%aN##iU(+\UP2O)r(qHfU,ZnS!RgNT^J:oKqlC88STTd%967RFPpJRLt`]MYX$1TRhj+2q>dK,Kmi3U5I8qY`VF+d+!7^nSRD7blM
%fn@)I@a)`&+C7b`(bhY,T&#:C&WsdET%`7?#GNcl#%T/l5cAW+jJ(rpNcRUb6!t8t(H(;g<T"pd:#WhIp'/S`aZPr9Oq"7Bo(Z6*
%WSp1uDLGhV`;qP3#,dr2](<F7Mu/A&$BPqNR128[['_%dZ2guTCtn0f);aWYfkZI"*.Hb?+t\4"4=QC66^Z2tK5^>]=:pTge)gl>
%%o5C9+H/n4b]Y&DAI)eMRTBr2oc`<&T_)4"6QjKA5W#ULIJ^UV-'Nl!a0<-6I2[O[:4*gB;\UsRLDF][5:"F)_,qn974nr3$bGOG
%.=9W'.9P98i\IlL*FcNe9LOV,N!TcG8]9o?ES3h`Oltg2A0#Us->YsfTl;[P4!_00au=J1R<H\X'pkup<`0#LAhkU+d8j,<;,dN"
%W0X\ubW(F=^8:U+FH*eI)q?@Yq;gq3DQA&5407Q:38@kfk8Fr:,,]F?kVS<`J4sQ4XClATUC[7W/n!dm.a_OjjRo3><)/C72N&/p
%Vkfq^cl/Z$:ddaY@TRZ_b5$m$AU@S<:mTL_#6Y8_U#k&"'ORrBl$Y'%f'rQMm7l#HTf6+/(@8F_f)S7)m*b.8rqVc[<C0Ktk@:ur
%(^45p5V<s?oh1h89+?:aPaUIJW#s08)igMTWgGf?DWLj\c+N%ko%B<AW<%\94T6$YGoL;ibET0?DCR)gift^E`WBpFE#]X\3KnVN
%1jcj=>^LUiU>NXW=C[l3oj+.8]5CK:JcH'8%\86A8!pal467km]dds[KbO<:YeKWU-IehGn(^>oF0@KSl$::l=aks&Ug!\3809lR
%b4Sb@A5o";!II.K7$W_ZnZ\n"?$g.S>;!iU+Wp#.?%rje4BI4DpZpEpIf)%KoZipXc_\&n'fLUXRH_#P5QKo1.th^Y[?)Ufk0QH7
%\s[;HQ'Ejs.h$)3U-ZJ_P_fQE>aq'T$]SEGil&S!pdhh<LFB&M<migBRDV_:#%mQ03E@ee\U`*CP4oHEm>"Q,4G);gcKOX(T@&/@
%=QE_YZ"W2B+u)D^'`uFckm<12J<-6DC[!?NZhOQR0n^7T4p^)#<pLhYoS0$#.:VLr.qpq4D2U@q)N7LZ@@%!%inGn6&B,b[0u*,n
%+fVqr.aK_Yj4?!ZoMQPQGKq]'?O(M^T.89YS\YQLq=`LL^"A2_f#4mb*Z-g!4FKL:cN,JVL=]9F!>=M9_?6Rh#/CX90QR1*Os2Hc
%A-QLaN_M*t+d+EMN;I[CJL746n"<`bMdGDl5lPgt?[Zhk'FA.,GnB5DC"U,#bT-#7$K@GA/1GVVi3:6(HjG-A1X&W^k:M<8N8Ttt
%E`Ca]ZC]4M1U6EjKe%RS9"a84.'X7Yp31<sh#e>l6-*`^5@'TM!BC?pC#^P*F0C<DckGEe(f;ZOA:ShB6'p8_QgAk?>8b-I/scbl
%"2A/AC$*aKW7K.SD75B?7dU[?OAOb1$ncNflo`%)eeU):?"s%e*c="M;\]m\Q<aW9Q3)Xi%&^\c>%B[rpml$>3%0M$?lM0MOQ]Q"
%$0m%HEblpqYq,W11pqVM,uX.7V8XB-V[`5nHNaXLGLWu&Znj\?Q]c]CR&]htk<4h;Y=1h<U;]gm2T&dG?S#qeb=kQ:;/)K9aIMQ"
%FgI+dJ43c'XC]PF#0>ISJ?\i)0J1JG3.ET5g9P1-7>Bqq9CJQr.7!<r5+^@`T/?K\r5AYj=UD%q_9]24>(__1Q)-XrD3l"KTXcSd
%i#:!=N/[jYh@R9D+/e2@ot$d)KKR[^NY[U+b;5+%(Iut^B?2)[)c>C\AZ,s'O>bF:ID0T_;pN>`l^PY0$#o,QH=NDa#c\itM/Hun
%hU:X"iu;+:VL*h:MaCS/V<r6[SJ"k'TB;(:XVjin=LRi7KO\IJ*"(qrC6(LFl#joK.j64=^gPE8G;#"a:UI(+"Ge85Girnd3r&T1
%6=B[b21SC7a<"D*(%sYNDeX%2YK@iP4):^"1pS=cKpMBc;W6me,(\L]X8.$(`GS:G^f^kdp84m#7#=GBO=Ne>nS'5;M4CP5>HKC3
%hPJ<HUcZuAaV]'Hq.7Kg#Qf6`d-+p6)lMSZ]L=3l:QMKJ:E#'-5hZV]<_bbQRBC*>$X<3gb7\YZ+.SPY$=VMAJFN?!6K0eJ31(0m
%X!nL&N\+BG8$#8G4\"OP^^kd*?7PT#bK30SiJc=],e*@^9^YN@8l7_Q'9_T"=K"^eW^\l[`:7I'KOier9C&-ta,1f!:8uYZH\]cT
%JVGReQc#%:2"%?GkWC!Bn1\'J^%5g:"4o[EoB*odl9WiQg0D,gH,&=h+>hj(%AU8qG(_d<ID+q&X.18_Xo4t'464SHoEVf4V6>Q4
%"AQ$hUp'"DMV-;>1pG\4&S8]s*MMg5Jr;mt.r9#K_9fXJ&35`[I4Jc[qj+se1UDl72gmH3DK/Zgd*[QB&-lO:oPMBS^BZo:!1Z\R
%<N&RRP>G@sEaH=ghpQDN=DO^E64KVG4ie@!;0i%!/8&i<!TiT+)[*pn`5k]2G0=a=/q43Jo<PIT\OV%5`D,bs4[^OtkFKDESutFe
%18j'g"h;n+6;A\Ld%'s&F-OIJUkEea-W+&M[\QVKKoY]A"'@lSVt%Qg+p0^S0Yl+#K2h6I%iN8.5q*g8R`@"e+fc$p,VPH+o:s1=
%(gU&$`hFi$q)d'=a$_&nR5CJ2IfFbl#<@;?Zs<I$UY1l__"!;R:+<SoL#a=jCC?0j4l*Ns/RNlW5p8#5[7S!09:IWilNlB^ZsE7J
%YFq]-l5:)tXbnuPeDXm0o$<c;^FQT2GinXc81P#jGm^==*.b@+MW6u1d!a-]WIue=@EL_2Y%-e=9Eh'Qe[?sp<)CV0R00AS"$?t\
%=h#/t8'*&97\.^]@!LEYG-3aY[<0Vac&leCe<Naj%3$3t9V2/f9g,+^/l"E?*:_!;=8g4c(kH+_eom74r-[A3>'@L+0.7(;:TN-l
%;qd(8?$U.\HJM<o2oX'MOs'J?oI\gRFUNT>OY[+,MC)GR"K'1MT9B=OoGj1/QW2:,b6<g@$Uhi<6LL^smlNe">unhYNgjto0@k4'
%a0?%cQa=J%?+s7KcdMU>2U@+02E8LZ]9dNmG!pX::n$?Wf*)qF=#i<Y@Wm0&7j>Tp4AhP<S9S3bb7MVrkIV62j3IT).`DWplrS(r
%gbkb@i7;r2;jj@DnSPD!;C9k>Ke/iB/i]O!Ce>M[=X'RH\4)=N#hcH`3L#FHo$qj6WUpQ<m(s6a1X(NBQVO@#P#R-I]p/)EKi)DA
%4<`;t959pmn2TcAYXg)`Sli`'-N6.<`4sA(bghenL,0p/<'Q$s!fpSuD/O3_J?CuR1(FWE^3p:p>Z*thfo;h#5l<69H$3<]U"f:K
%2e*U3=Tj_^o+F(H3,geC`[2,2;@sCAqQ+/2i0aY&em8Ol;E!$PNk$><Q;oP/a*Z;/3L#3<ZV?`UCrn8d[A/]Z\?8Kf0ajlkfKVtI
%/klXMNPa&uPEq^piPUbT&@DQ6s%JQhoVtpES@&#)!TsfT[peLJLbk<DH^c`\AJF\s.U#cPd'RZ4kU1Cab>bSB+er=]#0">ih#4X'
%S<]A)Y$B6@^4G\QKo4%HKE<`_JcINW,,,0-A1IE@X)%_^p>4]WG1T2jmCAH^KTMK,>)Q,r20'dD*\3:$:pY();2.C&\AG+4aWVkp
%J6ZK;l<BU*!fc4,Wjj#&b(5M_7Mnh/_kiPDaHKmY"I+UtWm#)k)W[N%#YgY4n<p]IJQKgDE9t=X-s\8Z1'$aZ+@*V@(G4&-_7%U^
%!)t^^.._X44e439#NV.iNa;)Ue>kF*?]`0YoRp6Ca;jf%/k&uVQ/g2O9X6erL,Q[_cJQNHL]QYAj5R0W(eHAEc(MEONnFr:=VV9b
%.E_^*2!4\+9@c<M*Pgf3?c?hOQZk$<ALame)Ig'Ukto?1<ocf$..cW)+lh0cJlRdkG<V42%\p.CB'*^U\-IH.b)'B;)NVsmddWSD
%:0M5G;,\(j-2L[iJ8*nFINR^9.6A2#V,e=A-<?1Z`67D0:(Vud.,65`>'#hjE&A!kl7u'M<U.i=^&`i#71!SL^RF*c^61V<Y2&A:
%\OECT-r+-Z>%Dq2T4cj.LOPr_;U1A0E"mlBC5-855I62qfsWEH7o[N;U_2u<;R'/*?"U]@9q=EPZpl@C.KPZu,T<VXSHXha&'@\3
%?a`S0;8nYi_CBOH5duCA7#A`3arB++"(rAG&adfn5oQse4-g&Nhb8X:IE:Kpnj:Hk.CA^k6'NLi'lqTan4Bo'GS9KhQ1%B-lM-=a
%_i4Bo.]qrN9/qG?>o?p"noI*:QcC-K?Lu07Ael&m[69-0NL:N+&8+$uSH@TAAo(kS2@e`u'l:J!V)?EM<2SEHPei.(C9R&)4;-='
%%CBD9`QRppVQGlGIHpP;jdKAc&U=MEF/-e4:SuCAR(;JsUtZr&gTjrn9hJSdNiUAAA.7BA<\aE*IhY="'ha;i/;M[?!C^>UPe4Ck
%;0O<Rh$!CnNpt]]h-d)]ZLuZ_)+T3:R<Mo9hdt7X,u'KpJIu+!Mm<Z3aZS`\"`]J&DV,TghlPhEpk?gHb3tiHI&b*W#(U_j'tA_#
%dT4Fa4(>T:+Y<eXHbkrIj9`>d4LXu0BMKt"H_><[REHj^d[L^!S:DdaE^YLc*A^Gi?iae13\nN^&OL78Aa@tUK.\O.^;O5a0H+Ij
%Kk]'ck(mZM2IM-&WGGRr)OW\@,+0L4+3NLi,+kRrPIulU'>r`D/q:jKbcus,,)m87=<L*>:p;l9B)27RV\4_s;\h1HbSEb0Al>&C
%aFb=CV!PFd@lj[A@S;<l+BKH".V(6O0&;acD.CI@%VRl?.]Hhu;,X)CfBrtaM)A1YSLC$%P$b3A:s;p*)2_%W$/&lkd&_22g<dH2
%U4dORR+&9h#SY!b:)%Vj!\rnHS58E2#"%lA%b"S_nr!qjo=1q$2P^XR\d:A=2"6YO^BIL]S_T!gguY:JG5YmagO*F1/>%2V/i3+V
%QLhJeSJKC"^uplD<,/;kZo5>]3-7'K7*_Yi=MeHp&"5L)>j]G.KRcasMm`o'_-gXC2]]m_BoaPG;mUYNPtSZQr"bFc8V>35bpCt$
%ZdMjj4=s=L<,7Q^9DO<#oSV'm0HRS+?[H*)"UbWrc.j#g4kCDiIZ+k=B$B-j@uu]\bGcS`]>*_b1S"Q:Q`Vdo'e;8,jp?l3#Z)I_
%[h\?DG5dCG#Q>0HH>&K/!r`aM,-!=W:`Pj:8",sa4AW??<.tY"*1n]e\SPE)LB?b^>'a8G'VW+:fcjj.Tf6.FDLaK$$?h;OmJu4.
%=X'^5pZ2JRLWg++d1U:ORF:5DTKu)hC_F8Hg3$LhH'2V4&s?m[[T*bbX=1Ag4Mo/G?3G;,]j>TP2Lg!^$N5<Hb("Pk(VYA2*>-^:
%dA%d=8t;UVUI=2c/S^DFJM:30;`@ptg@'r6l`>*!WX-.7pI5F[<A#_(hn)DNmojCp#6V>PJX_Mub/==11Eil)Y\/jZ^IWKED3Q`h
%[K`'&Tph;jZU)K!d^D:PjRu<N)a&,C+if[elF;E\#e>I;c:QVGbV#lfE?T-F[Ul,'8-s]t&.J^[U^p`[ot9Zg'j"<V*Qt98H(Zd!
%^FW3Zf7DLCok@Xc&>W.QOOmK/,EsSW/)b=I2+%#'ZrKT("L`/Fr8H`cSGZ2l<"G9!p8prgZ4QC4CZh=`3%aO'W31CLq3/[^*Kdf5
%mOT*XNQ?$)2Iu3ekf0A0jEN)S<SJXAVLcaM.OFR/+Z.4WGh6h3"b7n6_^%+tDo.A8,YEiT=B3!jL7)8+6`UiS80SNW'UqWmn-%8G
%5RWE;JhJ9-f"/>42H<EYahlZCs.iqi6YA*6fcHeZr/kp[m@QJ3rHk'EL_#<a)tH_mIXW]/_9:n]%Cml<Jg-HP!/teGl4<I%8DAZQ
%EJ07p!PTUd.l/re)-e,XGU#/!*Peh+Roa.>2_F5SV6Oun8R0@B[j[W,1\+^X.hr6.]6FZKb0@;7KVl[.!i'-lin`B):=C(5#[!Kl
%D5r&Sl0_0q*qteUaT1(_A+DZ(3@9J<#afr"I_N2Kr3!Io^2o]=%/CqoIN(?djGIn'\tDKLb8&!Pk_7a7*[2-7Y_iUjWesNg*=7@&
%=6,]5S$Oe"4bL52VEhE3n8QJ>TaZr($GC!C1P6p-<L)hAAtDM?aIDZEa2-bU:GE`c]BQ2k=n:S2[c+D=43\^_9=h'"@Z@44V\C4C
%rFnYi2Hs+oNt1h.YXH'dK'#0uA[1^VEK-ZIp#UD*[:+XLlV&kqTmArAE7i<h']7jT0Q0$r2%91NI`SMHVX8hQ#gL`17Roo8?CBQq
%H9([.8-`M+fJ=Hb&ZZ[J-1c'1[bC&<bjgA`MY.#56O)M@:H(^J+Hl^=c[:`>$YKkL3G#&a+K=GPYA;.M>D`>d:`NglgJe&!=P5lk
%L;HT+2'F_.6^*8M_F=S0Q!ZMO%Bi73]updD([))!_B/BF/>d)[es"@2=K;^=CLfeeZihNIHuW*5(*gpS7"1L8`-[fKY_*\qCG]c4
%a)JLp'Taj9Hb+jjUr@""0p!?4'!(T!`&t*_)#SOBgTYN%Xt%pF>T>7eB0_UJP8"]kPq-BB6GaA6?*-9<@1f6HAsc%uU&=b4rYCt8
%8.)_cJ?Ku:/jFZC,Uu?-OO(Bd@R<J*JC*g\>E&i"b_JAfD"GWH)SX]9D40I]&((88GJP(b`sbRcIt2PT-F67(4=(%q)j-Lm*["0e
%7'W2Y:hFD8=4`9/0"#3-fTub7Q_@;B>">7R_`Ro-+tGQGV>BsueH&>%H2pmA?0\e<aL;GS_^;A!`49GHJL2%R/*!Tj=953II:?HU
%'mfeka[:tZIZrp2?"f_P\co[$(+$^hIK!Mh*BkESKrMZiI98b#>`U\D(:p^q<-6UUW`P9c[j_7h-P4L2DtZal$/9'[:I9tgkMR&e
%@Il7M*%F3SbQJj>VTFd8D5UB"VjuKQLb0>M5l((dVN4F!-R1+\5Hp<I3&iY\7j?P#G%@NjP#P>J5o9\J=l9#f+<b:`map^p[pPI@
%_CF/D$b@2NaRcj:/6I9"c;/")G97Jh:S'n7OaGUHC27idd-WEj=dJ!"LB\S5R2VC/lpWZXU+,]">l2Kf?a<\P;2diA,j&-J6o,-4
%S$&\ABgGohEL,t?M9biTcRIP]h+Rr^s%[QG_^lDqGOns-bfOO5HFkXWe4gg1&]u;nk%*FX3LorRPoZocM!-)1.k@:H,/2C?1HrS8
%R7L)RpdfH]`'[8`eBka'e@$eS-./c`h!"TNA:uhc%p+BZKXC!.E_<5%&E=A3-iRd-?e]d!MITTJLK*@cOu_2%?(Bl6(L2="iX74B
%"G0H,?gsIXUC\]g/Z8]](JKmcXun1kPU3U!a,40H*r'j\^Q/]aS^)u^,!>%D:,`Z\,5inTOPsC/2!$RT\O0"%d\"\-T5]5iEq/Xm
%GSoDFPKXQX"PQ?6G%t6!N5[AHO%H2_B=<UkK;j\nRX(rfgC=n`G#ka:P&V$'@Ng<"2#iTf"lt(El!I:kaWqVT.Og5mSktOk*1:h@
%f#FmM!:X;XmfXHu.O5tr8H73H)?$@Yjr2H087F,I]2p4:J-7Q.h^Vh[;)/Da)53@%$<Y4-8$j0LmfT9Fi^/t5et>f*dT'9G,H3M\
%W+f46FU`Ute/M`IKi.E$AeVZL$Rl,0!p!%%<^[IDXJ7eD-Z1tLe->T%J*1d1,+Ehl)$`)r]Zh8IR<lrs^7oAjg!O*\rp2\C"htqp
%Im0lj]E0W2cNQ7W$L0NM7:4-Y_DW-c@&>m%#_7sf'#@O"L:"ba6beIVOAVFr.<\Q5c1L]29W\\1gl(SGkGj7\;ZU$k3S]kkQ+q[G
%.+^!R#8U5:,qjcW:f`#FP)fYaJV[(5XUA[&1B_u1AV)3iU?&)ZgQ"EcQ`'%H)@kY*gN!.QOB<!U$cW#eI2W9XMDD5;<K8\K,QI>3
%Qf"uNaS3#j15khS-`8PDX@d-R#psSr8m/*^OqC?:p(C93P60GI,a'h(_%n.=CI#&`^)A/e79:B\^RJZAiNCGGfX][fG0VZie1SK?
%/S:6PBn(kV&rUO&5;r7E,q+t>Uaa.jYT'R_A-JMS[[O(oD/Q+SqnO,iip/>SnYSDJm;HlAJXf+5/3%cK8`u!-WiTFVh@YkV#uAk^
%ckt&rA>R=6:!NB1/A@e4iTXT1B(^t4Z8hH:Nff)0J:1C*=k(q3SWss:FA*A!ELOX_NBu8DXLr#6:<ut#=Z3m"lFWK;.uW2"mIu0Y
%MUcf_Ws7N?V@2Ec$Rh"CT6Wl.\;k;TgL&5=D0O.2H]#PXhj(K`fa`1ROFQQ.M)n2i=!iiJ#WfLa77@8W8`4dsoVHW9P3eZ:?%XCA
%TZ\c;0m/=<+L5?SNPVJhf=dnr(AH0>c_@_HHT3XA*LC3[\n4UDhpcM,UtP=e\QrQ_\[&;m/YRqD%A?<`Dc,7[Ztf5%NDcR_-.ZK1
%+g8&<g<535@nf,,]X%(FoCmAG]O0W"IHMch15LtkUC9D:$W:Ldk6)<uaafTnJ3asX8h<\11%]/T_mt$2%%8ErNQp_+]Aa-"rK:&f
%XW38]WmYCJ:je*3`8j\4CoV@ll+P3,grK\C:4BM9;`8nbe!RgH+\,Yt+Y3fL_8m_$1*(HY'sU@=C3tC=gN>arh8`U_qO&hIQK"=F
%Q?$P5fG6lSoT;%uF,0f1^;*WO*Pt^Hj+6/V?Y*;L3b'X$_4J=Q2(=]N6)B4SaZQ0(b(]13'*$;Z$:(Uk/DF3p0@VU,Gm:8]bbE<b
%69:SYJ\+<70c&fX8VIMMV2g/K.,A&`alL:@mO8@,m-,kcRV&2cbSQ']l@><VFr+Lu3TE5'QHG8Z!..%0q7%[OlR+;'a?[it<_?=q
%!%Jo@G7!Qs!'p:dp_e+>=SA1fg`cn:NJT^ISR0D6fG]gK5-Em8e]L>G$:<-`04mIBXOBjo<Pe=u67=F@;KcsUp"NS1,iDYO&ul$2
%g;R!/PNBP3(4Q]^jY^L$A(IE=5(qY);*mV[FMOK3fk7E7A4A[H(>ug%dQP6TO9]mMGN_A(&B00uq!o2LNLLU,d@h2%V0#/?,Kk\\
%7<?0/6=*)YM?l/plA$ekpe\'.>YK)o7n(J$,QRLYN]LlPI?HBi[?Q&q/5iu+D9AkMo5/!<00s!:Jq>%ZJ;E3fLtaVdirO3)a!kIW
%@Y^N6?<=BF4U^3,9*."[g"!s4/9-IM?_JROkmkc[WH+=JoWuZ9ZZsHB/g[PX@TZ$s9[6jD*&Y\Ag%#K,k2PtSdseHulC^`mP).>M
%d'SeDBeXiiV0.u%et8\ZN`NT5'^(f(oW(M"0<S)\Ef$_=@jl(N,U`%l"#,s^8JSdq4c8PJ=]dM_(tb2GXF9;FUi5G?-t8&QYl#)<
%ck<O%k`;OcmU,ihh/_2+'oO2s'dYgKeb:>=gdl=Pqsg+<-4Z=NIau.[%Z?sA`#FHbjr,J\F%cn^2Bi=[9+&luVWm`/JmsW0G[N<3
%C-gjA%><RqliUf4Ip")SgG<4RQMWg\/:A?lks,cQ5U7(fQ];kR:L7J2UC]<$4+Oo@\NA[f%W`H/G";7pPG2$Z3lA:q,0pY\YVrA2
%@_%8`3e`We)@PCUiIY,V.pL)Q^@3OQ:8*WG6O/OA6\-`-Yn/=Yr9t)l]=b^Y/9:u?5SO^FLH.:R'3o-knX59W6>$.\:AcZ;pO3EJ
%Sm6O'83tPfRV^+K`XM(?[UX"=X::iM;9Q@re.mt&O9&La9=[^H9oDR]lg"GmRSu)6!')N%^b[4+4^'[VT2C4F@K+i"[%0MKFGV)X
%D)5R5)#IFZH68+]k,ab3.(a_obb_iIQ%D5/$TXr);0<WCF@G,Q6@XZ!2$-Ye/h;_OG6K5C<:P?8RF`EN#H7)1%V0n7cZQin.FF5^
%!j2utiOa!+Ya6@'6@F?F-3@*p'W^Mt,26SA,*O7q?9gBj`0i^H@$pc1d/h?dZXI%<Wo]aCFZge*[Aj/.[e#-LJ=g$.*'dKOJ@J/Y
%>([m7,9S_MV-:9-69rL0$dC!UFU#*s\C]BPF-D%>cT$,#HLkPS"R'$]ak:4f'=?%iArk8j@lLc&Rr;Nm]DoN1rPXNglNubdMVciR
%1YWXrn;\8mGcdicpMB(GOb5DI@1&R%>XCn(d]VDdS."V"RuL$6(iV38+jeVAUYE97&Vuq?%u)#rED3<?0FikgQ_jeZ66a&F0e$[r
%6RtN%V7.@u.i6i=-&'m3;VsDi@#FSs.I!gSWiD_o78Q_,'01Y-GtU>/l?#I2S;iIm13KYo/l'<Y'>b;GdhV(g6ts_AXl:I8N+mrW
%_fg\uh9a"R<N5KcTjm;C_,GZ7D3pq6*2U0#jq]9bf0/oc7,8"A":B@'T@!uqa*rYZl^Mur*:hj!AOTfpNTCGk+b]4s-k_eX9/J&]
%hb,5d@a7jh0%?;_YnZLf5S:NU/bE4uTbC:+Ar$Fb4`Xge;g$t&3N,P)ScHhU9kNS:i$h\SfI'f3[-Y4^Ht-8,;Lg0@dQg["0I.9@
%+NnU=g;k6^1[`&>PC`q'!I+"74U&kg6kQA09#C?77Bf=!$6Bcd3:<Z0&8bX6mg=[Taf,^&pMGOZn*;$PSem@0:QGh0Tf3?]&CN[Q
%=?c.fEWoj.:VplkJ:5PEUpCi0qb=c)[N*VZ_["NGZb+gH!6kk]DJR90PScs^N"E&2Cmq>GGR'dY+J7d/7ZQfrE%eO:q!p#Rd+0/M
%_T%@!gU_$''ut;%b2g:;&J2f3QLm$^4.q^[ptN2A<3^S]g-/9M>Hs_IF<51:bd1a4)&\hRPd$IQl,M(l;(Qf=]89>p5:u))CFD88
%OpAkR--/kr[/nD[0p;Xi;.1cY2=IG.4<Ss+@#dbcU+Td,b1D[+!p-!^8?3U,il[;I/'EZk?TT%j)B(_MAP0`DM'?ujL2=:JaRRid
%N'gou).Wl1YBg?om"-o=+H*K^CSSop4%it<h5p.S]9BWXO.]m8D3=_'O1AZUPmrTZKLWZ%0"OM=jLE!UnRu;%_6IPZ-Q$mGa@=r9
%RnJPq8ZU!X_Nhc0,/)a7^KcBtI:EF$ObU[h!X?>q<UoWG</'B:F8AAcm1/M>4lDJ=XU1DaM.M.&rOq8D#.lL!ENC$+c=#e$@\M2t
%f@I*Jk;c!%o$'IJ-Kbg;Ng3+fABZqfJ@TAVbOR)#=&U6Ifs*ueBnY(]Gafl^\-M7'I^k:BQk.46QH4rN6'7*.f;:Qo7TE)IUP"hn
%7/Cba$M5%O6Hl+N3mi@0Xh3d8#RPa[Q^*Ap0u`/r__S'EY=Y0(ie$aWE7qFX=^IeZP(F#Wa^$YLn8p5,B"llS2]KYrd`4[F3SJ4j
%_LdMboZ.b7-VrXN#Ast0d-1rn6-Tb6),O!\7O)qHQr9;q0gRc5@3-i*6o7R0g;P,/TnZbYLB5B(0X4n1U&77g4^'j*K=I[9['?jc
%)QA,I*'c8nNCbJ28O>/>)<BC(-WURDL"t6jK,f5ZqB3nn*P"T-3WQaUlpSoLW4H7c+m;\"`c/SPR\9i8nC'fhA>A#9j^)Qa#S2(#
%DeO;XnGoU7Hul^b6O1I>rNVk<o6RUrI7tF:0fSu25oA"$haXY"BelZ)2nVUQQ5T%oMHHXPUmUPLVJoIPajlhHQOukC[pS4A.RM'"
%f;\p1m6iYXDXrE&5U1dl(Bd-nJX&5DgORl57@0Y`WF:2[3F.3Gn%+=trN`;R`[4F-e7t[_mBdKd^R4@4gL/O%`TmpXCqlh#.H'21
%92@=;mL?-#4ZpXP.>j@3E\-g,LFSb7/ROO8U"N:d=UfS'7KQ%=O'p8s8U;X^[!JXR,-P;XFR1'UX36f]B-l&*3kEf6as#ZR&*%aD
%0gO5u-%qD98/\$fA=5#f<aY@,ma<EP-h8SEAjRM;Aq4^a,WaO^\Yi,cNGW:t[aTCWbHIdargd&VDK@.lAViHq2tu>YWI-+4?]3dc
%6]>5OrE!bsF8<NE>Y=5b`,cchSW@*31)Pg>k8jMsiot('#PP$-^npMffO#%VB1+EnW!.kOc;;;2.EN$96gk*h5ok=A1t2^0A4uc^
%e^d,JWrpEQY"krC5drnd=C'((UDAnC-,dADqW>K"D#O_,@C%E<BLX7`-KM)BYEYi?gt<I]ZT,3:s"GlSgIu&"UEM(;GH`"-c+@qi
%"Vii>W>nZ="_KsC0(lHZmAb#0O((mI3gVf,7dr35$Nff:MEClJKlcWiluITS+4B'k!HF0Q28bCufNbIu97>QkFD,JdbdPBP-tn1L
%46D.WC^ql=_KZ[gKm<)_StC!5\[ts01;ajb`$Gau(Z2WQ3f,TS*"E6c[ih?-r0o]i_[uXEZEj7J'WL04C';t/g[K2j5fjC=X_G`T
%-,(O?\fO[H3Z;"g_8!U]3#5USi]t8R"jk\ngf:=XKf3f%25/3l8G7$`jhP8.b)Y@@obUi$CZ>0$Rrr")..!46#8WL?#VEBrbq#Ye
%@ssLGjlekH#d=ghad:9Vd*@288dZV8nS2-]Y&#I1915ZNKbjUDTkm_6<_&Bg2Lr)rpTTZMLAO`')9:pnnj^Te]R2gZY9XKL)VC0^
%e&?.iq`92Ybe/\tF%$pBBu>)Z;KDX-D&AXMJ.h5*U2,c2%^e,R%cVo'R9Y<3B<b[ZPpGo%FIK%,E&'S#$b"edGU5t;Q40^&W6+r?
%,u<?6dl,uT7tR4Lc`11YVO1[fPt!dt^73/2F_(PM*?*ice0HZ<`2kV3/=,Bd];9c3WiaKRH9!]U_a7?8!:so.fYs0c('GfhNNT]W
%U;]tR/>67s;!423\#NXDM*0Kda+0X.S?u&^VI+e8m0TnA=GMDhb9IuV/7t*DG.JR2ku%mZ]Q2eiGV\Wj\&\j;XU;U*PED>=*49Cg
%8';C+XOnf?iQ$M["gtR,NMn>:U?J:QTF6iQ*!''[!)51QlK/C].*p"7e`R+)!])f/8]f4:Se<Qr>q?2<7OdNaWU+"q7+@.cOa*Ue
%RK@]aGifoNBKRF)*OlMM7'4"0d:L[a0[D5]#(*^-3u0H#''#ES.D15lXBceeDX.uSCeKJ)+3eAI=Q6i\_VHO/+@6ZRm#h2J'S.l'
%/LI_.^?J4(%`h-X4Ztihn_uH&#K[D9&Pbc@YNB/7qOLr6(RMooX7Ea=2]JbO#8HfmGA4Sp-^mn("0e^J3(cb7dFsPLFsP&X-s2p8
%::0+MGf%$cAkHfUrosjhO.E+5^Qms8Z;P^aAsIrsACQEVYlm>/,0+uT*q;l`^%<u3pRNjJpGLUpPIT%J<^kYnKW.`&dT(s\9id*8
%cu#J09?+c%MlPk,X"MJNRAg]n_=-Zg<5Z:`)F\@1MoO>&-*"lffO].+[*&g^Q;ALc=>fZZbmc<mCYMAO"TZ[oi[;t7ijrj9Zmgsl
%20W/UUfm^)GIOk9<^HR!^3%iarr],nT&B"D*+JneHFdU133b9,No?eP2&u:W3/h4t+$G+3`;iKq2&roN>>+bFiT'n6$6RG+eY+Eo
%'q64QJ4sZB0/oFLTlJuP9g+<G>%@`[]Np%mO,k29m>*b^XdXOCh:>!pc%cea2G.tEaOK)=e(_F,]&jl:?mOKSBX:amJ$Zd?OVXNH
%-2?"h3fP!e^[$Ie`TfbIMhPVns2ap"etRkrk_^Y3V/15MLRhm^8r($VP1ZK;[;ARiF:OPKD!C5@X*oEP^Vu@Eg(O63kr3TZ@h@s/
%4I;XQF,S]AA$/B60C773@jtT$>J#`Mc8d@]i:oPK8V&\;j'qC,c;R5e7$Z*S4>2X%-LJ)kOE?&C[mfI(UJMjpDaN7pTb=hK4#=2n
%j3oS#Y(ePb"c3f5Z=gV7?@jerm-=J=(>a4>X1*ng>e:ik4t5VL-ss.C<8p?lEMMs?/$3KOMt_MlD\8Z8YJLQ_>M-M-*nM*[qMGk/
%dVQdc\k,hV\h636h/sNoFVeYr.b_Jj7BWseln2.GCFAWX3N!gbiF#.-2EP\*`9)n+4P-_A!-Lq5dS*TT$FMq,kVNHECsO^pbpnb%
%(rQ1?lT"lbPN+="<C,3+ZJ/fiQti%&$"&'lp-!X[Q2B06W)^=2.'VWa)\"'np1[:"Ea1bJA7;So#(#qRaJ(oO>9.ujP>Ot;pL&D=
%>`NR<f2g-@,fVg#3nqKp6hGNu%&^e*:M:6M\L@aLL<e[B^l,$G8H)6o@Zq!L;L]G#D\eGm"4)ekO=TTori0`HRQ:)'jD#86<ZmHo
%l$EXtPTXbN#?H,A9!5S&VVo`UA,*Gio-Z^K-5E\[h%d!'Z;=W([b)b#;k!3kU<Q308:'3(mh!V+_YdfbGM%5R8@_a9^Mh-!(>G;>
%1s*[_m1<Ch$BUd#pjt>r2"Ir].l!]%2/;Y8(mB0;f--T3q)i90(Z]5Id'-fJHTj6SSoZ$<ic[H1aQ;2QSnE1j(QJeX`I4cne"T=6
%RIfZ1W%7^KYQf[P\'=m=MMC#rF[e_&Phd8J[QUlJ\U1qO*-fA'CQ_qXChbh$D.)?_2?CSd-%$$i?qKnpCQ5Yma_&-d'T(HNh-<9>
%`*/2@0GA*0l.C)s8Z+=aEg^#[8Q1h#?EsQWg?R_V&R.<d1'`I@OILh,iu._@+OaaDiPG2#,f6r.I*"DoKq1bjY`9.?P#^TiEd;'+
%i5;@)Ee3a;=@G^4bfkeeg*ndL)d7[50*.</GuM.r-*qZN\-U@pr/Fd:VFP^N/H$<RUF.K69,("W+H>2!ONEt0BQ#iQS&/o?*bQ['
%pSn;*,QUs%G]Uad,H-0oaU52M=,eI99.pl45?q4>`:*!NG`O=E#b\^PWJ/4'pcN\SZDR@QEk9@'hRrK$=?,T+7#N?09++PU7%.R9
%QJ5.^d3#>D@nMY$DY&!*Ola/7ddNTjbbab&aYIAjg'K?(M]O6A$BI5LjW`":Lf+FQb#NXZES[30A>%6S>`*NYN8>-O<K55S[Gl,=
%J`B](ldR6$r.e*if"b]o3P0WO[o]]#jS<jfqmo@[n[Y4j@@C%k"KJ=1DQ)g.?)8le<irdmB8"IPpY+\G<lh?3qmXhG@5TJm2.'F+
%`=*k<r&&7S!\q/F3E^rPY>KL8n\+6db6V`nE=)cY'@)3&N\%NZap6Xh<Y+eWnoE4.Xu_*SF/A&eCN=tAc_qc@^"#8UX5jo`Y!1]]
%Om2D=2!k$*q$58Bn.B_a1..doTA3J:"d7>mVt!O?g[!R8oOoZX'8o1sUs8PB-&co"b;dO7#[AP2FTog%%5Df]*Y=D:A1[gMGC&du
%MD.]Ilb:&(<JCQUKV;9G)!'A.`7j1V<VM[7<?1]l!]8VS'N:OU:u7015<$LZ;EBK#D),RXk#\r9##i%<So2hu]&'gq7e5i-ij;e/
%,oPUOJeWGt/R`cQ7X_"LA,UDVFV"Q%3f+6nR>F0a,pGggC]SD$cs_uMN!Ze1>4-S!AgI0d.if`8gj[jV*)<#pEK;0`Sa^H$IUX+r
%iIdE0krX<L-+-_#I8-UF-XJT;rbEVUj=C6&$0eC:h\)Lp+(oHi#ULW.N:QU48.'E:k@?p.#\Vl/9kS-S;@8Reg"fXV4Ii_^]nB--
%=af)TMRt9=5X9q4DCK\pPkpJH3ie-jcrNahP55Og>$qu*$u7Jhh30%n"@>\Rp'LCV(PGmZLB<)8Xoj8a-^c2.:?FWN)0@S_OiaaO
%+>4.QL'"q4?5V-,jg;(aKO,ua&R>D[bFr:cH^<qq1,6p`?DLj)<f+SK88=[D5c@ir]khSQ3'0B2lb84u)J:$mEj12TK.1LL=,HgK
%)Etdj77ETDo%[K+1Sf,*.ETK588[7,ag<@i==?gZOfQ;JqWnh<QE\;5GBkOa]ND0%3pgLn$<?7YeE$p.%lETEe-e&GJtrr13a*])
%pLO]EG=<^kAYi@]dQa7YU!d]IB<0`ioE*_-=XZ.lj9`iF'ue"U:'UP3A3)uXPooIXH\P-o3q*di<NiYXAW24,AbAdH;_H1ZqRhbq
%2F<t:#@W%(p(eefb9b9lk'N!J6a:uSiR+_=/:#jj57EhH,pr\SS\q_u4gV,RV2=U8Z\<t$cAh'B,FKbU[R*nk3O=f#/>6W*qNR_M
%1mQ]^S@!+U+6@B+IGekdZS(.Wr-7l!Pml&Km:fP7`A18)Pf3\:EG:DG"I@1lRjb;AQ>*<bWDLs1c3P:b$=E6!O%iXt7PEmaK^^b;
%1Eeb)ENrF9?(HM'dQ'p2QCZ8<"c?YWn_;GD,@N_%;=#IPjXBGUnN7%PDD*7EhO=fR*&rk^YS=P\GES:,eqgVjqSR*O;L8MB=R.Sh
%c!%r$#k\n*%sXi8q=AXK&VoD\l-=[njD3B1+-ms:h7hYNh=nV1rIFY(p1o&$hoFJXpsW#K;/a1$`=)\]+!XYiZHU5tTbcSm0lmXR
%#5\kUR+aONDHfgaQ$/G*;/EmOKn9ng;R`q7aTu<IYtLni^IiKbl$#EQo3=p--&4-db>U"K<0I<Q>Z-gX`hkgXK8sJ*89-o4#h`(f
%7s@nBW4<+UVdYBa-!Pc:2[H8H'N39$\KG$U$N@_Jep<>idHNiehgH2BmFKu9A9gQJ@0emlaR:0e>C`g$+OX3DE=>3W6eC2Zc';<\
%42T=TX48M;rFJAZhN!fg)6T;SacpXoC9eA2S!=KQ5cWWU7nZ3-&OZISIX",ueNVg^nb-,"V+X(#\+<$LKE^-W(@hk*KUUpa7pA@K
%Pfrt3`t&90bC.(mj6b<C=/Q1JL#j.9KJjPd#5S[H;grG,3Lr+RM"9u+S]JOrVjfm,50EWlaGc;mP%@hhLU@eLSH(e0<Mus4B?8-!
%jcsBVn:l=q:Nq3!H&D(TMP43,AU;4/p7Y!OZI4^R&<heBNHa--g`7PWIJhI=ICV$*ICsusn*1T[\0>&XH`mtY<`9Hlc`7m61.P0X
%nd=o/)DANrWV[a'F(NL>?UNRX0OK=^<B5,,mY($*T'1X=\D6TmTAK>4[MQ[@@s!iOnM-Duruoks>*RJlM\Hk\@Zj2@4Y'dc(@Yid
%IG2_JF)@S1BnQ]&FD-aNe!?@/mF\OQRK))[`J"S^C!_+?p_g1<MS;T#IZ;8a*k(`dLa,XM_Gm]r(lQdBM3c@AY;=ln868N*`Qu&0
%rV8f9*6KhMgGVQOJL^?p[/.M!G\<!e6;kApK_.CapI<V3g8?%HolWV!<mc)mpg*S</"O5>*F)CGb_iVn#^AX=P19mQ*6=:>AdV@R
%6&LdG6X]7.Soa>WR7>WTAJd[8,K8bAaKU\q^.1d/_!3(N&I/6[hthIL52Hdsn!PUVe5T97LC>0oLg$Vo-qc>D;1.=7J^g-en$nks
%.$%D.;)!KT,`OVXprl[!?RkgrQl4hjO^D4]!r;u+ffln,\\r?SlP'o`*r6R'(oiV?BS)8>C!=o#9ZNf8#:)586P#MQCtc]2"J5;i
%*A>qda+pc_B_nQh+)edj]1.>'d@fBI4@0R/[eVcDf58>K/r5B=J=N6i75K;LBtm+5.^M#%q,OY)Rh[g/:=UKJ>c1Q'k#Y9l%)d0D
%85#d%:>1#7.'tS/;1R9J+c<E1iZ::9ZXPD0+=]%;*^imk]bGU7b4oGd*VaObTiLOkIaQ6d[CV1XFtZp7AWrUP)AWSg7W)E+gh?U^
%$6=Z(SO@R_aP>Sjj/Zt\YWG9="_a>Aoh+ag(hIkp46DCnmN9^`%7<.iFGP&0-M$]3f$$'%]@Z;(dp0ZAd@&D$:6IfPpk571i.#a]
%lo-Qb;2^e3Fdl`>r&f3:V!n09m(Ej-Nu[%]FUDha)\Ta(O3<KV3AMNBP:N$DkF3M-0/M_[DYeb,,d*X(B1Nm:_s!r]@r5XL+.^]X
%S^DtX)H+U>B-;,g7m/(H/-%])>cl*QaRYYlQ.$LH;2q87AkJp5>l;)\^]'(o`5YLRSZ]?8?!F+pbFA"l]K8t'BTHOED:TWIZdj%j
%6;mp-TjmlUh9pK%#b((jX"B+?kc%2G_p:5eZur@nq8Cel9n6tD/!/C3CX`dQ*mJWc1,Ta[Og3s4LOHi6gtspQ8s%XJ9bgUTUWttS
%JY%rJNG%!u[l8.EeFSFrmE9pgn)NfaHrm4B/5$j1=Lp\Lg=72lTVa1gcuLi0EBjbk`s^&*kBT'7*<(!8<X;plXWABFbIc&.?gEC-
%d595KFSF=GGPLg9O1/Ea4^TCkJ;WSID'-k3C.M+hnT[C3cK/5X1:a3n.<5:6mZV7'-QC%NT1b+9K^9n4Bt4t:p)QaNe_cEb9RI_=
%)h$tpiG:ttHj;G-L"9,DS%QS!T@YBgk7;ETSX96'9olcSpH@CfM'h.^8]#e-8TF;$W,\AOl=Dh[!2(&tE6"e\>)PF-<kY5oS6p\0
%[WPs2B$nMepW-bjhbTEqh!HJ4e*_+Wjp+H15tN=fP-F:d=`1Z04Pitb=+k!A3gG_+9\"^?AUZ*rDJLclro'j;jNHA-I,6f9K#@P;
%ktDo\o9ZYQkOIu0IFlOpOaT$V6HoEi&+DiQ_obJB6[Yr(@;c,7LA'03h"C42=h^q0,$!!UNb;:(G&@->k.lRV`VP7l9R>$^5V;nR
%?VTMtk?WeOV2m2)B=f;^^=EVH2a,Q5\@C2]#+o5pn[8P6lT5do_C[(O`HQ!X.nl1kF`Y5N+Sc@]WR:mVcL?+i-qu_i4)Y=,oUZq6
%p(+?G!T06UU%>uG\fWUYGJ(qnpO0^AKl:9FaK-4KV\E:1JT?U,U4U<<[Xh*533dB+kci$SWQQhoa#sl#LMZq?rBoc5SX6s^qmJF%
%:Np/_^VQ7<ID"rtn$:M<R2s6j?EZ_C22Ugnk)YF\P!!E2MNJbo,1p:9Hp[@M?n^?KFsO!EnuiCKesY;k"jU$Rj[88F<*sO*od0"2
%gj%nIMdmR`[?*CFZ6%Y!Pn1C6omjne+0WF0.ZsJUCik'iWQ3cmql\sT=6Tmg,,6h-a7rOCn3F;4LQ7[T_K'fkjmg6(='>B7?gdc8
%q^gXd@8/@^/'>0)Mj6<S2bIG?ZIHJnF'b!?jd](FA=kMV;hF)RD6I?!8N#crp[;jm?JegGU&28GWlI1R[U8"B]0>*F^j!b2:!Er5
%jqUP5f[@#j&-HUhK'kl<X(qk2ZGV8(Pd+oRWbG2Lg*^D`nkX+f?@C_+LORGF,[H+spEN0@Xt-W4WYG4q3MS$$4f$3]@o>QR1d'@4
%%u9s,m]1d#WQ3cmqlWnW92P^*\&XLlGQ#2%'?[-45+;oLCE9^3MJ]haHehd"FN__Z#PmLm*RmNpj6G]iTP?1'K`2knStnJsL%p#X
%gtX<]I9u>>3So&=CKK_n;hc:cpCCmVSF=Xld!adbo`O';4'psrq``m1_KUEe+^Yk@\/`UF9/5ZM769+-Y+2d*/AaERDK;]m<73>l
%j^<7q5PVs25k-!L[=%m+7udJ]g.(dA2n5LJ^=IagY:octgBHK)lPLlJ:@)bn;@2Ug-9KM$/@sC[LnUN`YMH-u9^g.6q+f64Nl.En
%2JmU7&H1[a^UW&,[.!mDl2csh*O#"tI33BSiO_:.X""^).Zl"t;?6hpUs!n+1c,gu<Q"@4Ihtpdm*dO.D][qcqB@`,$t1T$mEXQ1
%;Oe8^j\_ml]1@GBMR7IQn)('gaBu*IZ*A5Xa+^A<?[cK?an%hXFPcOWj2p_ImDhFuo'uCd^SgPD;)ZCpP`J's8]_n/-*0G50O9i(
%:Knp+eG]ufm9;i<P-1`1F8GcFp)TCSZqsUG_o;(oDoqU\U?MPQT4S\=AKnh#fbOn=B^2B>J1UYME4a:iQIuV=TYBMqGo$&tS"Q5c
%AZP]`FVgI2Bde:XoI9[OQYUJ,]*5-e<3+WsU+1V7$H`jRD2G83dDH!J/)+6ks5rL.d>MHjdT$:qE>c6^,SVA`BB)oOZ%?BRmjLUX
%.&r-(Y8'sC*!3`\W6g_)(0-D2YZg$JjHi[a83lUgOFK<?GRkOU*I\oNO11nSHR;/jJI;&DYVmf-^iG58';Yt\$q0?0T?-/=3^Mlo
%*S6`(F?FJ&DiR?/>Eq66rQtCupZ506^?pdRna=TfGPLa7O1/Ea4^[3MY%4EhLJWo>":E4.(:E&8r:0os@.nq58W*Oo3<g:,mn:`=
%IGVScfL.iI?LEL7qk!##_#&0L2*S_Bj)$Gscc89j,'I!.bWgbA*s$`J.^&+(+\YVNa:g9_238H'D#Dj#=(@m;X[EJ,%fpHk,cSn`
%b(sj),61HhMR9Z,+;.H]P11,u8u@6;Tg%E*MQu0o=<'WcSLr<B-eV/d#gm<JneQ[d+tR&Dls5^0;<SWiRdacrf<nf.MU0-c(#"OL
%/@2;gpJW.uhY-mA%"NUoCJVR#!;6s4QCo0cTk43Kla-\]Tlj"S,JMb:1-eA<X8)%7>jcdE]m^>]fAdp=o:(dgfiH`'`0["DDJL^t
%)Ji@HE4d#P6t4UO,uMS#\D-5oW/HRFF)$-fVoQEpqmK;1b5r(,nfR]<m3XNaT#^qD"UWM`LAYBJ_2]TAZnM18^5oa!o3Ip8Plt5X
%/`8g418hr%6-a]Ia*10DZ+d_Yp%Vr\EOF+OICsoimonpLm7'kEZ=9MO5QrRr7t@Dj?6VTkO!(D&'`)]PXZ$RZV$4\50*gJ]_5EUE
%DS0mB6X=t%a5!cjIUG+r7f05gWJdX!eF5A;;]KXK8aWr\8iN\OXPQTb?#D/"^hf%q)qlrLqTBD)f`gfEh0j\-G(a,@rHr+=E:::2
%npMQt^Y3l@Se/!s%dI?:PV%H,Q&oGc6jlNqqZ?.En-c8G]Amr1fji3k6])4N6LL)-R=,%=Lqi>kg^2g24]+H%IC]:p?f(PI[MQ[D
%@t][6;DrmGA.dDrH:$(,=@ZR_@6_4b?[d5ea5oM@p[Rrk^<_g6k"Hl;neO)"0Np?Y*2T]J%3X_2qb)2tnQt30U""kA\/Sj/j_N>I
%+SKgd]11'N;%E9B'AmD<&,-+)6l?=308]HG.H&t8$%_6Nha`PCV/lBO3RgS(0?g>cHG&X[D`\n!krXe\_4U7<Bo::O9'1:Wg)BN"
%buuCe%rZ,gm`U##DkH0=3X*Jl;'@rtW716Te]_Vp:C&rrQ^e]9erVuT1'?>%_gqIB^>/JQp1_7A;_BljObDHF*-3V8b&?YsLF+47
%"0"5OmgCVEOQ1*,<8[H"^[4r;LIsk1n&7stpQ\M;^?(?oUYQ_JT)[n0+)bKa]DQ@YPb]?p7%Ti^jDOUCReWZ'[YF,sgfe"_h+%+W
%^>/DOp0#,19<KcP4'6q1+Z,*L.8W0GF28BP2tMq5)\NnZHNi-74aV0+CqN[K/oGIG]kLrprOX8UV"8=KFPld]j72i^N`Z#JY)g%T
%n6H'Vg-X;BeERNo\Cr0(3lFtD]6Yha+VImI1h!02V1;!>D+^M\]WImsInOeFra?;f[!f=q\aOj=qsiZ\a%Lf+gW/&4poZSaaH38\
%*=;Y"AiM]k!(.2.?'^2X+BqJ-"`;c43NdNsanN<GO9j+Uo(jl;"5]A*U&1E/Wb:)<g<]f\73?GTs19,\lj6*pNl;;1L;kSo6`>^U
%]H,_8ML-*dSDPhB>dB0_fgueg4J>:cG\nBG-Mo,mH5Ph?jNS+([k^E:X+D0]!b=&SYQ^)%:,knlUk??7a]^]SR!.54\^*G3Gh7B$
%ob!TjTop''s#R0_%(cKM"N26P0,6&Jq5pq>K[1_E['02bY)g'<nm,N6'=0-)AIiVAnesZbC/qO6XeD:J;-n^\OlKoCmeV2*/H<F:
%q:%S-iTQoK5c^ep;k),K:%F1&(GoKn\+p'3Rc`Q\Ld2?*M?sbi?2bQ2^&IZt$%B)\rknc;\#L/Bj6Df0oDKghkXV!3*Iddm,LSY7
%iZo8EK;+EXmiJ"TTU@;8n3B@&S-O\AIKe-AC@=?cX6T;F<rP@g^p<Anbt`f(0Hhq;%VDL_^f+DSXtS(qLpM;:fR5fX4$XHUR:HlF
%?`GfM&7SCYgDd!gbB^WN%Pce+X'0D1F&*;p)WIVr-!s#+OpLiCGhj:fa"Ch&^D,.lOui*r4;^1O\@DDq&2l,9LH0ib6NhoU)judI
%(paV;+8W-+&R=u<!0Pk*Hj,V".[1FR,;XedIB#^@#BM/:S:d_ta8J8XZGIZdK5?A(p4klBHriNuVkcBT3S=RC(\tCfH40FR&n?.l
%=YC)d(0&1P%_<K1b[LWq7o$$"mdK,_@g3&h%<*U2+:JW=!e$)V+T<?-3PU'!4SJ'm(O]+uVVd$t1]?n%lH-(hc/A47,4r$LdprUH
%a_<OQ@<O?Ai-qc$&n*>iIe3pBebKgCB%(YiX)VH-#Nbc7H/_]ijI!Ai."Ia3]1T1-8<tn17q\bUY_,V`D9/aZ3LS/7-Ac.C@K7HG
%Q>U(g;2N&e`N/MMd%mY'.Ai4umeO'bpNTj>0(ndo<1n;t^/;NqU<)]_iBu4DYVN`dj0e\e0M)nKka'Zp$$os/UhY>U'KdK&DZ:J8
%GDWLdn7e5fgVs=Wq3!F."ndr[8sq*=Zk:h_?kTH$6uS7OkD6+[P(%K.cSp<EMUV&_-$M=e4HIE.Ca2.Ib#t184]Ug6=huXZ&i-,9
%X^,/E[oTPYH'U[]:7U]^l0d5/GNS3Oc)Ee^b5"Dp;T,3JX$Hgf<!Ka"`l+$u"K5t(;tGN1h1\E2ob@aMkQ@>1C3V&HJK]7rTo+J$
%d@=Ma[m1%e9dBiIT&m&o,pNp:guXm368P>dQ];>:MjT"!:QDCr>3ujj)X;4u4?[f@+Y'UL^.f9AF)1jQL.W@(dda:m6k$VE85Fn<
%/'1^,!\BT<a2&4F>a>J+aq8a5%8)MQm^O:g2"UieC!JlC2b=b9Ho.fP,E7Ub7!O8&K_as=5dObQ27)P_cm<DE;TCU.N[:T#`m3AB
%W#7R=E."rG?@V1%!a^n$Kba/4.a5e^BNaG,9Jf1EIgDiV(K#(9J1QH":+."\a%D]dLG?[H=8&F5Q$]GeBYh]aYVa8&ZLa'ZcTef(
%Ls'6,Y%CtkD(S83:5qDk/.idsYnM*g]gC16Y7h(^Qj;Z9)@+7hKZ1G$LklSRK_$G`/1RU?B%H!t>ff4k1;XnO@1Yid9IJ&N9e0&"
%m1mKD(s,-NB;lI/7%j^85#sfe69Q"uCRaRW1M,g7=V?fpC9I?i+`&m75"$D4h.12G`*eE>C/mp8c,Xj%Y^Za):?t@4*eqr@/a^Al
%H_U\\JKo4'9Q9Ka<%;`;>=lXoaRRoo%gPeMj+:7Uo)_u8ake!b#^kEnc<k:fnmR(km)rH"]%Q+sPU&$ih:O&`"rsm!TYRDdo"ci=
%6dAQ@VtEb<LUZ7HXd`1naU\:>HF$7#mY=OArflSanP2,\SC^2qNtN=;mcK&frO@?'qeDaaH,KT9A[*c!'B$!-6aT/u>Xt,q).8ot
%.Cj<Z;F*!B(0u'"*_]%qhl9+)BNOn%ap+^G>FX3YX-QuoFD3F1Iu[TdG,!^qC4kNY*,:gg\[ZRl7H][99G0'@h?(Z(=+5GL9:I]+
%hVEdI02A32k?Yje@'KN1^dFEQRG7J>QAk"u;Ca4Uc[0-V8Gm<h>hrrdnHNfklDHR0!th6n/u^;dPhg<aFS,&1W_[V>/j@p-hrDm$
%cPJt,G`+^]majT+eD2^'i8&gjLZdi/r,Ptm)=Gnr).tb^!hb)G@_sXfP#\m!HYW(3&V&trDWXM.EfcVH7ramGbr8TS4a#5%E't1d
%;Mf2UZ]LNW6"S3.]L'i<Fk]0>9$bi,JX:*4Qi#pIfR5qkp0)jV7^<f\n\.Qt5p!,T0hFfABD3]jaEKQ^H)U1Q8[#npTkhNG_6>J0
%&a]$,b*SK92=A9_.t%je7Q%S-b>#^>6\,\qMfAo;Dk!30:K+`p?$AP(+2=KF(rtatP9"ja8t'g*5@%?<rd4m.Pa5Y4'go"G=@f/b
%\r=>/lh1V_4HeSB>OaUQbSZp65$lWHf)Q>``$^"cAoSe//ZPhe8)j-ujkV`DPltXF9e6I]HNE=odGQpg\%;-i[G5>]iN<qO@V`YJ
%k5+k@:LHG\E(Q8M[%GsIXuLoEk*[=*i:'A^)]1i?nQOEe`3Zuo.3QBXNO&/2fl'Yl+oiAp6ia"WjdQGe]9As.J:_So.r<Gto`h!6
%V;er"Uft]MH@?mX-_4(6.GWtV1O:2Al0\!8I'd4LC\o)9)atMfDXkUlP;I^mJe/p0CBTPT-!s.\R&e@XT2A;Vi]V#.nnQpQGW^2(
%SuaB+:NUC,JB`@fHE&HXi)fF7Te@GUWJ>BSH$<o8]'l?QNJ5mej6Ap`oF;mN[/KN@L%f8G9"\"I[(Zdkp+<clIY+0;[4h"ZN48c7
%gHPCK=`/.JpW<1tBX25oS<r2^breuj+k\YFeaMXkLoLKKerBiZ$9"f.-Tcr1,XFd6:'ad0JC)T%"rs(RmJs-d3#H<JbH4%/B'eL^
%FE-6LWPQ"W?9PG\rS>uKgHsjX[_M_8:f5I@npUtNL%1[T^Fj3=/4OdS$i%d+=1N[]%;Em(h&K7E$efq&Sb6O>X!&D9a/@\/9m]<7
%\=Tnj>1*9aE;I_8FM;Xl.XjJU"Yr3C$]j/VTqdqb0YYPT[JeA<gR]M]I_IrPm^LhYjaQ$,:u2)U8)NaI4[d&Fj\Ob.Z)S+(G`*(S
%hNX-<.%k4nHWWr1(;B2O$mpp?pn>9h1#8RL22&F1k#m+@>7KCEk)T-LaYeZIWmJ4nI4J6#jST'bgM/c(qPoR624%>aGD.0IMZf'<
%_f/_,1V^g@idpcIg#aJ"O&bo]3:KbZEqCBli,hr=SK*aIrB>f!+/7aFj`Xsj.XQO?%WP?deqklE&(i]N9nCO?84797;h*P2`[l5t
%Rji6RBem(ho\Ku::-PoW(AGfC`F.`]GK$I;\)$Rr*!24M^YaSEV:P6L3MNSXJ+lRE!;t5gpAk.IP2F8JL:i)`?T"]XqE/>!_k?$.
%8K-[GeJ(-YR<ZYdnVf5Z:o2?tkOV=>Y4FK0CXX0E)4/%[i58^<AF'?90ir:uJ%*=<\-I2,KG[rPfhiXPUCM="Ml;E"(tpM%0WJ1[
%VP'H@X5;\+7_(PY&6e\&Y(CCL+Ns,G3VZ/7JA'<Vekr]Zk'doG@Pus$=3-QneHqch!rc\P;K%ijZA_qK=V*^klMKhS[jPc;VQ$DT
%&T)o&H"D>ZW9X.0pmniqEu>Rf7NYIB]Sng6@G'S0L!u&2g&(#hl([@g7*s6>,Eeo3't4_;fKE"!;NPt#23Vao&"F>&Cj/^@O.9Z"
%+H7rq4&!JM15@oj["+SQc.IFp:nEnrWikO1MpJ/K`jnIs$m>lOrPP^Q6JWgr6-eA*;q?I(>+gX>=%edD^IMe4IR:+!mK#1:0g%ri
%(F27K0q7#F1%J/qX";S)oiDUf@*DWPjZk@ZeD]7e.:1`I]2)C'o=EHuq[i/n3N:%7U>pi%?@Rc>.fS<Q`$ceCS3nU9Dj=CQ@c\U(
%:AJ''Ks#!cWK-Z;Z?G[+S7>u&`"pZ3PcGiR?H9u)=D'E#Ft"&V0i9JPbn\?rOi:b3c'SpB`C?LmHQ,Y:45:#rApK]dhX`a"5a]ZG
%l&G&3k69noVsef^35`JOH]DKNb%n(lRM?i\;tY.<`l>!10ET`kaGpPQj-)W"m4e_G<sp'VKmTs6MgF(/Q_dc$"(4]ecMP2MjLVc[
%1&H,p3?j6VK3:o]<??m,WnN1u8ZDH+m\o8r0MgBt1H*;3-#ncC.#b&C9:@]MR"A"6c;<K;];g/dlWsn,d1.[9JWsk4K6`qSDH4<E
%ZXU/BpXQ"19&&AX<NYg-U:j(YkL'0E>Ap!d*dj]<215aQE"mp9)r_D.G4T@P15c0$:PQP;/I+qoI0h&S,mX&e@TmC7C8=k:Nl]J]
%Z;mFN!U!/e"'XRt^)DhDd/rTV/Vtpjk;t:##@*9B6nr_mDe=C(RE>nZmk-793EL@2Ada^r6+j>J<j93CmJ&FS&iLQmP'Vu;%p47^
%[geh7=c_h2(2PVG1iV(&HU`,I\[N]/=C6N3O0bO=>U)_"ituP,0Lc4IS-W9H%k..NGQI"1`+7c;.)Z;_d?!_kA*B#pmHQ&%-FU4L
%hB8$M_bm<KohWp[!te@p[g;SA321p"!:i!ki'.B*/i-4d=`=OKk.29&Y=^"7q7LnC=geI8B.faENc%WJI#?N9`XmHgkKIGNgDh]+
%Xa)_o?FHH1:NTCe#0,n_I:Ub`$8akX4ik/'Go?KZ,$#A:O<1'B[Y!5iV-n#QGbl3Nb#Zc42>!5lQ)Ub:A7l%H'\3m%f+gt%pH$&Q
%0E%"KiN2JG_rpu2Yd!@"cX=,sP+KSH*]ble<K@h*bIYLhY\2^+n%E$(=qKqh*k`LUh-mEL(P\6)NZQd'EJ=/NiOiqh/Gl'4k7sis
%mXC%b:Ng+(/UDa9^@oGlY?j.$gM9=8.'tuGJ&a,p6dqPi8#KnEN&ptMbL%sX/,'Gj6`jeU1O39lG`p0%G''q(DiVeS&pg"Ro<p$Z
%_"JPf"!$5j5P0WJjIk,aJ7OnSBh[m*UN#C8d_&#R%Slo-?dOD23?PoPJEGMu-dEW0psn`M5cZ2:L2tTi:Q7#VORC&tfD1/DY,)rP
%Wh[KWkTQr#>A9W2<I]foi#=[-6AGkJ(GM>e=:^eV<Vt?Ia+AC"VET97?,Ao%(^HFq#ct[*Xo#bNTZ9V%3Y4N8e:G92dQa-UUP6)7
%C!PYG4Ut%=B1<3,RVep\*&chkc]"EKF8t_B>JXaoN%=OD:4&ik/[^?so7U!]!bBUK.6#hY3R^:;0nWr,k0+KZ.H!*s%d5f`?9jo7
%]\:H)3Q'V6oP2\@l.Th[n.fD8QSl[)NK\B"1O#JDR(<*2:Y`R7cPc^MLQ[hg*u5$?%s)=sm/\m6b^]qDL22qFbWqnL]Tum_#t<<Q
%6QAhMH&"\,&"[Xb*969ABO8Jk\tGs#"of5m%%=p(iB.O;%N;CY?4@hFF3UUG1\;*23AYnHGqip&*ImZtbEs/=WK;n'_J^"r_em^^
%HeF,9pCBn"laAtJFm>Ok$sl`ij0WHjD4#MDC<m;f.Kj$2m?o>BXnXHSBD;J3=P]UQljY9-),0:DmH#Cqm0P(o5]1p\j:JZPp<:U?
%r3DY`FAN:Qoj2!t4\7*Fo7rYJo@okQB+d0&C!ZEo6jdMO4J?`uXn&'%T6fss4Yt*$pE&)]NLj1g5QE0]p*LgD<#gJQ$Dpg>%/Ts=
%QP)L>39(-&QDF'We`Qqjqot&\Z^S5Ec[@!$]HS\V)$>\H[l;7&cQSdp=lpf8M2UfJYe0sU\[c(cD<$E@&lcOcXr,nUX(ZJ8fcj`g
%7hD=G%?l>?*r35Oq87atn/h=3NqlelN>QG94W`lPX0IgHH)YMH&PAiW(->Zj33GAMnAihna5W:CZM$5O7u%3>KP5Ei?9[M^Kmk$f
%pD3V3U:26Ec/8QW5Q&S%^AY88ko]r7++O'p5Q:8X^HR3up`KP*TE"[NrUV-1cThBuTE"oZrq!o&iW&c707Wc;J,H3orPQDLn\73d
%f.[1"TE"[>s8#Okr5W1Djo>+Rru24^m0<U[&-(mDq!\4]n,=DDdjrl~>
%AI9_PrivateDataEnd
